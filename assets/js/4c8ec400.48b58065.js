"use strict";(self.webpackChunkdeveloper_docs=self.webpackChunkdeveloper_docs||[]).push([[60856],{15680:(e,a,n)=>{n.d(a,{xA:()=>p,yg:()=>m});var l=n(96540);function t(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function i(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);a&&(l=l.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,l)}return n}function r(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?i(Object(n),!0).forEach((function(a){t(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function o(e,a){if(null==e)return{};var n,l,t=function(e,a){if(null==e)return{};var n,l,t={},i=Object.keys(e);for(l=0;l<i.length;l++)n=i[l],a.indexOf(n)>=0||(t[n]=e[n]);return t}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(l=0;l<i.length;l++)n=i[l],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(t[n]=e[n])}return t}var u=l.createContext({}),d=function(e){var a=l.useContext(u),n=a;return e&&(n="function"==typeof e?e(a):r(r({},a),e)),n},p=function(e){var a=d(e.components);return l.createElement(u.Provider,{value:a},e.children)},s="mdxType",y={inlineCode:"code",wrapper:function(e){var a=e.children;return l.createElement(l.Fragment,{},a)}},g=l.forwardRef((function(e,a){var n=e.components,t=e.mdxType,i=e.originalType,u=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),s=d(n),g=t,m=s["".concat(u,".").concat(g)]||s[g]||y[g]||i;return n?l.createElement(m,r(r({ref:a},p),{},{components:n})):l.createElement(m,r({ref:a},p))}));function m(e,a){var n=arguments,t=a&&a.mdxType;if("string"==typeof e||t){var i=n.length,r=new Array(i);r[0]=g;var o={};for(var u in a)hasOwnProperty.call(a,u)&&(o[u]=a[u]);o.originalType=e,o[s]="string"==typeof e?e:t,r[1]=o;for(var d=2;d<i;d++)r[d]=n[d];return l.createElement.apply(null,r)}return l.createElement.apply(null,n)}g.displayName="MDXCreateElement"},79827:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>u,contentTitle:()=>r,default:()=>y,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var l=n(58168),t=(n(96540),n(15680));const i={id:"configure-game-variables",title:"Configure Game Variables",sidebar_label:"Configure Game Variables",description:"How to make variables from your game visible and editable in Creative Suite",keywords:["configure","game","variable","create","hub","playable","luna"]},r=void 0,o={unversionedId:"playable/playable-setup/configure-game-variables",id:"playable/playable-setup/configure-game-variables",title:"Configure Game Variables",description:"How to make variables from your game visible and editable in Creative Suite",source:"@site/docs/playable/playable-setup/configure-game-variables.md",sourceDirName:"playable/playable-setup",slug:"/playable/playable-setup/configure-game-variables",permalink:"/docs/playable/playable-setup/configure-game-variables",draft:!1,tags:[],version:"current",frontMatter:{id:"configure-game-variables",title:"Configure Game Variables",sidebar_label:"Configure Game Variables",description:"How to make variables from your game visible and editable in Creative Suite",keywords:["configure","game","variable","create","hub","playable","luna"]},sidebar:"gettingStarted",previous:{title:"Playable API",permalink:"/docs/playable/playable-setup/playable-api"},next:{title:"Standard Events",permalink:"/docs/playable/playable-setup/analytics/standard-events"}},u={},d=[{value:"Attribute Types",id:"attribute-types",level:2},{value:"<code>LunaPlaygroundField</code>",id:"lunaplaygroundfield",level:3},{value:"<code>LunaPlaygroundAsset</code>",id:"lunaplaygroundasset",level:3},{value:"<code>LunaPlaygroundFieldStep</code> (Range Slider)",id:"lunaplaygroundfieldstep-range-slider",level:3},{value:"<code>LunaPlaygroundFieldArrayLength</code>",id:"lunaplaygroundfieldarraylength",level:3},{value:"Implementation",id:"implementation",level:2},{value:"Example",id:"example",level:2},{value:"Playground Sections",id:"playground-sections",level:2},{value:"Recommended variables",id:"recommended-variables",level:2}],p={toc:d},s="wrapper";function y(e){let{components:a,...n}=e;return(0,t.yg)(s,(0,l.A)({},p,n,{components:a,mdxType:"MDXLayout"}),(0,t.yg)("p",null,"With Creative Suite, anyone will be able to create unlimited playable ad variations in a matter of seconds without having to touch your code or rebuild the project."),(0,t.yg)("p",null,"When preparing your game in Unity, you are able to apply the ",(0,t.yg)("inlineCode",{parentName:"p"},"LunaPlaygroundField")," or ",(0,t.yg)("inlineCode",{parentName:"p"},"LunaPlaygroundAsset")," attribute to any serializable field (i.e. public fields of MonoBehaviours and ScriptableObjects or fields marked with SerializeField attribute) and it will be surfaced in the playable editor in Creative Suite. These fields should be used within your game code so that the default values are overridden when the game is initialised."),(0,t.yg)("h2",{id:"attribute-types"},"Attribute Types"),(0,t.yg)("h3",{id:"lunaplaygroundfield"},(0,t.yg)("inlineCode",{parentName:"h3"},"LunaPlaygroundField")),(0,t.yg)("p",null,"This is the most common Luna attribute, and should be used for the scriptable game objects you wish to edit from Creative Suite. For example, you will want to use this for all text and colors for the end card."),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("b",null,"Supported Types"),(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"String"),(0,t.yg)("li",{parentName:"ul"},"Integer"),(0,t.yg)("li",{parentName:"ul"},"Float"),(0,t.yg)("li",{parentName:"ul"},"Color"),(0,t.yg)("li",{parentName:"ul"},"Vector2"),(0,t.yg)("li",{parentName:"ul"},"Vector3"),(0,t.yg)("li",{parentName:"ul"},"Vector4"),(0,t.yg)("li",{parentName:"ul"},"Enums"),(0,t.yg)("li",{parentName:"ul"},"Bool"),(0,t.yg)("li",{parentName:"ul"},"Range slider (see ",(0,t.yg)("a",{parentName:"li",href:"#lunaplaygroundfieldstep-range-slider"},"below")," for how to implement)"),(0,t.yg)("li",{parentName:"ul"},"Arrays of the above types (e.g. String[], Int[] etc.)")))),(0,t.yg)("p",null,"To see how to set the maximum and minimum length for an array field, click ",(0,t.yg)("a",{parentName:"p",href:"#lunaplaygroundfieldarraylength"},"here"),"."),(0,t.yg)("h3",{id:"lunaplaygroundasset"},(0,t.yg)("inlineCode",{parentName:"h3"},"LunaPlaygroundAsset")),(0,t.yg)("p",null,"This should be used when you want to create multiple variations of your ads with ",(0,t.yg)("em",{parentName:"p"},"different")," textures or videos, but don't want to increase the overall build size. When using this attribute, you will be able to upload images or videos directly in Creative Suite. For example, you may wish to change the game icon for your end card."),(0,t.yg)("admonition",{type:"caution"},(0,t.yg)("p",{parentName:"admonition"},"LunaPlaygroundAssets must be assigned a default value in Unity. Assets without a default value will not be shown in Creative Suite."),(0,t.yg)("p",{parentName:"admonition"},"Testing assets fields in the ",(0,t.yg)("a",{parentName:"p",href:"/docs/playable/code/luna-in-browser/dev-environment/"},"Dev Environment")," with a Develop build will not work. This field can only be tested in ",(0,t.yg)("a",{parentName:"p",href:"https://playground.lunalabs.io/applications"},"Luna Create Hub"),".")),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("b",null,"Supported Types"),(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"Image or texture (.png, .jpg, .jpeg)",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"In Unity, please use ",(0,t.yg)("inlineCode",{parentName:"li"},"Texture")," or ",(0,t.yg)("inlineCode",{parentName:"li"},"Texture2D"),(0,t.yg)("br",null)))),(0,t.yg)("li",{parentName:"ul"},"Audio (.mp3) - This type is supported only after version 3.3.0.",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"In Unity, please use ",(0,t.yg)("inlineCode",{parentName:"li"},"UnityEngine.AudioClip")))),(0,t.yg)("li",{parentName:"ul"},"Video (.mp4)",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"In Unity, please use ",(0,t.yg)("inlineCode",{parentName:"li"},"Video.VideoClip")))),(0,t.yg)("li",{parentName:"ul"},"Font (.ttf)",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"In Unity, please use ",(0,t.yg)("inlineCode",{parentName:"li"},"UnityEngine.Font"))))))),(0,t.yg)("admonition",{type:"info"},(0,t.yg)("p",{parentName:"admonition"},"Please keep in mind that due to technical specifics of implementation, all instances of a class with variation-controlled fields will receive an updated value. That is fine for Scriptable Objects (because those normally exist as a single instance anyway), but might be a surprise for Mono Behaviours."),(0,t.yg)("p",{parentName:"admonition"},"For example; referencing the same texture as a ",(0,t.yg)("inlineCode",{parentName:"p"},"LunaPlaygroundAsset")," in two separate scripts will result in one combined field in Creative Suite.")),(0,t.yg)("h3",{id:"lunaplaygroundfieldstep-range-slider"},(0,t.yg)("inlineCode",{parentName:"h3"},"LunaPlaygroundFieldStep")," (Range Slider)"),(0,t.yg)("p",null,"This attribute allows you to define a range of values (min and max) that can be applied to an int or float value, as well as the cardinality of this range (i.e the number of increments)."),(0,t.yg)("p",null,"In Creative Suite, this will be represented as a slider."),(0,t.yg)("p",null,"For example:"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-cs"},'[LunaPlaygroundFieldStep(0.5f)]\n[LunaPlaygroundField("Amount of lives", 1, "Game Settings")]\n[Range(0, 10)]\npublic float someFloat\n')),(0,t.yg)("p",null,"This will add a range slider to Creative Suite that allows values inclusively between 0 & 10, and will increment between them by 0.5 at a time."),(0,t.yg)("h3",{id:"lunaplaygroundfieldarraylength"},(0,t.yg)("inlineCode",{parentName:"h3"},"LunaPlaygroundFieldArrayLength")),(0,t.yg)("p",null,"This attribute allows you to create an array and add/remove values in Creative Suite, for example, adding new characters to a scene. You must define the the minimum and maximum objects for the array."),(0,t.yg)("p",null,"For example:"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-cs"},'[LunaPlaygroundFieldArrayLength(1, 5)]\n[LunaPlaygroundField("Character Names", 1, "Game Settings")]\npublic string[] characterNames;\n')),(0,t.yg)("p",null,"This will add an array of strings to Creative Suite that allows at minimum 1 string, and a maximum of 5."),(0,t.yg)("h2",{id:"implementation"},"Implementation"),(0,t.yg)("p",null,"For each ",(0,t.yg)("inlineCode",{parentName:"p"},"LunaPlaygroundField"),", you can specify the title, group and field order."),(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},'[LunaPlaygroundField("Field title", 0, "Group title")]')),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},'Field title: The name of the field in Creative Suite i.e. "End card title"'),(0,t.yg)("li",{parentName:"ul"},"Field order: The order of the field in Creative Suite"),(0,t.yg)("li",{parentName:"ul"},'Field section: The name of the group to which the field belongs i.e. "End Card"')),(0,t.yg)("h2",{id:"example"},"Example"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-cs"},'[Header("Playable Ad Settings")]\n[SerializeField]\n[LunaPlaygroundField("Color of the player", 1, "Player Controls")]\nprivate Color playerColor = Color.blue;\n\n[SerializeField]\n[LunaPlaygroundField("Speed of the player", 2, "Player Controls")]\nprivate float playerSpeed = 1f;\n\n[SerializeField]\n[LunaPlaygroundField("Number of levels", 3, "Game Controls")]\nprivate int gameLevels = 1;\n\n[SerializeField]\n[LunaPlaygroundField("Relative game difficulty", 4, "Game Controls")]\nprivate int gameDifficulty = 3;\n\n[SerializeField]\n[LunaPlaygroundAsset("Game Icon", 5, "End Card")]\nprivate Texture gameIconTexture;\n\n[SerializeField]\n[LunaPlaygroundAsset("Video Clip", 6, "End Card")]\nprivate VideoClip videoClip;\n\n')),(0,t.yg)("h2",{id:"playground-sections"},"Playground Sections"),(0,t.yg)("p",null,"The ",(0,t.yg)("inlineCode",{parentName:"p"},"LunaPlaygroundSection")," attribute can be applied to a class in order to add all Luna Fields and Assets into the same Creative Suite section, making it easier to organise your fields in Creative Suite."),(0,t.yg)("admonition",{type:"info"},(0,t.yg)("p",{parentName:"admonition"},'The Playground section will be overridden by the optional parameter, "FieldSection", of a LunaPlaygroundField or LunaPlaygroundAsset attribute.')),(0,t.yg)("p",null,"For example:"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-cs"},'[LunaPlaygroundSection("Player Controls", 1)]\n\npublic class Player : MonoBehaviour {\n\n[SerializeField]\n[LunaPlaygroundField("Color of the player", 1)]\nprivate Color playerColor = Color.blue;\n\n\n[SerializeField]\n[LunaPlaygroundField("Speed of the player", 2)\nprivate float playerSpeed = 1f;\n}\n')),(0,t.yg)("h2",{id:"recommended-variables"},"Recommended variables"),(0,t.yg)("p",null,"We recommend at a ",(0,t.yg)("b",null,"minimum"),", to use the ",(0,t.yg)("inlineCode",{parentName:"p"},"LunaPlaygroundField")," attribute for:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Call to action colors"),(0,t.yg)("li",{parentName:"ul"},"Call to action text values."),(0,t.yg)("li",{parentName:"ul"},"In-ad messages such as those found in end cards or tutorials.")))}y.isMDXComponent=!0}}]);