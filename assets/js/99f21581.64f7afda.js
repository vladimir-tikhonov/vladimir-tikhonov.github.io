"use strict";(self.webpackChunkdeveloper_docs=self.webpackChunkdeveloper_docs||[]).push([[24674],{15680:(e,a,t)=>{t.d(a,{xA:()=>d,yg:()=>g});var n=t(96540);function l(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function i(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function s(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?i(Object(t),!0).forEach((function(a){l(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function o(e,a){if(null==e)return{};var t,n,l=function(e,a){if(null==e)return{};var t,n,l={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],a.indexOf(t)>=0||(l[t]=e[t]);return l}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var r=n.createContext({}),p=function(e){var a=n.useContext(r),t=a;return e&&(t="function"==typeof e?e(a):s(s({},a),e)),t},d=function(e){var a=p(e.components);return n.createElement(r.Provider,{value:a},e.children)},u="mdxType",y={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},c=n.forwardRef((function(e,a){var t=e.components,l=e.mdxType,i=e.originalType,r=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),u=p(t),c=l,g=u["".concat(r,".").concat(c)]||u[c]||y[c]||i;return t?n.createElement(g,s(s({ref:a},d),{},{components:t})):n.createElement(g,s({ref:a},d))}));function g(e,a){var t=arguments,l=a&&a.mdxType;if("string"==typeof e||l){var i=t.length,s=new Array(i);s[0]=c;var o={};for(var r in a)hasOwnProperty.call(a,r)&&(o[r]=a[r]);o.originalType=e,o[u]="string"==typeof e?e:l,s[1]=o;for(var p=2;p<i;p++)s[p]=t[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,t)}c.displayName="MDXCreateElement"},70926:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>r,contentTitle:()=>s,default:()=>y,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var n=t(58168),l=(t(96540),t(15680));const i={id:"playground-assets",title:"Adding customizable assets",sidebar_label:"Playground Assets",description:"How enable Creative Suite to edit in-game assets (textures, videos and sounds)",keywords:["playable","playground","create","hub","luna","javascript","external","externally","setup","step","by","step-by-step","guide","how","to"]},s=void 0,o={unversionedId:"playable/javascript-playables/playground-assets",id:"playable/javascript-playables/playground-assets",title:"Adding customizable assets",description:"How enable Creative Suite to edit in-game assets (textures, videos and sounds)",source:"@site/docs/playable/javascript-playables/playground-assets.md",sourceDirName:"playable/javascript-playables",slug:"/playable/javascript-playables/playground-assets",permalink:"/docs/playable/javascript-playables/playground-assets",draft:!1,tags:[],version:"current",frontMatter:{id:"playground-assets",title:"Adding customizable assets",sidebar_label:"Playground Assets",description:"How enable Creative Suite to edit in-game assets (textures, videos and sounds)",keywords:["playable","playground","create","hub","luna","javascript","external","externally","setup","step","by","step-by-step","guide","how","to"]},sidebar:"gettingStarted",previous:{title:"Playground Fields",permalink:"/docs/playable/javascript-playables/playground-fields"},next:{title:"Overview",permalink:"/docs/playable/insights/overview"}},r={},p=[{value:"Adding Playground fields to a playable",id:"adding-playground-fields-to-a-playable",level:2},{value:"1. Open playground.json configuration file and locate <code>&quot;assets&quot;</code> key.",id:"1-open-playgroundjson-configuration-file-and-locate-assets-key",level:3},{value:"2. Add as many assets as you like.",id:"2-add-as-many-assets-as-you-like",level:3},{value:"3. Make an inlined asset customizable",id:"3-make-an-inlined-asset-customizable",level:3},{value:"Ready-to-use example",id:"ready-to-use-example",level:2}],d={toc:p},u="wrapper";function y(e){let{components:a,...t}=e;return(0,l.yg)(u,(0,n.A)({},d,t,{components:a,mdxType:"MDXLayout"}),(0,l.yg)("p",null,"Similar to Playground Fields, which are great for tweaking gameplay-related elements, choosing the first level and so on, Creative Suite supports configurable assets that it can replace within your playable, opening a whole new set of customisation abilities."),(0,l.yg)("div",{className:"callout info"},"Please note that these steps are also detailed on our ",(0,l.yg)("a",{href:"https://github.com/LunaCommunity/Playable-Examples"},"community github")," alongside 2 example folders containing ready-to-upload playables."),(0,l.yg)("h2",{id:"adding-playground-fields-to-a-playable"},"Adding Playground fields to a playable"),(0,l.yg)("h3",{id:"1-open-playgroundjson-configuration-file-and-locate-assets-key"},"1. Open playground.json configuration file and locate ",(0,l.yg)("inlineCode",{parentName:"h3"},'"assets"')," key."),(0,l.yg)("h3",{id:"2-add-as-many-assets-as-you-like"},"2. Add as many assets as you like."),(0,l.yg)("p",null,"Each asset is defined as a simple JSON object residing under specific ",(0,l.yg)("inlineCode",{parentName:"p"},"asset key"),". Let's take this by example: consider the below ",(0,l.yg)("inlineCode",{parentName:"p"},"playground.json"),":"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "title": "Basic Playable",\n  "icon": "", // Icon next to the playable in Creative Suite, takes a Data URL.\n\n  "fields": {},\n\n  "assets": {\n    "my-sprite-001": {\n      "id": "001",\n      "title": "Custom Image",\n      "type": "texture",\n      "section": "",\n      "order": 0\n    }\n  }\n}\n')),(0,l.yg)("p",null,"The asset key (",(0,l.yg)("inlineCode",{parentName:"p"},"my-sprite-001")," in the above example) can be chosen arbitrary - just like with Creative Suite Fields and their class/field names, this will be used by Creative Suite during playable updates to keep the mapping between previously stored settings and a new playable."),(0,l.yg)("p",null,"The important keys in the asset JSON are:"),(0,l.yg)("ol",null,(0,l.yg)("li",{parentName:"ol"},(0,l.yg)("inlineCode",{parentName:"li"},"id")," - please set to some unique value for each asset, will be used down the road"),(0,l.yg)("li",{parentName:"ol"},(0,l.yg)("inlineCode",{parentName:"li"},"type")," - please choose between ",(0,l.yg)("inlineCode",{parentName:"li"},"texture"),", ",(0,l.yg)("inlineCode",{parentName:"li"},"videoclip")," and ",(0,l.yg)("inlineCode",{parentName:"li"},"audioclip")," to hint Creative Suite on which file types to allow for upload.")),(0,l.yg)("h3",{id:"3-make-an-inlined-asset-customizable"},"3. Make an inlined asset customizable"),(0,l.yg)("p",null,"To do so, please locale (or create new) ",(0,l.yg)("inlineCode",{parentName:"p"},"<img />"),", ",(0,l.yg)("inlineCode",{parentName:"p"},"<audio />")," or ",(0,l.yg)("inlineCode",{parentName:"p"},"<video />")," tag in your playable HTML file and make sure it meets the following requirements:"),(0,l.yg)("ol",null,(0,l.yg)("li",{parentName:"ol"},(0,l.yg)("inlineCode",{parentName:"li"},"id")," attribute is set to ",(0,l.yg)("inlineCode",{parentName:"li"},'"asset/ID"'),", where ID stands for the id value you chose for each asset on step #2."),(0,l.yg)("li",{parentName:"ol"},(0,l.yg)("inlineCode",{parentName:"li"},"src")," attribute is set to some Data URI value, can be faux, i.e. ",(0,l.yg)("inlineCode",{parentName:"li"},'<img src="data:image/png;base64," />'))),(0,l.yg)("div",{className:"callout warning"}," In order to avoid errors, please make sure the ",(0,l.yg)("b",null,"id")," attribute in the tag is set ",(0,l.yg)("b",null,"before")," the ",(0,l.yg)("b",null,"src")," attribute."),(0,l.yg)("p",null,"For the asset defined in the example on step #2, the following bit of HTML is expected to be present somewhere in the Playable:"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-html"},'<html>\n  \x3c!-- ... --\x3e\n  <body>\n    <img id="asset/001" src="data:image/png;base64," />\n  </body>\n</html>\n')),(0,l.yg)("p",null,"This is it! Uploading such a playable to Creative Suite will expose asset fields in the editor section, allowing you to replace images, audio clips and video clips within your playable."),(0,l.yg)("h2",{id:"ready-to-use-example"},"Ready-to-use example"),(0,l.yg)("p",null,"Feel free to check the example residing at ",(0,l.yg)("a",{parentName:"p",href:"https://github.com/LunaCommunity/Playable-Examples/tree/master/assets"},"https://github.com/LunaCommunity/Playable-Examples/tree/master/assets")," for a minimal setup of a playable using Playground Assets."))}y.isMDXComponent=!0}}]);