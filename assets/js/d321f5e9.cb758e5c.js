"use strict";(self.webpackChunkdeveloper_docs=self.webpackChunkdeveloper_docs||[]).push([[69386],{15680:(e,t,r)=>{r.d(t,{xA:()=>c,yg:()=>y});var n=r(96540);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),p=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},g=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=p(r),g=a,y=d["".concat(l,".").concat(g)]||d[g]||u[g]||o;return r?n.createElement(y,i(i({ref:t},c),{},{components:r})):n.createElement(y,i({ref:t},c))}));function y(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=g;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[d]="string"==typeof e?e:a,i[1]=s;for(var p=2;p<o;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}g.displayName="MDXCreateElement"},23807:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var n=r(58168),a=(r(96540),r(15680));const o={id:"LP1001",title:"Update shader stripping settings",sidebar_label:"1001 - Shader Stripping",description:"Explanation & steps to fix.",keywords:["shader","stripping","fix","playable","luna","error","LP1001"]},i=void 0,s={unversionedId:"playable/code/error-codes/LP1001",id:"playable/code/error-codes/LP1001",title:"Update shader stripping settings",description:"Explanation & steps to fix.",source:"@site/docs/playable/code/error-codes/1001-ShaderStripping.md",sourceDirName:"playable/code/error-codes",slug:"/playable/code/error-codes/LP1001",permalink:"/docs/playable/code/error-codes/LP1001",draft:!1,tags:[],version:"current",sidebarPosition:1001,frontMatter:{id:"LP1001",title:"Update shader stripping settings",sidebar_label:"1001 - Shader Stripping",description:"Explanation & steps to fix.",keywords:["shader","stripping","fix","playable","luna","error","LP1001"]},sidebar:"gettingStarted",previous:{title:"1000 - Huge Mesh",permalink:"/docs/playable/code/error-codes/LP1000"},next:{title:"1002 - Non Pot Texture",permalink:"/docs/playable/code/error-codes/LP1002"}},l={},p=[{value:"Message",id:"message",level:2},{value:"Explanation",id:"explanation",level:2},{value:"Steps to fix",id:"steps-to-fix",level:2}],c={toc:p},d="wrapper";function u(e){let{components:t,...o}=e;return(0,a.yg)(d,(0,n.A)({},c,o,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("h2",{id:"message"},"Message"),(0,a.yg)("p",null,'Some of the scenes appear to have fog enabled and / or lightmapping data. Please modify "Shader stripping" settings to always include required shader variants.'),(0,a.yg)("h2",{id:"explanation"},"Explanation"),(0,a.yg)("p",null,"Depending on the exact project structure, Unity might consider fog and / or lightmapping shader variants as not required and strip them from available shader variants. Unfortunately, there is no way to force-include those variants via Editor API, thus Playable Plugin has to instruct developers to mark such variants as always included into the build via Unity Graphics settings."),(0,a.yg)("h2",{id:"steps-to-fix"},"Steps to fix"),(0,a.yg)("p",null,'Please navigate to "Shader Stripping" section in "Graphics" section of project settings and enable lightmap and fog modes used by your scenes:'),(0,a.yg)("p",null,(0,a.yg)("img",{alt:"troubleshooting-luna-ui-luna-expert-shader-stripping",src:r(44025).A,width:"585",height:"289"})))}u.isMDXComponent=!0},44025:(e,t,r)=>{r.d(t,{A:()=>n});const n=r.p+"assets/images/troubleshooting-luna-ui-luna-expert-shader-stripping-b7d6880c33db90090eebc353f0f1d365.png"}}]);