"use strict";(self.webpackChunkdeveloper_docs=self.webpackChunkdeveloper_docs||[]).push([[58049],{15680:(e,t,i)=>{i.d(t,{xA:()=>u,yg:()=>m});var n=i(96540);function o(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function s(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function a(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?s(Object(i),!0).forEach((function(t){o(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):s(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function r(e,t){if(null==e)return{};var i,n,o=function(e,t){if(null==e)return{};var i,n,o={},s=Object.keys(e);for(n=0;n<s.length;n++)i=s[n],t.indexOf(i)>=0||(o[i]=e[i]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)i=s[n],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(o[i]=e[i])}return o}var l=n.createContext({}),p=function(e){var t=n.useContext(l),i=t;return e&&(i="function"==typeof e?e(t):a(a({},t),e)),i},u=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},g=n.forwardRef((function(e,t){var i=e.components,o=e.mdxType,s=e.originalType,l=e.parentName,u=r(e,["components","mdxType","originalType","parentName"]),c=p(i),g=o,m=c["".concat(l,".").concat(g)]||c[g]||d[g]||s;return i?n.createElement(m,a(a({ref:t},u),{},{components:i})):n.createElement(m,a({ref:t},u))}));function m(e,t){var i=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var s=i.length,a=new Array(s);a[0]=g;var r={};for(var l in t)hasOwnProperty.call(t,l)&&(r[l]=t[l]);r.originalType=e,r[c]="string"==typeof e?e:o,a[1]=r;for(var p=2;p<s;p++)a[p]=i[p];return n.createElement.apply(null,a)}return n.createElement.apply(null,i)}g.displayName="MDXCreateElement"},43384:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>s,metadata:()=>r,toc:()=>p});var n=i(58168),o=(i(96540),i(15680));const s={id:"optimising-fonts",title:"Optimising Fonts",sidebar_label:"Fonts",description:"Tips on how to reduce font file size from within Playable's plugin window.",keywords:["font","optimise","reduce","size","playable","luna"]},a=void 0,r={unversionedId:"playable/optimise-your-builds/optimising-assets/optimising-fonts",id:"playable/optimise-your-builds/optimising-assets/optimising-fonts",title:"Optimising Fonts",description:"Tips on how to reduce font file size from within Playable's plugin window.",source:"@site/docs/playable/optimise-your-builds/optimising-assets/optimising-fonts.md",sourceDirName:"playable/optimise-your-builds/optimising-assets",slug:"/playable/optimise-your-builds/optimising-assets/optimising-fonts",permalink:"/docs/playable/optimise-your-builds/optimising-assets/optimising-fonts",draft:!1,tags:[],version:"current",frontMatter:{id:"optimising-fonts",title:"Optimising Fonts",sidebar_label:"Fonts",description:"Tips on how to reduce font file size from within Playable's plugin window.",keywords:["font","optimise","reduce","size","playable","luna"]},sidebar:"gettingStarted",previous:{title:"Animations",permalink:"/docs/playable/optimise-your-builds/optimising-assets/optimising-animations"},next:{title:"Meshes",permalink:"/docs/playable/optimise-your-builds/optimising-assets/optimising-meshes"}},l={},p=[{value:"Alphabet",id:"alphabet",level:3},{value:"Glyph Size",id:"glyph-size",level:3},{value:"Font Texture Size",id:"font-texture-size",level:3},{value:"Per-font settings",id:"per-font-settings",level:2}],u={toc:p},c="wrapper";function d(e){let{components:t,...s}=e;return(0,o.yg)(c,(0,n.A)({},u,s,{components:t,mdxType:"MDXLayout"}),(0,o.yg)("admonition",{title:"Built-in text components",type:"caution"},(0,o.yg)("p",{parentName:"admonition"},"This section is only applicable to built-in text components (",(0,o.yg)("b",null,"UnityEngine.UI.Text")," and ",(0,o.yg)("b",null,"UnityEngine.TextMesh"),"). Text Mesh Pro fonts are handled separately by Text Mesh Pro plugin.")),(0,o.yg)("p",null,"Rendering fonts in 3D environment is a task that has multiple implementations nowadays. While some toolchains and plugins utilize more advanced techniques like SDF or GPU vector graphics rasterization, built-in components of Unity, namely ",(0,o.yg)("inlineCode",{parentName:"p"},"UnityEngine.UI.Text")," and ",(0,o.yg)("inlineCode",{parentName:"p"},"UnityEngine.TextMesh")," use quite basic techniques requiring a font to gather an atlas composed of rasterized glyphs."),(0,o.yg)("p",null,"This section allows for a fine control over how Luna generates such atlases and is primarily aimed at optimising for wire size of the font data."),(0,o.yg)("p",null,"Let's start by navigating to the ",(0,o.yg)("strong",{parentName:"p"},"Assets")," section and the ",(0,o.yg)("strong",{parentName:"p"},"Fonts")," tab in Luna UI:"),(0,o.yg)("p",null,(0,o.yg)("img",{alt:"images-medium",src:i(97095).A,width:"2224",height:"1720"})),(0,o.yg)("p",null,"The highlighted part of the screenshot above is the section that describes parameters applied to exported sounds by default. Let's break it down section by section."),(0,o.yg)("h3",{id:"alphabet"},"Alphabet"),(0,o.yg)("p",null,"This controls which characters get rasterized into an atlas. It defaults to lower- and upper-case English characters, punctuation, digits and some other symbols like ",(0,o.yg)("inlineCode",{parentName:"p"},"+")," and ",(0,o.yg)("inlineCode",{parentName:"p"},"-"),". Each character listed here is going to end up in an atlas produced by Luna."),(0,o.yg)("p",null,"Here you can remove characters that aren't being used in your playable. It wont impact size as much as Textures and Audio, but its worth doing if youre aiming for 2MB."),(0,o.yg)("admonition",{title:"No dynamic fonts",type:"danger"},(0,o.yg)("p",{parentName:"admonition"},"Playable Plugin doesn't support dynamically adding characters to an atlas for performance reasons. It means developers should pre-configure the atlas with all the characters they might need in runtime, otherwise the glyph will not be rendered.")),(0,o.yg)("h3",{id:"glyph-size"},"Glyph Size"),(0,o.yg)("p",null,"This controls line height, measured in pixels, for the rasterization tool. Bigger sizes allow for crispier fonts, especially at bigger font sizes, but glyphs take more space in the atlas. The glyphs will also take a minimum amount of space required, and the whole atlas will be of a minimum Power Of Two size to hold all the characters requested."),(0,o.yg)("h3",{id:"font-texture-size"},"Font Texture Size"),(0,o.yg)("p",null,"This controls the file size and thus the overall quality of your font: The lower the file size, the lower the quality."),(0,o.yg)("h2",{id:"per-font-settings"},"Per-font settings"),(0,o.yg)("p",null,'All of the above settings are also available on a per-folder and per-font level. Developers can choose a folder of a file by ticking a checkbox in "Per-font settings" section of the window and use the same fields to tweak parameters of a specific fonts(s):'),(0,o.yg)("p",null,(0,o.yg)("img",{alt:"images-medium",src:i(51767).A,width:"2224",height:"1720"})))}d.isMDXComponent=!0},97095:(e,t,i)=>{i.d(t,{A:()=>n});const n=i.p+"assets/images/fonts-general-2da2fe0bc65744d55421b7fda5783748.png"},51767:(e,t,i)=>{i.d(t,{A:()=>n});const n=i.p+"assets/images/fonts-per-file-f47d8069fe524e1729d66ab0f6373d39.png"}}]);