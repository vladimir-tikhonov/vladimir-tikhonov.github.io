"use strict";(self.webpackChunkdeveloper_docs=self.webpackChunkdeveloper_docs||[]).push([[11807],{15680:(e,n,t)=>{t.d(n,{xA:()=>p,yg:()=>y});var r=t(96540);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=r.createContext({}),l=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},p=function(e){var n=l(e.components);return r.createElement(s.Provider,{value:n},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=l(t),f=i,y=d["".concat(s,".").concat(f)]||d[f]||u[f]||o;return t?r.createElement(y,a(a({ref:n},p),{},{components:t})):r.createElement(y,a({ref:n},p))}));function y(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=f;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c[d]="string"==typeof e?e:i,a[1]=c;for(var l=2;l<o;l++)a[l]=t[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},25391:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var r=t(58168),i=(t(96540),t(15680));const o={id:"scripting-defines",title:"Scripting Defines",sidebar_label:"Scripting Defines",description:"How to exclude specific sections of code from your Luna build, in order to avoid build errors.",keywords:["scripting","defines","preprocess","playable","luna"]},a=void 0,c={unversionedId:"playable/code/scripting-defines",id:"playable/code/scripting-defines",title:"Scripting Defines",description:"How to exclude specific sections of code from your Luna build, in order to avoid build errors.",source:"@site/docs/playable/code/scripting-defines.md",sourceDirName:"playable/code",slug:"/playable/code/scripting-defines",permalink:"/docs/playable/code/scripting-defines",draft:!1,tags:[],version:"current",frontMatter:{id:"scripting-defines",title:"Scripting Defines",sidebar_label:"Scripting Defines",description:"How to exclude specific sections of code from your Luna build, in order to avoid build errors.",keywords:["scripting","defines","preprocess","playable","luna"]},sidebar:"gettingStarted",previous:{title:"Special Characters Warning",permalink:"/docs/playable/code/special-characters-warning"},next:{title:"Insert JS at Runtime",permalink:"/docs/playable/code/js-code-insertions"}},s={},l=[{value:"Example",id:"example",level:3}],p={toc:l},d="wrapper";function u(e){let{components:n,...o}=e;return(0,i.yg)(d,(0,r.A)({},p,o,{components:n,mdxType:"MDXLayout"}),(0,i.yg)("p",null,"In your game code you may wrap certain features in Scripting Defines; this code will only be compiled and run in certain conditions or platforms, such as specific Unity Versions."),(0,i.yg)("p",null,"Check out some more information about ",(0,i.yg)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/preprocessor-directives/preprocessor-if"},"preprocessor directives")," and the ",(0,i.yg)("a",{parentName:"p",href:"https://docs.unity3d.com/Manual/PlatformDependentCompilation.html"},"list of defines")," supported by Unity."),(0,i.yg)("p",null,"If you wish to include certain scripting defines in your Luna builds, you can enter these pre-processor symbols into the Scripting Defines section in the Luna UI, under Source code."),(0,i.yg)("h3",{id:"example"},"Example"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-cs"},"#if  UNITY_2017_1_OR_NEWER\n//...Your Awesome Code...//\n#endif\n")),(0,i.yg)("div",{className:"callout warning"},"If code wrapped with scripting defines exists in your code, which is required in your Luna build you should also include them in the `Scripting Defines` tab in the Luna UI. Otherwise they wont be compiled."),(0,i.yg)("p",null,"Then include the name space inside the Luna Window. Navigate to the ",(0,i.yg)("strong",{parentName:"p"},"Code")," section and the ",(0,i.yg)("strong",{parentName:"p"},"Scripting Defines")," tab."),(0,i.yg)("p",null,(0,i.yg)("img",{alt:"luna-ui-code",src:t(89927).A,width:"2224",height:"1720"})),(0,i.yg)("div",{className:"callout info"},"Although you are able to select which ones are to be picked up during compilation, Luna implements scripting defines default namespaces that are pre-included in the Luna engine: UNITY_LUNA;  UNITY_BUPC;  UNITY_5_4_OR_NEWER;"),(0,i.yg)("p",null,"Luna respects specific Unity version for scripting defines."),(0,i.yg)("p",null,"Let's use an example to fully undestand it:"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"While the ",(0,i.yg)("inlineCode",{parentName:"li"},"UNITY_2018")," will function if you are running Unity 2018, this will be skipped when running another version like Unity 2019.")))}u.isMDXComponent=!0},89927:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/code-scripting-defines-80d7dcfc6c7ee391a554ae128406646e.png"}}]);