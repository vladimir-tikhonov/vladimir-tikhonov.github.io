"use strict";(self.webpackChunkdeveloper_docs=self.webpackChunkdeveloper_docs||[]).push([[36724],{15680:(e,n,t)=>{t.d(n,{xA:()=>c,yg:()=>y});var o=t(96540);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,o,i=function(e,n){if(null==e)return{};var t,o,i={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var r=o.createContext({}),p=function(e){var n=o.useContext(r),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},c=function(e){var n=p(e.components);return o.createElement(r.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},g=o.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,r=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(t),g=i,y=u["".concat(r,".").concat(g)]||u[g]||d[g]||a;return t?o.createElement(y,s(s({ref:n},c),{},{components:t})):o.createElement(y,s({ref:n},c))}));function y(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,s=new Array(a);s[0]=g;var l={};for(var r in n)hasOwnProperty.call(n,r)&&(l[r]=n[r]);l.originalType=e,l[u]="string"==typeof e?e:i,s[1]=l;for(var p=2;p<a;p++)s[p]=t[p];return o.createElement.apply(null,s)}return o.createElement.apply(null,t)}g.displayName="MDXCreateElement"},81900:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>s,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var o=t(58168),i=(t(96540),t(15680));const a={id:"json-in-luna",title:"JSON in Luna",sidebar_label:"JSON in Luna",description:"How to install and use Newtonsoft.Json in conjunction with Playable Plugin",keywords:["JSON","newtonsoft","serialize","deserialize","read","write","populate","playable","luna"]},s=void 0,l={unversionedId:"playable/code/json-in-luna",id:"playable/code/json-in-luna",title:"JSON in Luna",description:"How to install and use Newtonsoft.Json in conjunction with Playable Plugin",source:"@site/docs/playable/code/json-in-luna.md",sourceDirName:"playable/code",slug:"/playable/code/json-in-luna",permalink:"/docs/playable/code/json-in-luna",draft:!1,tags:[],version:"current",frontMatter:{id:"json-in-luna",title:"JSON in Luna",sidebar_label:"JSON in Luna",description:"How to install and use Newtonsoft.Json in conjunction with Playable Plugin",keywords:["JSON","newtonsoft","serialize","deserialize","read","write","populate","playable","luna"]},sidebar:"gettingStarted",previous:{title:"Insert JS at Runtime",permalink:"/docs/playable/code/js-code-insertions"},next:{title:"External C# Code",permalink:"/docs/playable/code/external-code"}},r={},p=[{value:"Installing Newtonsoft.Json",id:"installing-newtonsoftjson",level:2},{value:"Install Newtonsoft.Json manually",id:"install-newtonsoftjson-manually",level:2},{value:"Supported Methods",id:"supported-methods",level:2},{value:"Writing To &amp; Reading From Files",id:"writing-to--reading-from-files",level:3},{value:"SerializeObject",id:"serializeobject",level:3},{value:"DeserializeObject",id:"deserializeobject",level:3},{value:"PopulateObject",id:"populateobject",level:3},{value:"Unsupported Data Types / Structures / Encodings",id:"unsupported-data-types--structures--encodings",level:2},{value:"Example",id:"example",level:2}],c={toc:p},u="wrapper";function d(e){let{components:n,...a}=e;return(0,i.yg)(u,(0,o.A)({},c,a,{components:n,mdxType:"MDXLayout"}),(0,i.yg)("p",null,"In order to serialize JSON in Luna you will need to include and use Newtonsoft.Json in your Unity project, as we ",(0,i.yg)("strong",{parentName:"p"},"do not")," support ",(0,i.yg)("inlineCode",{parentName:"p"},"UnityEngine.JsonUtility"),". Whilst it is true we do not usually handle dlls as their contents are unreadable when exporting, we have implemented a JS translated version of the Newtonsoft.Json in our Luna engine."),(0,i.yg)("h2",{id:"installing-newtonsoftjson"},"Installing Newtonsoft.Json"),(0,i.yg)("p",null,"Firstly, open your project directory and locate the ",(0,i.yg)("inlineCode",{parentName:"p"},"manifest.json")," file under the Packages folder."),(0,i.yg)("p",null,(0,i.yg)("img",{alt:"images-small",src:t(55393).A,width:"624",height:"384"})),(0,i.yg)("p",null,"Add the following line to the dependencies section of the file and save:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-json"},'    "com.unity.nuget.newtonsoft-json": "2.0.0"\n')),(0,i.yg)("p",null,(0,i.yg)("img",{alt:"images-medium",src:t(38819).A,width:"916",height:"210"})),(0,i.yg)("p",null,"In this way, Package Manager handles the installation of Newtonsoft Json automatically."),(0,i.yg)("p",null,'Verify the package installation by opening the Package Manager interface in Unity and sorting the results by "In Project". You should see the Newtonsoft Json package among the results.'),(0,i.yg)("p",null,(0,i.yg)("img",{alt:"images-small",src:t(13158).A,width:"720",height:"552"})),(0,i.yg)("div",{className:"callout info"}," You cannot install Newtonsoft Json by searching it in the Package Manager interface, for this reason you need to add it manually to the manifest.json file in order to install it. "),(0,i.yg)("p",null,"From here you are good to use Newtonsoft.Json\n(via including the namespace using Newtonsoft.Json; in your scripts)."),(0,i.yg)("h2",{id:"install-newtonsoftjson-manually"},"Install Newtonsoft.Json manually"),(0,i.yg)("p",null,"We highly recommend you use the installation method provided above. The following is a tutorial on how to install Newtonsoft Json manually in your project without using Package Manager."),(0,i.yg)("details",null,(0,i.yg)("summary",null,"CLICK ME"),(0,i.yg)("p",null,"First you will need to download the Newtonsoft package from NuGet (",(0,i.yg)("a",{parentName:"p",href:"https://www.nuget.org/packages/Newtonsoft.Json/"},"link here"),")."),(0,i.yg)("p",null,(0,i.yg)("img",{alt:"images-medium",src:t(15818).A,width:"1203",height:"694"})),(0,i.yg)("p",null,"After downloading the package you will see the file type is ",(0,i.yg)("inlineCode",{parentName:"p"},".nupkg"),", change this to ",(0,i.yg)("inlineCode",{parentName:"p"},".zip")," and then extract the contents."),(0,i.yg)("p",null,(0,i.yg)("img",{alt:"images-small",src:t(96335).A,width:"576",height:"718"})),(0,i.yg)("p",null,"Inside the extracted contents navigate to /lib/netstandard2.0 and copy the ",(0,i.yg)("inlineCode",{parentName:"p"},"Newtonsoft.Json.dll")," file."),(0,i.yg)("p",null,"Now inside your Unity project create a new folder in the root of Assets and call it 'Plugins' (the naming here is important as this is a ",(0,i.yg)("a",{parentName:"p",href:"https://docs.unity3d.com/560/Documentation/Manual/SpecialFolders.html"},"special folder name")," within Unity).\nInside this Plugins folder paste the ",(0,i.yg)("inlineCode",{parentName:"p"},"Newtonsoft.Json.dll")," file."),(0,i.yg)("p",null,"From here you are good to use Newtonsoft.Json"),(0,i.yg)("p",null,"(via including the namespace ",(0,i.yg)("inlineCode",{parentName:"p"},"using Newtonsoft.Json;")," in your scripts).")),(0,i.yg)("h2",{id:"supported-methods"},"Supported Methods"),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Note:")," When printing values relating to deserialized objects, you will need to use ",(0,i.yg)("inlineCode",{parentName:"p"},"Console.WriteLine")," in order for them to show up in the browser console. You can use ",(0,i.yg)("inlineCode",{parentName:"p"},"Debug.Log")," when checking them inside Unity though."),(0,i.yg)("h3",{id:"writing-to--reading-from-files"},"Writing To & Reading From Files"),(0,i.yg)("p",null,"Whilst we can still read from files once the project is built, we cannot write to them as we don't have permission to store data (no drive access)."),(0,i.yg)("p",null,"This means you can preprocess any writing being done in the project, and replace any reading logic using paths by adding a ",(0,i.yg)("inlineCode",{parentName:"p"},"public TextAsset")," to the script and using it in place of paths."),(0,i.yg)("p",null,"E.g."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-cs"},'    // Before\n    JsonConvert.DeserializeObject<Product>(File.ReadAllText("Assets/products.json"));\n    // After\n    public TextAsset _json; // Drag JSON file from within Assets to this exposed field\n    JsonConvert.DeserializeObject<Product>(_json.text);\n')),(0,i.yg)("h3",{id:"serializeobject"},"SerializeObject"),(0,i.yg)("p",null,"Serializes the specified object to a JSON string. Available at runtime."),(0,i.yg)("p",null,"More info in Newtonsoft.Json's ",(0,i.yg)("a",{parentName:"p",href:"https://www.newtonsoft.com/json/help/html/Overload_Newtonsoft_Json_JsonConvert_SerializeObject.htm"},"documentation"),"."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-cs"},"JsonConvert.SerializeObject(Object);\nJsonConvert.SerializeObject(Object, Formatting);\nJsonConvert.SerializeObject(Object, JsonSerializerSettings);\nJsonConvert.SerializeObject(Object, Formatting, JsonSerializerSettings);\n")),(0,i.yg)("h3",{id:"deserializeobject"},"DeserializeObject"),(0,i.yg)("p",null,"Deserializes the JSON to a .NET object. Available at runtime."),(0,i.yg)("p",null,"More info in Newtonsoft.Json's ",(0,i.yg)("a",{parentName:"p",href:"https://www.newtonsoft.com/json/help/html/Overload_Newtonsoft_Json_JsonConvert_DeserializeObject.htm"},"documentation"),"."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-cs"},"JsonConvert.DeserializeObject(String);\nJsonConvert.DeserializeObject(String, Type);\nJsonConvert.DeserializeObject(String, JsonSerializerSettings);\nJsonConvert.DeserializeObject(String, Type, JsonSerializerSettings);\n")),(0,i.yg)("h3",{id:"populateobject"},"PopulateObject"),(0,i.yg)("p",null,"Populates the specified object following the description in a JSON string. Available at runtime."),(0,i.yg)("p",null,"More info in Newtonsoft.Json's ",(0,i.yg)("a",{parentName:"p",href:"https://www.newtonsoft.com/json/help/html/Overload_Newtonsoft_Json_JsonConvert_PopulateObject.htm"},"documentation"),"."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-cs"},"JsonConvert.PopulateObject(String, Object);\nJsonConvert.PopulateObject(String, Object, JsonSerializerSettings);\n")),(0,i.yg)("h2",{id:"unsupported-data-types--structures--encodings"},"Unsupported Data Types / Structures / Encodings"),(0,i.yg)("p",null,"Our implementation of Newtonsoft.Json supports all data types, structs and encodings other than a few exceptions:"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Stacks"),(0,i.yg)("li",{parentName:"ul"},"Queues"),(0,i.yg)("li",{parentName:"ul"},"UTF7 encoding"),(0,i.yg)("li",{parentName:"ul"},"UTF32 encoding")),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Note:")," Whilst we do support private properties, you will need to add a `","[JsonProperty]"," attribute to them in order for them to serializable."),(0,i.yg)("h2",{id:"example"},"Example"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-cs"},'using UnityEngine;\nusing System;\nusing System.IO;\nusing Newtonsoft.Json;\n\npublic class jsonTest : MonoBehaviour\n{\n    // Attach your json file to the script\n    public TextAsset jsonFile;\n\n    private void Start()\n    {\n        JsonFunc(jsonFile);\n    }\n\n    public static void JsonFunc(TextAsset _json)\n    {\n        // Path will not be used in build\n        string path = "Assets/jsonData.json";\n\n        // Initialise data\n        Product product = new Product();\n\n        product.Name = "Apple";\n        product.Price = 3.99M;\n        product.Sizes = new string[] { "Small", "Medium", "Large" };\n\n        // Write to file only outside of Luna\n#if !UNITY_LUNA\n        File.WriteAllText(path, JsonConvert.SerializeObject(product));\n#endif\n\n        // Deserialize the JSON and assign to variable\n        Product deserializedProduct = JsonConvert.DeserializeObject<Product>(_json.text);\n\n        // Log the properties\n        // (Remember you need Console.WriteLine to see them in the browser console)\n        Console.WriteLine(deserializedProduct.Name);\n        Console.WriteLine(deserializedProduct.Price);\n\n        for (int i = 0; i < product.Sizes.Length; i++){\n            Console.WriteLine(deserializedProduct.Sizes[i]);\n        }\n    }\n}\n\npublic class Product\n{\n    public string Name { get; set; }\n\n    public decimal Price { get; set; }\n\n    public string[] Sizes { get; set; }\n}\n')))}d.isMDXComponent=!0},55393:(e,n,t)=>{t.d(n,{A:()=>o});const o=t.p+"assets/images/manifest-location-7286964e47e6ca1467ebe180115548da.png"},38819:(e,n,t)=>{t.d(n,{A:()=>o});const o=t.p+"assets/images/newtonsoft-dependecy-927c3cd790f3fe4217bd80f1d4b74701.png"},15818:(e,n,t)=>{t.d(n,{A:()=>o});const o=t.p+"assets/images/newtonsoft-download-4ea8b7ea48a25083ce25e92fc4872385.jpg"},13158:(e,n,t)=>{t.d(n,{A:()=>o});const o=t.p+"assets/images/newtonsoft-in-package-manager-60926f0eeb3761e05a288ca0d5091eb0.png"},96335:(e,n,t)=>{t.d(n,{A:()=>o});const o=t.p+"assets/images/newtonsoft-rename-254c4d0b5dbb8f48e619e0440519b2c8.gif"}}]);