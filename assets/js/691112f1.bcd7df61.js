"use strict";(self.webpackChunkdeveloper_docs=self.webpackChunkdeveloper_docs||[]).push([[27512],{15680:(e,t,i)=>{i.d(t,{xA:()=>m,yg:()=>y});var a=i(96540);function s(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function r(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,a)}return i}function n(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?r(Object(i),!0).forEach((function(t){s(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):r(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function o(e,t){if(null==e)return{};var i,a,s=function(e,t){if(null==e)return{};var i,a,s={},r=Object.keys(e);for(a=0;a<r.length;a++)i=r[a],t.indexOf(i)>=0||(s[i]=e[i]);return s}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)i=r[a],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(s[i]=e[i])}return s}var p=a.createContext({}),l=function(e){var t=a.useContext(p),i=t;return e&&(i="function"==typeof e?e(t):n(n({},t),e)),i},m=function(e){var t=l(e.components);return a.createElement(p.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},g=a.forwardRef((function(e,t){var i=e.components,s=e.mdxType,r=e.originalType,p=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),c=l(i),g=s,y=c["".concat(p,".").concat(g)]||c[g]||u[g]||r;return i?a.createElement(y,n(n({ref:t},m),{},{components:i})):a.createElement(y,n({ref:t},m))}));function y(e,t){var i=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var r=i.length,n=new Array(r);n[0]=g;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[c]="string"==typeof e?e:s,n[1]=o;for(var l=2;l<r;l++)n[l]=i[l];return a.createElement.apply(null,n)}return a.createElement.apply(null,i)}g.displayName="MDXCreateElement"},3809:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>p,contentTitle:()=>n,default:()=>u,frontMatter:()=>r,metadata:()=>o,toc:()=>l});var a=i(58168),s=(i(96540),i(15680));const r={id:"overview",title:"Optimising Assets - Overview",sidebar_label:"Overview",description:"Optimising Assets - How to further optimise your playable by tweaking the export parameters of specific assets & folders.",keywords:["optimise","size","settings","performance","assets","export","parameters","playable","luna"]},n=void 0,o={unversionedId:"playable/optimise-your-builds/optimising-assets/overview",id:"playable/optimise-your-builds/optimising-assets/overview",title:"Optimising Assets - Overview",description:"Optimising Assets - How to further optimise your playable by tweaking the export parameters of specific assets & folders.",source:"@site/docs/playable/optimise-your-builds/optimising-assets/overview.md",sourceDirName:"playable/optimise-your-builds/optimising-assets",slug:"/playable/optimise-your-builds/optimising-assets/overview",permalink:"/docs/playable/optimise-your-builds/optimising-assets/overview",draft:!1,tags:[],version:"current",frontMatter:{id:"overview",title:"Optimising Assets - Overview",sidebar_label:"Overview",description:"Optimising Assets - How to further optimise your playable by tweaking the export parameters of specific assets & folders.",keywords:["optimise","size","settings","performance","assets","export","parameters","playable","luna"]},sidebar:"gettingStarted",previous:{title:"Playable Health Check",permalink:"/docs/playable/optimise-your-builds/phc"},next:{title:"Animations",permalink:"/docs/playable/optimise-your-builds/optimising-assets/optimising-animations"}},p={},l=[{value:"Optimising various asset types",id:"optimising-various-asset-types",level:2}],m={toc:l},c="wrapper";function u(e){let{components:t,...i}=e;return(0,s.yg)(c,(0,a.A)({},m,i,{components:t,mdxType:"MDXLayout"}),(0,s.yg)("p",null,'Once the build contains only the required assets, developers can further optimise the size by tweaking export parameters of specific assets and folders. Most of such optimisations are "free": changing an image format from PNG to JPEG might yield as much as 80% of size reduction with little to no visual differences and little to no startup time cost. Similarly, switching the sound file to Mono and reducing the bit rate might be unnoticeable to most users and can yield significant savings in terms of the wire size.'),(0,s.yg)("p",null,"We suggest starting your optimisation with the assets that take most of the space in compressed build."),(0,s.yg)("admonition",{type:"info"},(0,s.yg)("p",{parentName:"admonition"},"We are also releasing a series of articles on Size Optimization on Medium, the first of which you can find by ",(0,s.yg)("a",{parentName:"p",href:"https://medium.com/luna-labs-ltd/how-to-optimise-playable-build-sizes-meshes-textures-sound-animation-3dc1b06f99a5"},"clicking here"),".")),(0,s.yg)("h2",{id:"optimising-various-asset-types"},"Optimising various asset types"),(0,s.yg)("p",null,"Please navigate to sections listed below to see how Luna can help reducing the build size in a quick and non-destructive manner."),(0,s.yg)("ul",null,(0,s.yg)("li",{parentName:"ul"},(0,s.yg)("p",{parentName:"li"},(0,s.yg)("a",{parentName:"p",href:"optimising-animations"},"Optimising animations")," :"),(0,s.yg)("p",{parentName:"li"},"Checking Half precision floating-point. Animations are stored as floats, reducing the size of the animation data taken by 50%.")),(0,s.yg)("li",{parentName:"ul"},(0,s.yg)("p",{parentName:"li"},(0,s.yg)("a",{parentName:"p",href:"optimising-fonts"},"Optimising fonts")," :"),(0,s.yg)("p",{parentName:"li"},"Control which characters get rasterized into an atlas by entering in your own custom alphabet contents, and removing characters that aren't being used in your playable.")),(0,s.yg)("li",{parentName:"ul"},(0,s.yg)("p",{parentName:"li"},(0,s.yg)("a",{parentName:"p",href:"optimising-meshes"},"Optimising meshes")," :"),(0,s.yg)("p",{parentName:"li"},"Checking Half precision floating-point. Meshes are stored as floats, reducing the size of the mesh data taken by 50%.")),(0,s.yg)("li",{parentName:"ul"},(0,s.yg)("p",{parentName:"li"},(0,s.yg)("a",{parentName:"p",href:"optimising-particles"},"Optimising particles")," :"),(0,s.yg)("p",{parentName:"li"},"Baking particle systems and converting to animations of sprites, improves performance vastly with room to optimise the images.")),(0,s.yg)("li",{parentName:"ul"},(0,s.yg)("p",{parentName:"li"},(0,s.yg)("a",{parentName:"p",href:"optimising-shaders"},"Optimising shaders")," :"),(0,s.yg)("p",{parentName:"li"},"Unity can include an unnecessary big amount of shader variants as Unity cannot predict whether certain variants will be used or not. Check out our docs on Shaders for more details.")),(0,s.yg)("li",{parentName:"ul"},(0,s.yg)("p",{parentName:"li"},(0,s.yg)("a",{parentName:"p",href:"optimising-sounds"},"Optimising sounds")," :"),(0,s.yg)("p",{parentName:"li"},"Setting the audio assets bit rate will help to reduce its size. Bitrate 0 k means max size, changing this to specific size will help reduce its size, it may also lower the audio quality.")),(0,s.yg)("li",{parentName:"ul"},(0,s.yg)("p",{parentName:"li"},(0,s.yg)("a",{parentName:"p",href:"optimising-textures"},"Optimising textures")," :"),(0,s.yg)("p",{parentName:"li"},"Reduce max size of a specific or all textures to reduce their size. This section allows for setting texture sizes for folders or files that can have parameters applied to exported textures by default."))))}u.isMDXComponent=!0}}]);