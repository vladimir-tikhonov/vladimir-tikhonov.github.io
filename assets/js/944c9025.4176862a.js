"use strict";(self.webpackChunkdeveloper_docs=self.webpackChunkdeveloper_docs||[]).push([[16479],{15680:(e,n,a)=>{a.d(n,{xA:()=>u,yg:()=>g});var t=a(96540);function l(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function r(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function i(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?r(Object(a),!0).forEach((function(n){l(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function o(e,n){if(null==e)return{};var a,t,l=function(e,n){if(null==e)return{};var a,t,l={},r=Object.keys(e);for(t=0;t<r.length;t++)a=r[t],n.indexOf(a)>=0||(l[a]=e[a]);return l}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)a=r[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var p=t.createContext({}),s=function(e){var n=t.useContext(p),a=n;return e&&(a="function"==typeof e?e(n):i(i({},n),e)),a},u=function(e){var n=s(e.components);return t.createElement(p.Provider,{value:n},e.children)},c="mdxType",y={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},d=t.forwardRef((function(e,n){var a=e.components,l=e.mdxType,r=e.originalType,p=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),c=s(a),d=l,g=c["".concat(p,".").concat(d)]||c[d]||y[d]||r;return a?t.createElement(g,i(i({ref:n},u),{},{components:a})):t.createElement(g,i({ref:n},u))}));function g(e,n){var a=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var r=a.length,i=new Array(r);i[0]=d;var o={};for(var p in n)hasOwnProperty.call(n,p)&&(o[p]=n[p]);o.originalType=e,o[c]="string"==typeof e?e:l,i[1]=o;for(var s=2;s<r;s++)i[s]=a[s];return t.createElement.apply(null,i)}return t.createElement.apply(null,a)}d.displayName="MDXCreateElement"},31081:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>p,contentTitle:()=>i,default:()=>y,frontMatter:()=>r,metadata:()=>o,toc:()=>s});var t=a(58168),l=(a(96540),a(15680));const r={id:"playable-api",title:"Playable API",sidebar_label:"Playable API",description:"Ensure your playable is compatible with supported networks by implementing some global functions listed here.",keywords:["network","global","functions","playable","luna"]},i=void 0,o={unversionedId:"playable/playable-setup/playable-api",id:"playable/playable-setup/playable-api",title:"Playable API",description:"Ensure your playable is compatible with supported networks by implementing some global functions listed here.",source:"@site/docs/playable/playable-setup/playable-api.md",sourceDirName:"playable/playable-setup",slug:"/playable/playable-setup/playable-api",permalink:"/docs/playable/playable-setup/playable-api",draft:!1,tags:[],version:"current",frontMatter:{id:"playable-api",title:"Playable API",sidebar_label:"Playable API",description:"Ensure your playable is compatible with supported networks by implementing some global functions listed here.",keywords:["network","global","functions","playable","luna"]},sidebar:"gettingStarted",previous:{title:"Ad Network Settings",permalink:"/docs/playable/playable-setup/settings/ad-network-settings"},next:{title:"Configure Game Variables",permalink:"/docs/playable/playable-setup/configure-game-variables"}},p={},s=[{value:"Handling screen orientation",id:"handling-screen-orientation",level:2},{value:"App Store Clicks (CTAs)",id:"app-store-clicks-ctas",level:2},{value:"Pausing and Resuming Gameplay",id:"pausing-and-resuming-gameplay",level:2},{value:"Game Ended lifecycle event",id:"game-ended-lifecycle-event",level:2},{value:"Testing your builds",id:"testing-your-builds",level:2}],u={toc:s},c="wrapper";function y(e){let{components:n,...a}=e;return(0,l.yg)(c,(0,t.A)({},u,a,{components:n,mdxType:"MDXLayout"}),(0,l.yg)("p",null,"To ensure your playable is compatible with the supported networks, it is important to implement a handful of global functions so that Luna knows how to appropriately map your game logic to the playable networks' specifications."),(0,l.yg)("p",null,"Luna makes this simple by providing a single C# API, which is then tailored for the network at time of export with no additional work for you."),(0,l.yg)("h2",{id:"handling-screen-orientation"},"Handling screen orientation"),(0,l.yg)("p",null,"We recommend that you build a responsive playable ad, and ensure that the UI and other elements scale or adapt accordingly. In a playable ad context, you will not have access to Unity APIs such as ",(0,l.yg)("inlineCode",{parentName:"p"},"Input.deviceOrientation"),". Therefore we recommend using ",(0,l.yg)("inlineCode",{parentName:"p"},"Screen.width")," and ",(0,l.yg)("inlineCode",{parentName:"p"},"Screen.height")," to handle this."),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-cs"},"float screenRatio = (Screen.width/Screen.height);\n    if (screenRatio >= 1) {\n        // Landscape Layout\n    } else if (screenRatio < 1) {\n        // Portrait Layout\n    }\n")),(0,l.yg)("h2",{id:"app-store-clicks-ctas"},"App Store Clicks (CTAs)"),(0,l.yg)("p",null,"When you wish to direct a user to the app store in your playable ad i.e. after clicking the in-game CTA button, or end card, then you need to call the following API from your game code:"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-cs"},"Luna.Unity.Playable.InstallFullGame();\n")),(0,l.yg)("h2",{id:"pausing-and-resuming-gameplay"},"Pausing and Resuming Gameplay"),(0,l.yg)("p",null,"In order to pause the gameplay when the app is sent to the background or the app store link is clicked, Luna provides lifecycle events to which you can subscribe."),(0,l.yg)("p",null,"For example, it is recommended to pause the gameplay when the user leaves the app, or you may wish to present the end card after the user has returned."),(0,l.yg)("p",null,"Please use the ",(0,l.yg)("inlineCode",{parentName:"p"},"Luna.Unity.LifeCycle.OnResume")," and ",(0,l.yg)("inlineCode",{parentName:"p"},"Luna.Unity.LifeCycle.OnPause")," events. For example:"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-cs"},"Luna.Unity.LifeCycle.OnPause += PauseGameplay;\nLuna.Unity.LifeCycle.OnResume += ResumeGameplay;\n\n...\n...\n\nprivate void PauseGameplay() {\n\n    // Pause the game\n}\n\nprivate void ResumeGameplay() {\n\n    // Resume the game\n}\n\n")),(0,l.yg)("h2",{id:"game-ended-lifecycle-event"},"Game Ended lifecycle event"),(0,l.yg)("p",null,"Some networks require that you notify them when the end of the playable ad is reached. This event must be called when the experience is complete, for example, when the end card is presented."),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-cs"},"Luna.Unity.LifeCycle.GameEnded();\n")),(0,l.yg)("admonition",{title:"Warning",type:"danger"},(0,l.yg)("p",{parentName:"admonition"},"The current networks which require this are:"),(0,l.yg)("ul",{parentName:"admonition"},(0,l.yg)("li",{parentName:"ul"},"Mintegral"),(0,l.yg)("li",{parentName:"ul"},"Vungle"))),(0,l.yg)("h2",{id:"testing-your-builds"},"Testing your builds"),(0,l.yg)("p",null,"Every ad network has their own specification and toolset for testing playables. See the following guides for how to test for each ad network."))}y.isMDXComponent=!0}}]);