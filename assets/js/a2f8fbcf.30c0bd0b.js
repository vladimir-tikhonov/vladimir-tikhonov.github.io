"use strict";(self.webpackChunkdeveloper_docs=self.webpackChunkdeveloper_docs||[]).push([[25539],{15680:(e,a,n)=>{n.d(a,{xA:()=>u,yg:()=>d});var t=n(96540);function r(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function l(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function i(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?l(Object(n),!0).forEach((function(a){r(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function o(e,a){if(null==e)return{};var n,t,r=function(e,a){if(null==e)return{};var n,t,r={},l=Object.keys(e);for(t=0;t<l.length;t++)n=l[t],a.indexOf(n)>=0||(r[n]=e[n]);return r}(e,a);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(t=0;t<l.length;t++)n=l[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=t.createContext({}),c=function(e){var a=t.useContext(s),n=a;return e&&(n="function"==typeof e?e(a):i(i({},a),e)),n},u=function(e){var a=c(e.components);return t.createElement(s.Provider,{value:a},e.children)},p="mdxType",y={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},g=t.forwardRef((function(e,a){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),p=c(n),g=r,d=p["".concat(s,".").concat(g)]||p[g]||y[g]||l;return n?t.createElement(d,i(i({ref:a},u),{},{components:n})):t.createElement(d,i({ref:a},u))}));function d(e,a){var n=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=g;var o={};for(var s in a)hasOwnProperty.call(a,s)&&(o[s]=a[s]);o.originalType=e,o[p]="string"==typeof e?e:r,i[1]=o;for(var c=2;c<l;c++)i[c]=n[c];return t.createElement.apply(null,i)}return t.createElement.apply(null,n)}g.displayName="MDXCreateElement"},44249:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>s,contentTitle:()=>i,default:()=>y,frontMatter:()=>l,metadata:()=>o,toc:()=>c});var t=n(58168),r=(n(96540),n(15680));const l={id:"async-await",title:"Async Await",sidebar_label:"Async Await",description:"Using Async Await with Playable Plugin, with verified examples",keywords:["async","await","playable","luna"]},i=void 0,o={unversionedId:"playable/code/unity-cs-features/async-await",id:"playable/code/unity-cs-features/async-await",title:"Async Await",description:"Using Async Await with Playable Plugin, with verified examples",source:"@site/docs/playable/code/unity-cs-features/async-await.md",sourceDirName:"playable/code/unity-cs-features",slug:"/playable/code/unity-cs-features/async-await",permalink:"/docs/playable/code/unity-cs-features/async-await",draft:!1,tags:[],version:"current",frontMatter:{id:"async-await",title:"Async Await",sidebar_label:"Async Await",description:"Using Async Await with Playable Plugin, with verified examples",keywords:["async","await","playable","luna"]},sidebar:"gettingStarted",previous:{title:"External JS Libraries",permalink:"/docs/playable/code/external-js-libraries"},next:{title:"Luna Compiler V2",permalink:"/docs/playable/code/luna-compiler-v2"}},s={},c=[],u={toc:c},p="wrapper";function y(e){let{components:a,...n}=e;return(0,r.yg)(p,(0,t.A)({},u,n,{components:a,mdxType:"MDXLayout"}),(0,r.yg)("p",null,"Asynchronous programming is very popular with the help of the async and await keywords in C#. And Luna supports those!\nBelow are some verified samples."),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},"Parallel calls")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-cs"},'//parralel calls\nasync Task DoWorkParallel()\n    {\n        Debug.Log( "parralel calls" );\n        TickParallel();\n        TockParallel();\n    }\n//Task method will work but not if you are not about to wait for it keep it void\nasync Task TickParallel()\n    {\n        Debug.Log( "Parallel Tick Waiting 0.5f second..." );\n        await Task.Delay( TimeSpan.FromSeconds( 0.5f ) );\n        Debug.Log( "Parallel Tick Done!" );\n    }\n//void as return value\nasync void TockParallel()\n    {\n        Debug.Log( "Parallel Tock Waiting 0.5f second..." );\n        await Task.Delay( TimeSpan.FromSeconds( 0.5f ) );\n        Debug.Log( "Parallel Tock Done!" );\n    }\n')),(0,r.yg)("ol",{start:2},(0,r.yg)("li",{parentName:"ol"},"Sequential calls")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-cs"},'//sequential calls\n//calling method have to be marked as async\n\nasync Task DoWorkSequential()\n    {\n        Debug.Log( "sequential calls" );\n        await TickSequential();\n        await TockSequential();\n    }\n//void method\nasync Task TickSequential()\n    {\n        Debug.Log( "Sequential Tick Waiting 1 second..." );\n     await Task.Delay( TimeSpan.FromSeconds( 1 ) );\n     Debug.Log( "Sequential Tick Done!" );\n    }\n//In order to wait for result return value should be Task\nasync Task TockSequential()\n    {\n        Debug.Log( "Sequential Tock Waiting 1 second..." );\n        await Task.Delay( TimeSpan.FromSeconds( 1 ) );\n        Debug.Log( "Sequential Tock Done!" );\n    }\n')),(0,r.yg)("ol",{start:3},(0,r.yg)("li",{parentName:"ol"},"Getting data from task (using ",(0,r.yg)("inlineCode",{parentName:"li"},"Task<T>"),")")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-cs"},'Debug.Log( await TickTockTracker() );\n//getting come data out of task\nasync Task<string> TickTockTracker()\n    {\n        return "Return result sample";\n    }\n')),(0,r.yg)("p",null,"4.Custom Awaiter"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-cs"},"//call for it\nawait  CustomAwaiter();\n//extenstion for TimeSpan\npublic static class AwaitExtensions\n    {\n        public static TaskAwaiter GetAwaiter( this TimeSpan timeSpan )\n            {\n                return Task.Delay( timeSpan ).GetAwaiter();\n            }\n    }\n")),(0,r.yg)("ol",{start:5},(0,r.yg)("li",{parentName:"ol"},"Calling from Coroutine")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-cs"},'StartCoroutine( RunTask() );\nIEnumerator RunTask()\n    {\n        yield return RunTaskAsync().AsIEnumerator();\n    }\nasync Task RunTaskAsync()\n    {\n        Debug.Log( "RunTaskAsync Start" );\n        await TimeSpan.FromSeconds( 1 );\n        Debug.Log( "RunTaskAsync Finish" );\n    }\npublic static class AwaitExtensions\n    {\n        public static IEnumerator AsIEnumerator( this Task task )\n            {\n                while ( !task.IsCompleted )\n            {\n                 yield return null;\n            }\n        if ( task.IsFaulted )\n            {\n                 throw task.Exception;\n            }\n    }\n')),(0,r.yg)("ol",{start:6},(0,r.yg)("li",{parentName:"ol"},"Use of async for Unity callbacks")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-cs"},"async void Start()\n{\n    await  DoWorkParallel();\n    await  DoWorkSequential();\n    Debug.Log( await TickTockTracker() );\n    await  CustomAwaiter();\n    StartCoroutine( RunTask() );\n}\n")))}y.isMDXComponent=!0}}]);