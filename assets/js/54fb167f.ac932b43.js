"use strict";(self.webpackChunkdeveloper_docs=self.webpackChunkdeveloper_docs||[]).push([[13426],{15680:(e,t,r)=>{r.d(t,{xA:()=>p,yg:()=>f});var a=r(96540);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),c=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},p=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},y=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=c(r),y=n,f=u["".concat(s,".").concat(y)]||u[y]||d[y]||o;return r?a.createElement(f,l(l({ref:t},p),{},{components:r})):a.createElement(f,l({ref:t},p))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,l=new Array(o);l[0]=y;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[u]="string"==typeof e?e:n,l[1]=i;for(var c=2;c<o;c++)l[c]=r[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,r)}y.displayName="MDXCreateElement"},46585:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var a=r(58168),n=(r(96540),r(15680));const o={id:"LP1011",title:"Unreadable texture",sidebar_label:"1011 - Unreadable Texture",description:"Explanation & steps to fix.",keywords:["unreadable","texture","fix","playable","luna","error","LP1011"]},l=void 0,i={unversionedId:"playable/code/error-codes/LP1011",id:"playable/code/error-codes/LP1011",title:"Unreadable texture",description:"Explanation & steps to fix.",source:"@site/docs/playable/code/error-codes/1011-UnreadableTexture.md",sourceDirName:"playable/code/error-codes",slug:"/playable/code/error-codes/LP1011",permalink:"/docs/playable/code/error-codes/LP1011",draft:!1,tags:[],version:"current",sidebarPosition:1011,frontMatter:{id:"LP1011",title:"Unreadable texture",sidebar_label:"1011 - Unreadable Texture",description:"Explanation & steps to fix.",keywords:["unreadable","texture","fix","playable","luna","error","LP1011"]},sidebar:"gettingStarted",previous:{title:"1010 - Scale On Collider",permalink:"/docs/playable/code/error-codes/LP1010"},next:{title:"1012 - Exportation",permalink:"/docs/playable/code/error-codes/LP1012"}},s={},c=[{value:"Message",id:"message",level:2},{value:"Explanation",id:"explanation",level:2},{value:"Steps to fix",id:"steps-to-fix",level:2}],p={toc:c},u="wrapper";function d(e){let{components:t,...r}=e;return(0,n.yg)(u,(0,a.A)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,n.yg)("h2",{id:"message"},"Message"),(0,n.yg)("p",null,"Unreadable texture."),(0,n.yg)("h2",{id:"explanation"},"Explanation"),(0,n.yg)("p",null,"Sometimes some of the assets (textures included) get damaged for various reasons: artist errors, broken merges, file system or software failures. Whenever the Playable Plugin attempts to export a texture and is unable to get its pixel data."),(0,n.yg)("div",{className:"callout info"},(0,n.yg)("strong",null,'Can it be simply "Read/Write" disabled?'),(0,n.yg)("br",null),"Not really. Playable Plugin is using multiple techniques to gather texture data, starting by making a copy of the underlying texture source file in case it is PNG, up to utilizing Unity's Graphics API to copy pixel data to work around compressed formats. Thus, if Playable Plugin fails to extract pixel data from a texture, it is most likely damaged in one way or another."),(0,n.yg)("h2",{id:"steps-to-fix"},"Steps to fix"),(0,n.yg)("p",null,"Fix the underlying asset."))}d.isMDXComponent=!0}}]);