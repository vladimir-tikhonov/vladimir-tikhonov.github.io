"use strict";(self.webpackChunkdeveloper_docs=self.webpackChunkdeveloper_docs||[]).push([[24705],{15680:(e,n,t)=>{t.d(n,{xA:()=>p,yg:()=>y});var r=t(96540);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var a=r.createContext({}),c=function(e){var n=r.useContext(a),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},p=function(e){var n=c(e.components);return r.createElement(a.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},g=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,a=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(t),g=o,y=u["".concat(a,".").concat(g)]||u[g]||d[g]||i;return t?r.createElement(y,l(l({ref:n},p),{},{components:t})):r.createElement(y,l({ref:n},p))}));function y(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,l=new Array(i);l[0]=g;var s={};for(var a in n)hasOwnProperty.call(n,a)&&(s[a]=n[a]);s.originalType=e,s[u]="string"==typeof e?e:o,l[1]=s;for(var c=2;c<i;c++)l[c]=t[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}g.displayName="MDXCreateElement"},94551:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var r=t(58168),o=(t(96540),t(15680));const i={id:"colliders-not-working",title:"Colliders not working",sidebar_label:"Colliders not working"},l=void 0,s={unversionedId:"playable/common-issues/physics/colliders-not-working",id:"playable/common-issues/physics/colliders-not-working",title:"Colliders not working",description:"This may be happening if you are using an unsupported Character",source:"@site/docs/playable/common-issues/physics/colliders-not-working.md",sourceDirName:"playable/common-issues/physics",slug:"/playable/common-issues/physics/colliders-not-working",permalink:"/docs/playable/common-issues/physics/colliders-not-working",draft:!1,tags:[],version:"current",frontMatter:{id:"colliders-not-working",title:"Colliders not working",sidebar_label:"Colliders not working"},sidebar:"gettingStarted",previous:{title:"OnCollisionEnter not getting called",permalink:"/docs/playable/common-issues/physics/oncollisionenter-not-getting"},next:{title:"Rigidbody2D stops working  responding to physics events",permalink:"/docs/playable/common-issues/physics/rigidbody2d-stops-working"}},a={},c=[],p={toc:c},u="wrapper";function d(e){let{components:n,...i}=e;return(0,o.yg)(u,(0,r.A)({},p,i,{components:n,mdxType:"MDXLayout"}),(0,o.yg)("p",null,"This may be happening if you are using an unsupported Character\ncontroller, or have a high torque multiplier value."),(0,o.yg)("p",null,"This could also be due to using the ",(0,o.yg)("inlineCode",{parentName:"p"},"MovePosition")," API on a Rigidbody component."),(0,o.yg)("p",null,"Alternatively this could also be due to setting Drag and/or Angular Drag to Infinity, which then overrides the forces keeping the colliders apart."),(0,o.yg)("p",null,"Possible solution:"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Use a rigidbody instead."),(0,o.yg)("li",{parentName:"ul"},'Reduce torque and change collision detection to "Discrete".'),(0,o.yg)("li",{parentName:"ul"},"Use ",(0,o.yg)("inlineCode",{parentName:"li"},"Velocity")," instead of ",(0,o.yg)("inlineCode",{parentName:"li"},"MovePosition"),"."),(0,o.yg)("li",{parentName:"ul"},"Set the Drag / Angular Drag to not be infinite, e.g. 1.")),(0,o.yg)("p",null,(0,o.yg)("img",{alt:"images-small",src:t(38647).A,width:"549",height:"316"})))}d.isMDXComponent=!0},38647:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/physics-drag-c7e072369c9e905f3e14905642e524ca.png"}}]);