{"searchDocs":[{"title":"Mintegral","type":0,"sectionRef":"#","url":"/docs/playable/ad-networks/mintegral","content":"","keywords":"mintegral playable luna","version":"Next"},{"title":"Network Specifications​","type":1,"pageTitle":"Mintegral","url":"/docs/playable/ad-networks/mintegral#network-specifications","content":"Specifications Format: Single html file (index.html) or zip file with resources Files: Zip file, Assets folder and HTML file should be named identically. (mintegral.zip &gt; mintegral &gt; mintegral.html)Size: Up to 5MB Please see specifications for further details. caution Additional to the App store click API, the GameEnded API also needs to be added in Luna. ","version":"Next","tagName":"h2"},{"title":"Testing​","type":1,"pageTitle":"Mintegral","url":"/docs/playable/ad-networks/mintegral#testing","content":"In order to test your build for Mintegral, please follow these steps: Download a Mintegral build from your Creative Suite account. Navigate to the Mintegral playable preview tool.  Drag in your zip archive file or find it manually. Play the playable in the preview tool. If the playable has any errors such as wrong size, wrong formatting or any missing APIs, it will be highlighted in red. You can then preview the playable and change the orientation. The preview tool will show a message when a successful app store click has taken place - please ensure this happens at all expected locations.  Once you are happy, and the test cases are all green, you can send your Playable to Mintegral. ","version":"Next","tagName":"h2"},{"title":"TikTok","type":0,"sectionRef":"#","url":"/docs/playable/ad-networks/tiktok","content":"","keywords":"tiktok playable luna","version":"Next"},{"title":"Network Specifications​","type":1,"pageTitle":"TikTok","url":"/docs/playable/ad-networks/tiktok#network-specifications","content":"Specifications Files: Zip file, Assets folder and HTML file should be named index.htmlSize: Up to 3 MBFormat: The main HTML file in the first-level directory should be named index.html. Please see specification for further details. ","version":"Next","tagName":"h2"},{"title":"Testing​","type":1,"pageTitle":"TikTok","url":"/docs/playable/ad-networks/tiktok#testing","content":"Currently, there is no testing tool available for playables on TikTok. ","version":"Next","tagName":"h2"},{"title":"Additional Details​","type":1,"pageTitle":"TikTok","url":"/docs/playable/ad-networks/tiktok#additional-details","content":"The display orientations and languages must be stored in a config.json file, located in the first-level directory. The orientation must be stored with values of 0,1,2 (responsive, portrait, landscape).The language code must be stored in the playable_languages array. Example: &quot;playable_orientation&quot;: 0, &quot;playable_languages&quot;:[&quot;ja&quot;,&quot;ko&quot;]  en: English ja: Japanese Ko: Korean Zh-Hant: Traditional Chinese ","version":"Next","tagName":"h2"},{"title":"AppsFlyer Setup","type":0,"sectionRef":"#","url":"/docs/playable/attribution/appsflyer","content":"","keywords":"appsflyer playable luna","version":"Next"},{"title":"Integration Guide​","type":1,"pageTitle":"AppsFlyer Setup","url":"/docs/playable/attribution/appsflyer#integration-guide","content":"This guide details how you can track installs in Creative Suite when using AppsFlyer as your measurement partner. Login to your AppsFlyer account and add Luna Labs as an integration partner. You can find out more details on how to do that here. Set up your click tracking URLs following your regular approach (for example, one link per App/OS/Network combination). When you have generated your tracking links, add the following parameter to end of the URL: &amp;af_addpb=1 For example: https://app.appsflyer.com/id1234567890?af_siteid={ApplicationId}_{ApplicationName}&amp;c={CampaignName}&amp;af_adset={adgroup_name}&amp;af_ad={CreativeName}&amp;clickid={DynamicParameter}&amp;af_addpb=1 Please also make sure to include the following tracking parameters which enable more accurate matching: c={CampaignName}af_adset={AdSetName}af_ad={CreativeName} We take your data and user privacy very seriously at Luna. By using the above parameter in the playables you create with Luna, you can ensure that only the relevant data is shared. We do not use or store any personally identifiable information, such as IP address or Device ID. Go live! Make sure to follow the instructions to set up matching in Creative Suite. ","version":"Next","tagName":"h2"},{"title":"Applovin","type":0,"sectionRef":"#","url":"/docs/playable/ad-networks/applovin","content":"","keywords":"applovin playable luna","version":"Next"},{"title":"Network Specifications​","type":1,"pageTitle":"Applovin","url":"/docs/playable/ad-networks/applovin#network-specifications","content":"Specifications Format: Single html file (index.html)Size: Up to 5MB ","version":"Next","tagName":"h2"},{"title":"Testing​","type":1,"pageTitle":"Applovin","url":"/docs/playable/ad-networks/applovin#testing","content":"In order to test your build for Applovin, please follow these steps: Download an Applovin build from you Creative Suite account.Navigate to the Applovin playable preview tool.Drag in your index.html file or find it manually.  If the playable is incorrectly formatted or over the file size limit, you will an error such as the following:  You may now test the playable in the preview, and change the orientation.The preview tool will show a message when a successful app store click has taken place - please ensure this happens at all expected locations.  ","version":"Next","tagName":"h2"},{"title":"Facebook","type":0,"sectionRef":"#","url":"/docs/playable/ad-networks/facebook","content":"","keywords":"facebook playable luna","version":"Next"},{"title":"Network Specifications​","type":1,"pageTitle":"Facebook","url":"/docs/playable/ad-networks/facebook#network-specifications","content":"Specifications Format: Single HTML file (index.html)ZIP file with resources (bundle may not exceed 100 files);Here is how Luna can set the Facebook build as ZIP or inline HTML.Size:Up to 2MB for single html file. Up to 5MB for zip file Please see Facebook specifications for playable ads for further details. ","version":"Next","tagName":"h2"},{"title":"Testing​","type":1,"pageTitle":"Facebook","url":"/docs/playable/ad-networks/facebook#testing","content":"In order to test your build for Facebook, please follow these steps: Download a Facebook build from your Creative Suite account.Navigate to the Facebook playable preview tool.Drag in your file or find it manually.  If the playable is incorrectly formatted or over the file size limit, you will an error such as the following:  You may now test the playable in the preview, and change the resolution.The preview tool will show a message when a successful app store click has taken place - please ensure this happens at all expected locations.Once all the specification items on the right-hand-side are green, the playable can be uploaded to Ads Manager.  ","version":"Next","tagName":"h2"},{"title":"Adjust Setup","type":0,"sectionRef":"#","url":"/docs/playable/attribution/adjust","content":"","keywords":"adjust playable luna","version":"Next"},{"title":"Integration Guide​","type":1,"pageTitle":"Adjust Setup","url":"/docs/playable/attribution/adjust#integration-guide","content":"This guide details how you can track installs in Creative Suite when using Adjust as your measurement partner. Login to your Adjust account and add Luna Labs as an integration partner. You can find out more details on how to do that here. Set up your click tracking URLs following your regular approach (for example, one link per App/OS/Network combination). When you have generated your tracking links, add the following parameter to end of the URL: &amp;luna_labs_click_id={DynamicParameter} For example: https://s2s.adjust.com/tracker_id?campaign={campaign_name}&amp;adgroup={adgroup_name}&amp;creative={creative_name}&amp;s2s=1&amp;idfa={ifa}&amp;gps_adid={ifa}&amp;ip_address={ip}&amp;user_agent={user_agent}&amp;android_id_lower_md5={android_id_md5}&amp;cost_type=CPI&amp;cost_amount={cpi}&amp;luna_labs_click_id={DynamicParameter} The DynamicParameter allows us to pull network-specific data, such as a unique id for the ad. If running your playables on Applovin, please replace the parameter with &amp;luna_labs_click_id=1. Please also make sure to include the following tracking parameters which enable more accurate matching: campaign={campaign_name}adgroup={adgroup_name}creative={creative_name} We take your data and user privacy very seriously at Luna. By using the above parameter in the playables you create with Luna, you can ensure that only the relevant data is shared. We do not use or store any personally identifiable information, such as IP address or Device ID. Go live! Make sure to follow the instructions to set up matching in Creative Suite. ","version":"Next","tagName":"h2"},{"title":"Unity Ads","type":0,"sectionRef":"#","url":"/docs/playable/ad-networks/unity-ads","content":"","keywords":"unity ads playable luna","version":"Next"},{"title":"Network Specifications​","type":1,"pageTitle":"Unity Ads","url":"/docs/playable/ad-networks/unity-ads#network-specifications","content":"Specifications Format: Single html file (index.html) Size: Up to 5MB ","version":"Next","tagName":"h2"},{"title":"Testing​","type":1,"pageTitle":"Unity Ads","url":"/docs/playable/ad-networks/unity-ads#testing","content":"In order to test your build for Unity Ads, please follow these steps: Important Your playable ad must include the App Store and Google Play app store URLs in order to pass QA. Before carrying out the following steps, please ensure you have set these links in the Playable UI under: Playable settings &gt; iOS/Android install game link. More details here. Please make sure that for iOS app store links, you use the apps.apple.com/ domain, and NOT the itunes.apple/com/ domain. Copy Unity Ads link from the download menu in your Creative Suite account Download the Android or iOS test app from Unity Open the app and past in the URL of your playable ad Press &quot;Initialize&quot; Once the ad is loads, press &quot;Show&quot; If the ad fails to load, or to check the status of the ad, go back to the main screen and press &quot;Analyse&quot;. Any issues will be surfaced in the Creative report Example:  ","version":"Next","tagName":"h2"},{"title":"Vungle","type":0,"sectionRef":"#","url":"/docs/playable/ad-networks/vungle","content":"","keywords":"vungle playable luna","version":"Next"},{"title":"Network Specifications​","type":1,"pageTitle":"Vungle","url":"/docs/playable/ad-networks/vungle#network-specifications","content":"Specifications Format: Single html file (ad.html) or zip file with resources Files: Name your main html file &quot;ad.html&quot;.Size: Up to 5MB Please see specifications for further details. caution Additional to the App store click API, the GameEnded API also needs to be added in Luna. ","version":"Next","tagName":"h2"},{"title":"Testing​","type":1,"pageTitle":"Vungle","url":"/docs/playable/ad-networks/vungle#testing","content":"In order to test your build for Vungle, please follow these steps provided by Vungle here. ","version":"Next","tagName":"h2"},{"title":"Kochava Setup","type":0,"sectionRef":"#","url":"/docs/playable/attribution/kochava","content":"","keywords":"kochava playable luna","version":"Next"},{"title":"Integration Guide​","type":1,"pageTitle":"Kochava Setup","url":"/docs/playable/attribution/kochava#integration-guide","content":"This guide details how you can track installs in Creative Suite when using Kochava as your measurement partner. Login to your Kochava account and set up a postback, and be sure to set the delivery method to “all”. You can find out more details on how to do that here. Set up your click tracking URLs following your regular approach (for example, one link per App/OS/Network combination). When you have generated your tracking links, add the following parameter to end of the URL: luna_labs_click_id=1 For example: https://control.kochava.com/v1/cpi/click?af_siteid={ApplicationId}_{ApplicationName}&amp;c={CampaignName}&amp;af_adset={adgroup_name}&amp;af_ad={CreativeName}&amp;lickid={DynamicParameter}&amp;luna_labs_click_id=1 Please also make sure to include the following tracking parameters which enable more accurate matching: c={CampaignName}af_adset={AdSetName}af_ad={CreativeName} We take your data and user privacy very seriously at Luna. By using the above parameter in the playables you create with Luna, you can ensure that only the relevant data is shared. We do not use or store any personally identifiable information, such as IP address or Device ID. Go live! Make sure to follow the instructions to set up matching in Creative Suite. ","version":"Next","tagName":"h2"},{"title":"Remote Debugging","type":0,"sectionRef":"#","url":"/docs/playable/ad-networks/remote-debugging","content":"","keywords":"ad networks supported supports playable luna","version":"Next"},{"title":"Logs in platform builds​","type":1,"pageTitle":"Remote Debugging","url":"/docs/playable/ad-networks/remote-debugging#logs-in-platform-builds","content":"For platform builds logs arent displayed when dev tools are closed. This is done to prevent performance issues caused by excessive logging from user scripts. If you launch a playable with dev tools closed you will see the following message:  In order to see the logs, you have to open dev tools and reload the playable. ","version":"Next","tagName":"h2"},{"title":"Remote debugging​","type":1,"pageTitle":"Remote Debugging","url":"/docs/playable/ad-networks/remote-debugging#remote-debugging","content":"A remote debugger is a helpful feature in situations when you dont have access to the logs - for example when youre launching your playable in a test tool installed on an Android / iOS device. Use the following step in order to activate the remote debugger: Download a platform build from Creative Suite.Locate an index.html file and open it in a text editor.Search for an insertYourRemoteDebuggingTokenHere=&quot;&quot;, replace it with insertYourRemoteDebuggingTokenHere=&quot;any-token-of-your-choise&quot; and save the changes.Open https://console.re/your-token in browser, for example: https://console.re/any-token-of-your-choiseLaunch the playable in test tool and observe the logs.   be careful Please note that remote debugging only works when you open the build locally or via test tool on a physical device. This feature wont work on a web-based test tools, just open developer tools in your browser in order to inspect logs in such cases. ","version":"Next","tagName":"h2"},{"title":"Animation Baking","type":0,"sectionRef":"#","url":"/docs/playable/code/animation-baking","content":"","keywords":"animation avatar generic convert playable luna","version":"Next"},{"title":"Using the Animation baker plugin​","type":1,"pageTitle":"Animation Baking","url":"/docs/playable/code/animation-baking#using-the-animation-baker-plugin","content":"Animation baker is a free plugin, downloadable from the Unity asset store - use this link To begin using this plugin to convert your Avatar-based animation into animations that are supported by Luna, there are a few steps that are required for you to take: ","version":"Next","tagName":"h2"},{"title":"Import Animation baker into your Unity Project.​","type":1,"pageTitle":"Animation Baking","url":"/docs/playable/code/animation-baking#import-animation-baker-into-your-unity-project","content":"Open Window &gt; Animation bakerSelect the avatar character and click inside the baker window to add it to the character listSelect the Animation and click in animation list inside the baker window to add it inStart recording animation ","version":"Next","tagName":"h3"},{"title":"Preparing the animation​","type":1,"pageTitle":"Animation Baking","url":"/docs/playable/code/animation-baking#preparing-the-animation","content":"Open up the Animation baker window and start adding in the character and animation.  In the example below both the character and animation clips are added inside the Animation baker window from the asset folder. Once you have the characters and animations you can click Start recording to begin the capture.  Upon completion of the recording process a new animation clip will be present inside the AnimationBaker &gt; UnityAnimations.  Once recording is complete you are happy with the newly created animation, you can add it to the character like a normal animation, using Animation controller and setting up the new animation which can now be used in your Luna builds. Before starting a Luna build, navigate inside the Luna UI window &gt; Source code and exclude the animation baker folder. This will exclude only the C# files that would normally cause errors in the build process. This will not exclude the animation clip.  ","version":"Next","tagName":"h3"},{"title":"Animation Size​","type":1,"pageTitle":"Animation Baking","url":"/docs/playable/code/animation-baking#animation-size","content":"Recording the animation with keyframes can also bloat the size of the animation, due to the number of keyframes required. There are some things to consider in order to help reduce its size: In the Animation baker window, Recording options you can incrementally reduce the Samples count.  Depending on how low you go it will reduce the amount of keyframes used in the animation clip. In turn this will also reduce its size. Keep in mind that lowering the sample count will also lower the animation quality. Options Checked for root constraints and baked options can also inflate the size of the animation clip. ","version":"Next","tagName":"h3"},{"title":"Ad Network - Overview","type":0,"sectionRef":"#","url":"/docs/playable/ad-networks/overview","content":"","keywords":"ad networks supported supports playable luna","version":"Next"},{"title":"Currently Supported Ad Networks / Test Apps​","type":1,"pageTitle":"Ad Network - Overview","url":"/docs/playable/ad-networks/overview#currently-supported-ad-networks--test-apps","content":"Network\tFile Size\tFormat\tLuna Checklist\tTest Site\tTest AppAARKI\t5MB\tSingle HTML file\t- Include the App Store Click API AdColony\t2 MB\tSingle HTML file\t- Include the App Store Click API - Include the Apple and Google Play app store URLs IOS Android Applovin\t5MB\tSingle HTML file\t- Include the App Store Click API\tPlayable Preview\tIOS Android Appreciate\t4MB\tZip file with resources Display &amp; Video 360 Zip HTML file without resources Test Tool Facebook\t2 MB HTML / 5 MB Zip\tSingle HTML or Zip with resources\t- Include the App Store Click API\tPlayable Preview (Beta) Google Ads\t5 MB\tZipped HTML file\t- Include the App Store Click API\tUse Google Ad Manager for testing ironSource\t5 MB\tSingle HTML file\t- Include the App Store Click API\tSubmit an HTML asset for review Liftoff\t5MB\tZip file with resources Mintegral\t5MB\tSingle HTML or Zip with resources\t- Include the App Store Click API - Include the Game Ended API\tMindworks Playable Testing Moloco\t2MB HTML / 5MB Zip\tSingle HTML or Zip with resources\t- Include the App Store Click API Remerge\t5MB\tZip file with resources Tencent\t3MB\tZip file with resources TikTok\t3MB\tZip file with resources\t- Include the App Store Click API - Update the playable config file with the playable language (see more) Unity Ads\t5MB\tSingle HTML file\t- Include the App Store Click API - Include the Apple and Google Play app store URLs IOS Android Vungle\t5MB\tSingle HTML or Zip with resources\t- Include the App Store Click API - Include the Game Ended API iOS and Android MRAID (generic build)\tPlatform dependent\tSingle HTML file\t- Include the App Store Click API  The rest of this section provides some guidelines on how to test your playable ads for specific networks. ","version":"Next","tagName":"h2"},{"title":"ironSource","type":0,"sectionRef":"#","url":"/docs/playable/ad-networks/ironsource","content":"","keywords":"ironSource playable luna","version":"Next"},{"title":"Network Specifications​","type":1,"pageTitle":"ironSource","url":"/docs/playable/ad-networks/ironsource#network-specifications","content":"Specifications Format: Single html file (index.html) Size: Up to 5MB ","version":"Next","tagName":"h2"},{"title":"Testing​","type":1,"pageTitle":"ironSource","url":"/docs/playable/ad-networks/ironsource#testing","content":"ironSource Test tool The ironSource test tool has been deprecated in March 2023. If you're planning to use ironSource for your playable ads, it's essential to make sure that your build is compatible with the platform. In order to do that, you'll need to submit your build for review in the ironSource dashboard. Submitting your build for review is a straightforward process, but it's essential to follow the correct steps to ensure that your submission is successful. To help you through this process, ironSource provides a detailed guidethat explains how to submit your build for review step-by-step. By following the instructions provided in the ironSource guide, you can ensure that your build is reviewed efficiently and effectively and that your playable ads are quality assured.  ","version":"Next","tagName":"h2"},{"title":"Setup Attribution in Luna Creative Suite","type":0,"sectionRef":"#","url":"/docs/playable/attribution/setup","content":"Setup Attribution in Luna Creative Suite In order to track install events in Luna Creative Suite, you can follow this setup guide. At a high level, you will need to complete the following items to enable your playable app to receive events. Add your app store URLsSelect your attribution providerConfigure the &quot;Ignored concepts&quot; which tells Luna which concepts not to matchComplete the concept name matching for each playable creative When setting up attribution, if you ignore a concept it will ignore it at the bundle ID level and therefore be ignored in any app with the same bundle ID. Be sure to match your concepts, and dont ignore concepts which are used in another playable app. Please note that before following the steps below, you will need to follow the steps provided for your attribution provider. Adjust SetupAppsflyerSingular (coming soon) In Luna Creative Suite, navigate to the relevant app and then Settings -&gt; General. Enter the Apple and Google Play app store URLs for the app. Please note, if you are using multiple app store URLs within the same playable app (i.e. a Chinese App Store) then you should enter the default URL here, and use the creative-level URL in the table below. By default, all creatives inherit the global URL, unless overwritten. When you enter a new URL, the status will be marked as pending, and awaiting approval. This is to ensure that apps are not claimed by incorrect accounts. Once approved, the URL status will change to show a green check mark. It can take up to 24 hours for the approval status to change. If you are experience longer wait times, please reach out to your Luna representative. Choose your attribution provider from the drop down. The Ignored Concepts menu allows you to let Luna know which concepts on each ad network are not relevant for matching. For example, you will often use a campaign-level attribution URL, and therefore be sending install events to Luna for concepts which aren't live on the platform i.e. video ads. In order to improve the matching accuracy and remove this data, you can use this menu to ignore certain concepts. When setting up attribution, if you ignore a concept it will ignore it at the bundle ID level and therefore be ignored in any app with the same bundle ID. Be sure to match your concepts, and dont ignore concepts which are used in another playable app. In order to start the matching, you will now need to assign concept names from your attribution post backs, to the playable creative in Luna. To do this, a drop down menu is provided in the creative settings table. Hit Save. Once you have completed all the steps above, you will now be shown the number of unmatched events assigned to the approved application URLs. In order to try matching with the new saved settings, you can use this Retry events functionality. Once an install has been attributed to a Luna creative, it cannot be move, so ensure your settings are correct before attempting to match. You're done!","keywords":"attribution setup playable luna","version":"Next"},{"title":"Visual Studio Solution File","type":0,"sectionRef":"#","url":"/docs/playable/code/code-solution","content":"","keywords":"vs solution playable luna","version":"Next"},{"title":"Motivation​","type":1,"pageTitle":"Visual Studio Solution File","url":"/docs/playable/code/code-solution#motivation","content":"A crucial part of Luna export process is compiling project scripts written in C# into JavaScript. In order to minimize changes required to the original codebase and smoothen developers' experience, Luna contains a set of .NET libraries that are compatible with UnityEngine.dll on the API level. That means your code can invoke functions, read constants and values and do other things without changes as if they were invoked against &quot;real&quot; UnityEngine.dll. However, Luna is not a 100% replicate of Unity Engine for multiple reasons: performance, availability of certain APIs on the Web platform, obsolescence of some parts of the engine and so on. That renders a possibility of the code failing to compile against Luna's version of Unity runtime. In most cases it is very easy to work around specific missing APIs by replacing them with available alternatives or even simply disabling parts of the code that aren't critical for the final product. This, however, requires manual intervention and Luna is doing its best to make this process as approachable as possible. ","version":"Next","tagName":"h2"},{"title":"Suggested workflow​","type":1,"pageTitle":"Visual Studio Solution File","url":"/docs/playable/code/code-solution#suggested-workflow","content":"In order to debug the compilation step and keep developers in the environment they are comfortable working in, Luna generates a separate solution file configured with all relevant C# files from the project. Developers can then open that solution file using their IDE of choice should compilation fail. When you encounter a compilation error, you will be prompted by a popup:  Hitting &quot;Show Report&quot; button will open the Project Diagnostics, similarly to Unity's console. Here you will find a breakdown of the compilation errors.  At any time from here, navigate to the Code tab and hit the Open Luna Solution button. This will launch your default IDE with the Luna solution loaded.  The solution is set up in such a way that the following always holds true: All C# scripts are linked into the solution. You can change them here without the need to propagate the changes back to Unity's files.Instead of &quot;original&quot; UnityEngine.dll, Luna's version is used. That means you can trigger a build from the IDE to see if the errors go away, code completion also works out of the box and so on. Upon opening a solution and triggering a rebuild, developers are presented with the exact errors that stop Luna from compiling the project:  Code completion hints are also available automatically:  At Luna, we have found this setup extremely convenient to iterate on the code and make fixes whenever required. ","version":"Next","tagName":"h2"},{"title":"Excluding C# code from compilation process","type":0,"sectionRef":"#","url":"/docs/playable/code/code-excludes","content":"","keywords":"playable luna","version":"Next"},{"title":"Code Excludes​","type":1,"pageTitle":"Excluding C# code from compilation process","url":"/docs/playable/code/code-excludes#code-excludes","content":"It may be the case when the original, fully-featured game relies on the APIs that are not available in Luna, but the availability of those APIs is not a hard requirement for a playable. For instance, the full version of the game might use Unity's AI system with C# scripts communicating to this system, and the playable creative slice can be easily done without that behaviour. That is the reason Luna UI features an ability to exclude certain folders and files from compilation process as initiated by the developer. ","version":"Next","tagName":"h2"},{"title":"How to configure code excludes​","type":1,"pageTitle":"Excluding C# code from compilation process","url":"/docs/playable/code/code-excludes#how-to-configure-code-excludes","content":"Luna has a separate tab in the Code section named Exclusions, which is dedicated to this particular purpose:  Excluding a set of files or an individual file from compilation by Luna is as easy as ticking a checkbox next to a folder or a C# file. This action doesn't alter the Unity project in any way and simply removes the corresponding files from Luna solution. It is a very effective way of quickly reducing the number of build errors if the app relies heavily on third-party libraries (Social SDKs, Ad SDKs and so on). IMPORTANT Make sure to exclude files carefully. Removing scripts that are used in the scene or added to the objects dynamically will not lead to compilation errors but would potentially crash the app in runtime! ","version":"Next","tagName":"h3"},{"title":"C# Block Excludes​","type":1,"pageTitle":"Excluding C# code from compilation process","url":"/docs/playable/code/code-excludes#c-block-excludes","content":"Sometimes the logic within existing C# files is crucial for the game to work, but at the same time is heavily interweaved with logic related to things that are unsupported in Luna. This can range from a missing API to (much more likely) third-party libraries' integration. For instance, a C# script responsible for core game logic might contain invocations of an Analytics service. For this particular matter, Luna provides a C# define helping to guard blocks of code when those are compiled by Luna. ","version":"Next","tagName":"h2"},{"title":"How to configure code block excludes​","type":1,"pageTitle":"Excluding C# code from compilation process","url":"/docs/playable/code/code-excludes#how-to-configure-code-block-excludes","content":"Similarly to UNITY_EDITOR define and the like, Luna sets up it's own define, UNITY_LUNA. This way, a developer can wrap a block of code using a conditional preprocessor directive to avoid some path of the code from being compiled:   This define is also enabled in Luna's VS solution, thus hinting to the developer that particular blocks of code will (or will not) take part in compilation process. The UNITY_LUNA define can also be used to invoke bits of code only in Luna, shall this necessity appear. Although in most cases it is considered a better practice to drive such things using settings of game objects / store flags in a scriptable object / configure via an external file, it might become handy to quickly adjust some parts for Luna only (i.e. load level number 5 instead of 1 if the game is built with Luna). ","version":"Next","tagName":"h3"},{"title":"Attribution - Overview","type":0,"sectionRef":"#","url":"/docs/playable/attribution/overview","content":"","keywords":"attribution playable luna","version":"Next"},{"title":"How does it work?​","type":1,"pageTitle":"Attribution - Overview","url":"/docs/playable/attribution/overview#how-does-it-work","content":"When a playable is enabled for attribution in Luna, we will begin listening for install events from one of the supported partners. When an install is received, we are able to match this based on some data including click time and concept name. If we find a match, an install will be logged and available in Luna Insights for use in your concept analysis. As it is common to use an attribution URL for a campaign or ad network, Luna provides a concept matching functionality in your playable's general settings (Settings -&gt; General). This allows you to tell Luna which concept from each ad network to a specific creative in Luna. In order to go live with install events in Luna Creative Suite, please: Follow the setup instructions for your attribution provider (see below)Complete the setup steps for Luna Creative Suite ","version":"Next","tagName":"h2"},{"title":"Supported Partners​","type":1,"pageTitle":"Attribution - Overview","url":"/docs/playable/attribution/overview#supported-partners","content":"AdjustAppsflyerKochavaSingular (coming soon) We are currently integrating with more partners! Watch this space! ","version":"Next","tagName":"h2"},{"title":"Automatic Stubbing","type":0,"sectionRef":"#","url":"/docs/playable/code/automatic-stubbing","content":"","keywords":"stubber automatic stubbing playable luna","version":"Next"},{"title":"When to use it​","type":1,"pageTitle":"Automatic Stubbing","url":"/docs/playable/code/automatic-stubbing#when-to-use-it","content":"If your project contains a plugin, SDK or library that you know will not be essential for your playable, it may be necessary to remove that library and any references to it to either successfully execute the Playable Plugin build process or reduce the size of your final build. It is recommended that you use the Automatic Stubbing feature to accomplish this. In addition to specifying namespaces to be stubbed manually, we have also included a number of commonly used SDK stubs that you can enable easily by selecting them in the plugin editor window. ","version":"Next","tagName":"h2"},{"title":"How it works​","type":1,"pageTitle":"Automatic Stubbing","url":"/docs/playable/code/automatic-stubbing#how-it-works","content":"The Automatic Stubbing feature takes a namespace or path and locates all assemblies belonging to that namespace or at the specified path, it will then fetch all associated public classes, enumerations and structs. With the collected information, the plugin generates all types and methods that can be used in user scripts and implements them as stubs with empty bodies, except when the method has a non-void return type in which case it will generate a default value. The plugin saves generated stubs in a Stubs directory in the project root directory, scripts located here will be organised by namespace and class. ","version":"Next","tagName":"h2"},{"title":"How to use it​","type":1,"pageTitle":"Automatic Stubbing","url":"/docs/playable/code/automatic-stubbing#how-to-use-it","content":"Navigate to the Code section, and the Stubs tab in the Playable Plugin Unity plugin window.  If you intend to stub one of the commonly used SDKs listed, simply toggle the checkbox to the left of the name of the SDK you want to stub. You can enable as many of these as you wish. The plugin automatically adds folders with this SDK to excludes to avoid conflicts when you export your Luna buildIf you need to stub another library, youll need to enter its namespace and list any specific classes you want to stub. If you want to stub all public classes within a namespace, leave the classes field empty. You can also provide a human-readable name for each namespace to help you and your team members identify it easily. Once youve entered the details of the library you want to stub, click the “Generate Stub” button and its details will appear in the list of stubs above. From that list, you can easily enable or disable the stub by toggling the checkbox.  If you enable a stub for a custom namespace, you will need to ensure that Luna excludes the original scripts during the export process to avoid errors. You can accomplish this by adding the directory to list of Force Excluded C# files in the Source Code section of the plugin. For more details on the Force Exclusion process, read our documentation on Excluding C# code from compilation. If you attempt to add a stub for a namespace that does not exist in your project, the plugin will throw an exception and the library will not be added to the list of stubs. Make sure to check the console in the Unity Editor for errors when attempting to add a stub. ","version":"Next","tagName":"h2"},{"title":"Repeat wrap mode used","type":0,"sectionRef":"#","url":"/docs/playable/code/error-codes/LP1002","content":"","keywords":"non-repeat repeat wrap mode used fix playable luna error LP1002","version":"Next"},{"title":"Message​","type":1,"pageTitle":"Repeat wrap mode used","url":"/docs/playable/code/error-codes/LP1002#message","content":"Repeat wrap mode used on a texture with non power-of-two dimensions, may cause it to be rendered incorrectly. ","version":"Next","tagName":"h2"},{"title":"Explanation​","type":1,"pageTitle":"Repeat wrap mode used","url":"/docs/playable/code/error-codes/LP1002#explanation","content":"Playable Plugin targets WebGL 1 API, which is roughly equivalent to OpenGL ES 2.0. This family of graphics API doesn't support the sampling textures with addressing mode Repeat, if the texture's dimensions are not power-of-two. ","version":"Next","tagName":"h2"},{"title":"Steps to fix​","type":1,"pageTitle":"Repeat wrap mode used","url":"/docs/playable/code/error-codes/LP1002#steps-to-fix","content":"There are two options of how this warning can be eliminated: Use Unity's &quot;Non Power of 2&quot; option to automatically resize the texture to become a PoT texture (Luna does respect this setting as well). This option can be found in texture's import settings:  Resize the original file in any graphics editor (Photoshop, Sketch etc) to make sure both width and height are power of two (2, 4, 8, 16 ...) ","version":"Next","tagName":"h2"},{"title":"Huge Mesh usage","type":0,"sectionRef":"#","url":"/docs/playable/code/error-codes/LP1000","content":"","keywords":"huge big mesh usage fix playable luna error LP1000","version":"Next"},{"title":"Message​","type":1,"pageTitle":"Huge Mesh usage","url":"/docs/playable/code/error-codes/LP1000#message","content":"Huge mesh usage, this might significantly increase output files size. ","version":"Next","tagName":"h2"},{"title":"Explanation​","type":1,"pageTitle":"Huge Mesh usage","url":"/docs/playable/code/error-codes/LP1000#explanation","content":"Playable warns developers each time it encounters a mesh in use which is over 1Mb in size. In some cases, having such a sizeable mesh is fine, but for many instances (Playable Ads, Messenger Games etc) this might be a problem due to the impact on the build size. In addition to that, having a mesh collider using such a mesh will incur additional performance penalty as Physics engine will have to process each and every vertex at startup. ","version":"Next","tagName":"h2"},{"title":"Steps to fix​","type":1,"pageTitle":"Huge Mesh usage","url":"/docs/playable/code/error-codes/LP1000#steps-to-fix","content":"Try using a simpler mesh geometry, or even employ techniques like Bump Mapping to keep the level of detail at acceptable level. ","version":"Next","tagName":"h2"},{"title":"There are missing components","type":0,"sectionRef":"#","url":"/docs/playable/code/error-codes/LP1008","content":"","keywords":"missing components fix playable luna error LP1008","version":"Next"},{"title":"Message​","type":1,"pageTitle":"There are missing components","url":"/docs/playable/code/error-codes/LP1008#message","content":"There are missing components on &quot;&lt;GAME_OBJECT_NAME&gt;&quot;. ","version":"Next","tagName":"h2"},{"title":"Explanation​","type":1,"pageTitle":"There are missing components","url":"/docs/playable/code/error-codes/LP1008#explanation","content":"Sometimes developers forget to remove a component they added to a game object for testing purposes and remove a script or a plugin providing this component. This might also happen during an upgrade when a newer (or older) version of Unity fails to find a component assigned to a specific object. This is going to manifest itself in Unity editor like the below:   Many projects (especially those with significant development history) suffer from this issue. While it might go unnoticed for a while, there are instances where such &quot;ghost&quot; components actually become an issue. ","version":"Next","tagName":"h2"},{"title":"Steps to fix​","type":1,"pageTitle":"There are missing components","url":"/docs/playable/code/error-codes/LP1008#steps-to-fix","content":"Developers should either remove those components or re-assign them again with proper references. ","version":"Next","tagName":"h2"},{"title":"Unreadable texture","type":0,"sectionRef":"#","url":"/docs/playable/code/error-codes/LP1011","content":"","keywords":"unreadable texture fix playable luna error LP1011","version":"Next"},{"title":"Message​","type":1,"pageTitle":"Unreadable texture","url":"/docs/playable/code/error-codes/LP1011#message","content":"Unreadable texture. ","version":"Next","tagName":"h2"},{"title":"Explanation​","type":1,"pageTitle":"Unreadable texture","url":"/docs/playable/code/error-codes/LP1011#explanation","content":"Sometimes some of the assets (textures included) get damaged for various reasons: artist errors, broken merges, file system or software failures. Whenever the Playable Plugin attempts to export a texture and is unable to get its pixel data. Can it be simply &quot;Read/Write&quot; disabled? Not really. Playable Plugin is using multiple techniques to gather texture data, starting by making a copy of the underlying texture source file in case it is PNG, up to utilizing Unity's Graphics API to copy pixel data to work around compressed formats. Thus, if Playable Plugin fails to extract pixel data from a texture, it is most likely damaged in one way or another. ","version":"Next","tagName":"h2"},{"title":"Steps to fix​","type":1,"pageTitle":"Unreadable texture","url":"/docs/playable/code/error-codes/LP1011#steps-to-fix","content":"Fix the underlying asset. ","version":"Next","tagName":"h2"},{"title":"Looks like a collider was scaled","type":0,"sectionRef":"#","url":"/docs/playable/code/error-codes/LP1010","content":"","keywords":"collider scaled fix playable luna error LP1010","version":"Next"},{"title":"Message​","type":1,"pageTitle":"Looks like a collider was scaled","url":"/docs/playable/code/error-codes/LP1010#message","content":"Looks like a collider was scaled, this might affect performance. ","version":"Next","tagName":"h2"},{"title":"Explanation​","type":1,"pageTitle":"Looks like a collider was scaled","url":"/docs/playable/code/error-codes/LP1010#explanation","content":"Most rigidbody physics engines (Luna's Physics engine being no exception) don't really have a notion of scale under the hood. The engines operate using objects' positions and rotations, and introducing scale (either directly or indirectly, via parent objects) forces the physics adapters to perform unnecessary calculations. For instance, scaling a sphere collider would simply report amended sphere radius to the physics engine, which is going to be computed as original radius times maximum scale factor. As you can image, non-uniform scale would produce weird results as well: sphere colliders, for instance, are always spheres and never get extruded in any direction. Things are even worse with mesh colliders: it is required to duplicate and scale the whole mesh of the collider, as physics engines consider meshes as either point clouds or a set of triangles and there is simply no way to notify the physics engine that a particular mesh should actually be processed as if it twice as big. ","version":"Next","tagName":"h2"},{"title":"Steps to fix​","type":1,"pageTitle":"Looks like a collider was scaled","url":"/docs/playable/code/error-codes/LP1010#steps-to-fix","content":"It is best to avoid scaling game objects with colliders attached. Primitive colliders have properties that define their bounds anyway, and mesh colliders are working best when the underlying mesh is baked with required scale. ","version":"Next","tagName":"h2"},{"title":"Linear color space is not supported","type":0,"sectionRef":"#","url":"/docs/playable/code/error-codes/LP1006","content":"","keywords":"linear color space fix playable luna error LP1006","version":"Next"},{"title":"Message​","type":1,"pageTitle":"Linear color space is not supported","url":"/docs/playable/code/error-codes/LP1006#message","content":"Linear color space is not supported. ","version":"Next","tagName":"h2"},{"title":"Explanation​","type":1,"pageTitle":"Linear color space is not supported","url":"/docs/playable/code/error-codes/LP1006#explanation","content":"Playable Plugin targets WebGL 1 API, which often lacks the appropriate extension to support the reading of texture data in a linear fashion. Due to that limitation, it is impossible to support rendering in Linear space. ","version":"Next","tagName":"h2"},{"title":"Steps to fix​","type":1,"pageTitle":"Linear color space is not supported","url":"/docs/playable/code/error-codes/LP1006#steps-to-fix","content":"Switch the color space used by the player to &quot;Gamma&quot;. This can be done by navigating to Edit &gt; Project Settings &gt; Player in main Unity menu:  PRO TIP You can use a separate build target (i.e. WebGL) to amend the color space setting to keep original project untouched, if switching to Gamma space globally is undesirable. In order to do this, please switch to WebGL build target before running the export. ","version":"Next","tagName":"h2"},{"title":"No Luna.shadervariants asset found","type":0,"sectionRef":"#","url":"/docs/playable/code/error-codes/LP1004","content":"","keywords":"luna.shadervariants fix playable luna missing error LP1004","version":"Next"},{"title":"Message​","type":1,"pageTitle":"No Luna.shadervariants asset found","url":"/docs/playable/code/error-codes/LP1004#message","content":"No Assets/Luna.shadervariants asset was found. This might bloat your build with excessive shader variants. ","version":"Next","tagName":"h2"},{"title":"Explanation​","type":1,"pageTitle":"No Luna.shadervariants asset found","url":"/docs/playable/code/error-codes/LP1004#explanation","content":"Playable Plugin exports only the shader variants that appear to be in use from Unity Editor's point of view. This, however, means that the total number of variants exported is probably excessive and can be reduced, bringing down the build size, decreasing startup time and (slightly) improving build time. It is recommended to consider baking shader variants used by the build as outlined in Shaders optimization tutorial. ","version":"Next","tagName":"h2"},{"title":"Steps to fix​","type":1,"pageTitle":"No Luna.shadervariants asset found","url":"/docs/playable/code/error-codes/LP1004#steps-to-fix","content":"Please refer to this tutorial for troubleshooting steps. If you find that you are still experiencing a problem please have a read of our Common Issues page on Shaders. ","version":"Next","tagName":"h2"},{"title":"Invalid Luna.shadervariants asset found","type":0,"sectionRef":"#","url":"/docs/playable/code/error-codes/LP1005","content":"","keywords":"luna.shadervariants fix playable luna invalid error LP1005","version":"Next"},{"title":"Message​","type":1,"pageTitle":"Invalid Luna.shadervariants asset found","url":"/docs/playable/code/error-codes/LP1005#message","content":"Invalid Luna.shadervariants asset was found. ","version":"Next","tagName":"h2"},{"title":"Explanation​","type":1,"pageTitle":"Invalid Luna.shadervariants asset found","url":"/docs/playable/code/error-codes/LP1005#explanation","content":"This may be happening due to: The shader target being 3.5 or higherThe shader is not compatible with GLES2The shader is precompiled It is recommended to consider baking shader variants used by the build as outlined in Shaders optimization tutorial. ","version":"Next","tagName":"h2"},{"title":"Steps to fix​","type":1,"pageTitle":"Invalid Luna.shadervariants asset found","url":"/docs/playable/code/error-codes/LP1005#steps-to-fix","content":"Firstly please ensure that your shader target is 3.0 or lower. You can read more about shader targets here. Next thing to check is if GLES20 is on in the shader compile setting: Select the shader assetIn the inspector select the drop-down arrow next to the 'Compile and show code' buttonSelect 'GLES20' from this listAfter this hit the 'Compile and show code' button itself, which will allow you to see the see the compiled version of the shader for every keyword combination. If there is nothing there, or it is showing the incorrect shader, we won't be able to grab it. This may be due to the shader indeed not being compatible with GLES2, or the shader is precompiled. In both of these cases the shader code will need to be rewritten. If you find that you are still experiencing a problem please have a read of our Common Issues page on Shaders. ","version":"Next","tagName":"h2"},{"title":"Deferred rendering is not supported","type":0,"sectionRef":"#","url":"/docs/playable/code/error-codes/LP1003","content":"","keywords":"deferred rendering fix playable luna error LP1003","version":"Next"},{"title":"Message​","type":1,"pageTitle":"Deferred rendering is not supported","url":"/docs/playable/code/error-codes/LP1003#message","content":"Deferred rendering is not supported. ","version":"Next","tagName":"h2"},{"title":"Explanation​","type":1,"pageTitle":"Deferred rendering is not supported","url":"/docs/playable/code/error-codes/LP1003#explanation","content":"Playable Plugin targets WebGL 1 API, which often lacks the appropriate extension to support multiple framebuffer attachments. Because of this limitation, it is impossible to support to Deferred rendering path. ","version":"Next","tagName":"h2"},{"title":"Steps to fix​","type":1,"pageTitle":"Deferred rendering is not supported","url":"/docs/playable/code/error-codes/LP1003#steps-to-fix","content":"There are two options to fix the issue: Switch cameras' rendering path to &quot;Forward&quot; instead of &quot;Deferred&quot;. This can be done by changing Camera components' settings in Inspector panel:   Switch default rendering path to &quot;Forward&quot; under &quot;Graphics&quot; project settings if your cameras have &quot;Use Graphics Settings&quot; under their &quot;Rendering path&quot; property. This can be done by navigating to Edit &gt; Project Settings &gt; Graphics in main Unity menu:  PRO TIP You can use a separate build target (i.e. WebGL) to amend the default rendering path if your cameras have &quot;Use Graphics Settings&quot; under their &quot;Rendering path&quot; property and switching the project globally is undesirable. In order to do this, please switch to WebGL build target before running the export. ","version":"Next","tagName":"h2"},{"title":"Exportation related errors","type":0,"sectionRef":"#","url":"/docs/playable/code/error-codes/LP1012","content":"","keywords":"fix playable luna export exportation error LP1012","version":"Next"},{"title":"Explanation​","type":1,"pageTitle":"Exportation related errors","url":"/docs/playable/code/error-codes/LP1012#explanation","content":"Apart from code compilation errors, which can happen due to missing APIs or simple mistakes in the code, Luna can also fail exporting your project at different stages for several reasons. These errors will have limited information but will always be logged with the exception thrown and any other meaningful information available. These errors will likely get their own error code or be applied to an already existing code in the future. ","version":"Next","tagName":"h2"},{"title":"Steps to fix​","type":1,"pageTitle":"Exportation related errors","url":"/docs/playable/code/error-codes/LP1012#steps-to-fix","content":"Please first have a read of our page on Export failures for troubleshooting steps. If you find you are still experiencing problems please next have a read of our Common Issues page on Build Errors. ","version":"Next","tagName":"h2"},{"title":"Errors related to sprite atlases","type":0,"sectionRef":"#","url":"/docs/playable/code/error-codes/LP1013","content":"","keywords":"fix playable luna sprite atlas atlases error LP1013","version":"Next"},{"title":"Explanation​","type":1,"pageTitle":"Errors related to sprite atlases","url":"/docs/playable/code/error-codes/LP1013#explanation","content":"There are a multitude of different causes for sprite atlas errors, here we will link out to pages that will explain common sprite atlas issues as well as how to fix them. ","version":"Next","tagName":"h2"},{"title":"Steps to fix​","type":1,"pageTitle":"Errors related to sprite atlases","url":"/docs/playable/code/error-codes/LP1013#steps-to-fix","content":"First locate your Sprite Atlas in your project folder in Unity, select it and in the inspector tick the option 'Include in Build'.  If this does not fix your problem have a read of our Common Issues page on Sprite Atlases for troubleshooting steps, as well as our page on Sprites. ","version":"Next","tagName":"h2"},{"title":"Unsupported TMP version","type":0,"sectionRef":"#","url":"/docs/playable/code/error-codes/LP1015","content":"","keywords":"fix playable luna TMP unsupported version error LP1015","version":"Next"},{"title":"Message​","type":1,"pageTitle":"Unsupported TMP version","url":"/docs/playable/code/error-codes/LP1015#message","content":"The incorrect TMP version for this Unity version is in use, please update to the recommended version: {0} ","version":"Next","tagName":"h2"},{"title":"Explanation​","type":1,"pageTitle":"Unsupported TMP version","url":"/docs/playable/code/error-codes/LP1015#explanation","content":"Playable Plugin does not support all TMP versions. Using the wrong TMP version may break the playable. ","version":"Next","tagName":"h2"},{"title":"Steps to fix​","type":1,"pageTitle":"Unsupported TMP version","url":"/docs/playable/code/error-codes/LP1015#steps-to-fix","content":"Please update or downgrade your TMP version in the package manager to a supported version. Please see our list of supported versions. If a version is not present in the package manager, you can manually edit the manifest.json file. More information about manually editing the JSON file can be found here. ","version":"Next","tagName":"h2"},{"title":"Extensive use of mesh colliders","type":0,"sectionRef":"#","url":"/docs/playable/code/error-codes/LP1007","content":"","keywords":"extensive use mesh colliders fix playable luna error LP1007","version":"Next"},{"title":"Message​","type":1,"pageTitle":"Extensive use of mesh colliders","url":"/docs/playable/code/error-codes/LP1007#message","content":"Extensive use of mesh colliders, this might affect performance. ","version":"Next","tagName":"h2"},{"title":"Explanation​","type":1,"pageTitle":"Extensive use of mesh colliders","url":"/docs/playable/code/error-codes/LP1007#explanation","content":"Mesh colliders are notorious for their performance impact: unlike simple shapes (i.e. boxes or spheres) or even compound colliders (objects having multiple colliders), the collision shapes are not analytical and require additional memory and processing power to work. Luna Expert will issue this warning if it encounters more than 10 mesh collider components in the project. ","version":"Next","tagName":"h2"},{"title":"Steps to fix​","type":1,"pageTitle":"Extensive use of mesh colliders","url":"/docs/playable/code/error-codes/LP1007#steps-to-fix","content":"Try replacing mesh colliders with primitive ones approximating the shape. Please note, however, that in some instances it makes more sense to have a few mesh colliders consisting of tens or hundreds of vertices rather than creating tens of primitive colliders to approximate the original one. ","version":"Next","tagName":"h2"},{"title":"Mesh Compression Usage","type":0,"sectionRef":"#","url":"/docs/playable/code/error-codes/LP1018","content":"","keywords":"fix playable luna mesh compression usage warning error LP1018","version":"Next"},{"title":"Message​","type":1,"pageTitle":"Mesh Compression Usage","url":"/docs/playable/code/error-codes/LP1018#message","content":"Mesh optimisations are disabled ","version":"Next","tagName":"h2"},{"title":"Explanation​","type":1,"pageTitle":"Mesh Compression Usage","url":"/docs/playable/code/error-codes/LP1018#explanation","content":"Storing meshes in half precision floating point format will reduce the size of your mesh without compromising quality and is a simple solution to reducing the overall size of your playable, which will also aid in improving loading times. ","version":"Next","tagName":"h2"},{"title":"Steps to fix​","type":1,"pageTitle":"Mesh Compression Usage","url":"/docs/playable/code/error-codes/LP1018#steps-to-fix","content":"Head to the Assets section and select the mesh tab. simply toggle Store mesh in half-precision floating-point format  ","version":"Next","tagName":"h2"},{"title":"Many Facebook Files","type":0,"sectionRef":"#","url":"/docs/playable/code/error-codes/LP1023","content":"","keywords":"fix playable luna many facebook files warning error decrease LP1023","version":"Next"},{"title":"Message​","type":1,"pageTitle":"Many Facebook Files","url":"/docs/playable/code/error-codes/LP1023#message","content":"Too many files for facebook platform in use. ","version":"Next","tagName":"h2"},{"title":"Explanation​","type":1,"pageTitle":"Many Facebook Files","url":"/docs/playable/code/error-codes/LP1023#explanation","content":"Facebook has a limit of 100 files per build. in order to run on the Facebook platform, your playable must be within this limit. ","version":"Next","tagName":"h2"},{"title":"Steps to fix​","type":1,"pageTitle":"Many Facebook Files","url":"/docs/playable/code/error-codes/LP1023#steps-to-fix","content":"Decrease textures or videos usage to stay under the file limit. To see all the used textures, please go to the Size Breakdown tab as shown below. You can also create Texture Atlases (Or Sprite Atlas) so you can use a single texture file for multiple GameObjects. More information can be found here.  ","version":"Next","tagName":"h2"},{"title":"Unhandled Exception","type":0,"sectionRef":"#","url":"/docs/playable/code/error-codes/LP1025","content":"","keywords":"fix playable luna unhandled exception warning error LP1025","version":"Next"},{"title":"Message​","type":1,"pageTitle":"Unhandled Exception","url":"/docs/playable/code/error-codes/LP1025#message","content":"Please check console for more details. ","version":"Next","tagName":"h2"},{"title":"Explanation​","type":1,"pageTitle":"Unhandled Exception","url":"/docs/playable/code/error-codes/LP1025#explanation","content":"Shows you that Playable Plugin has caught internal exception in unity export. In most cases user see popup with more specific information about inner exception. ","version":"Next","tagName":"h2"},{"title":"Steps to fix​","type":1,"pageTitle":"Unhandled Exception","url":"/docs/playable/code/error-codes/LP1025#steps-to-fix","content":"Contact with Technical support team. And provide luna log file and project for reproduce (if possible). ","version":"Next","tagName":"h2"},{"title":"Huge Ram Usage","type":0,"sectionRef":"#","url":"/docs/playable/code/error-codes/LP1024","content":"","keywords":"fix playable luna huge ram decrease usage warning error LP1024","version":"Next"},{"title":"Message​","type":1,"pageTitle":"Huge Ram Usage","url":"/docs/playable/code/error-codes/LP1024#message","content":"Playable has huge RAM usage. ","version":"Next","tagName":"h2"},{"title":"Explanation​","type":1,"pageTitle":"Huge Ram Usage","url":"/docs/playable/code/error-codes/LP1024#explanation","content":"RAM usage has exceeded the limit for lower end devices. Reducing will improve performance on higher end devices and also mean the playable can run on lower end devices. ","version":"Next","tagName":"h2"},{"title":"Steps to fix​","type":1,"pageTitle":"Huge Ram Usage","url":"/docs/playable/code/error-codes/LP1024#steps-to-fix","content":"To decrease RAM usage, you can try to do the following: Simplify meshes, animations and other assets Decrease amount of particles Check code for memory leaks Check code for frequent allocations Allocations may include string operations, or creating new objects in Update loop Also, please check the Unity profiler to help pinpoint the cause of the high RAM usage. More information about the Unity profiler can be found here. ","version":"Next","tagName":"h2"},{"title":"Cinemachine Version","type":0,"sectionRef":"#","url":"/docs/playable/code/error-codes/LP1026","content":"","keywords":"fix playable luna unhandled exception warning error LP1026","version":"Next"},{"title":"Message​","type":1,"pageTitle":"Cinemachine Version","url":"/docs/playable/code/error-codes/LP1026#message","content":"The incorrect Cinemachine version for this Unity version is in use, please update to the recommended version: {0}. ","version":"Next","tagName":"h2"},{"title":"Explanation​","type":1,"pageTitle":"Cinemachine Version","url":"/docs/playable/code/error-codes/LP1026#explanation","content":"Playable Plugin does not support all Cinemachine versions. ","version":"Next","tagName":"h2"},{"title":"Steps to fix​","type":1,"pageTitle":"Cinemachine Version","url":"/docs/playable/code/error-codes/LP1026#steps-to-fix","content":"Please update or downgrade your current version in the Unity package manager to a supported version. ","version":"Next","tagName":"h2"},{"title":"PlaygroundAsset has no default value","type":0,"sectionRef":"#","url":"/docs/playable/code/error-codes/LP1009","content":"","keywords":"playground asset value fix playable luna error LP1009","version":"Next"},{"title":"Message​","type":1,"pageTitle":"PlaygroundAsset has no default value","url":"/docs/playable/code/error-codes/LP1009#message","content":"[LunaPlaygroundAsset] Attribute added onto &quot;FIELD NAME&quot; field of &quot;CLASS NAME&quot; class must have a default value to appear in Creative Suite. ","version":"Next","tagName":"h2"},{"title":"Explanation​","type":1,"pageTitle":"PlaygroundAsset has no default value","url":"/docs/playable/code/error-codes/LP1009#explanation","content":"The sole purpose of a field with [LunaPlaygroundAsset] is to hint Creative Suite that a specific asset should be modifiable via Creative Suite UI. The field with this attribute does not have to be considered by game code in any way (although developers are free to do so if needed). Obviously, for the Creative Suite to know which asset to modify the field has to point to some existing asset. Thus, a field marked with such an attribute and lacking an association to an asset will not function properly. ","version":"Next","tagName":"h2"},{"title":"Steps to fix​","type":1,"pageTitle":"PlaygroundAsset has no default value","url":"/docs/playable/code/error-codes/LP1009#steps-to-fix","content":"Please assign an asset to the field via Unity's inspector window. ","version":"Next","tagName":"h2"},{"title":"Excessive component usage","type":0,"sectionRef":"#","url":"/docs/playable/code/error-codes/LP1016","content":"","keywords":"fix playable luna excessive components usage warning error LP1016","version":"Next"},{"title":"Message​","type":1,"pageTitle":"Excessive component usage","url":"/docs/playable/code/error-codes/LP1016#message","content":"Extensive usage of {name of component} Component. ","version":"Next","tagName":"h2"},{"title":"Explanation​","type":1,"pageTitle":"Excessive component usage","url":"/docs/playable/code/error-codes/LP1016#explanation","content":"Excessive usage of any component can be detrimental to performance on lower and in some cases higher end devices, consider reducing the amount components are used. ","version":"Next","tagName":"h2"},{"title":"Steps to fix​","type":1,"pageTitle":"Excessive component usage","url":"/docs/playable/code/error-codes/LP1016#steps-to-fix","content":"Reduce the amount of times any one component is used within the playable. E.g. combining multiple static meshes into one to reduce the amount of mesh renderers active in a scene. ","version":"Next","tagName":"h2"},{"title":"Update shader stripping settings","type":0,"sectionRef":"#","url":"/docs/playable/code/error-codes/LP1001","content":"","keywords":"shader stripping fix playable luna error LP1001","version":"Next"},{"title":"Message​","type":1,"pageTitle":"Update shader stripping settings","url":"/docs/playable/code/error-codes/LP1001#message","content":"Some of the scenes appear to have fog enabled and / or lightmapping data. Please modify &quot;Shader stripping&quot; settings to always include required shader variants. ","version":"Next","tagName":"h2"},{"title":"Explanation​","type":1,"pageTitle":"Update shader stripping settings","url":"/docs/playable/code/error-codes/LP1001#explanation","content":"Depending on the exact project structure, Unity might consider fog and / or lightmapping shader variants as not required and strip them from available shader variants. Unfortunately, there is no way to force-include those variants via Editor API, thus Playable Plugin has to instruct developers to mark such variants as always included into the build via Unity Graphics settings. ","version":"Next","tagName":"h2"},{"title":"Steps to fix​","type":1,"pageTitle":"Update shader stripping settings","url":"/docs/playable/code/error-codes/LP1001#steps-to-fix","content":"Please navigate to &quot;Shader Stripping&quot; section in &quot;Graphics&quot; section of project settings and enable lightmap and fog modes used by your scenes:  ","version":"Next","tagName":"h2"},{"title":"Runtime Analysis warning","type":0,"sectionRef":"#","url":"/docs/playable/code/error-codes/LP1014","content":"","keywords":"fix playable luna TMP unsupported version error LP1014","version":"Next"},{"title":"Explanation​","type":1,"pageTitle":"Runtime Analysis warning","url":"/docs/playable/code/error-codes/LP1014#explanation","content":"This warning is triggered when Runtime Analysis is not being used in the project. If you are not familiar with this functionality, we recommend checking our documentation about it. ","version":"Next","tagName":"h2"},{"title":"Steps to fix​","type":1,"pageTitle":"Runtime Analysis warning","url":"/docs/playable/code/error-codes/LP1014#steps-to-fix","content":"Use Runtime Analysis. This will get rid of this warning and also remove all the unused code in your project. ","version":"Next","tagName":"h2"},{"title":"Avatar Animation","type":0,"sectionRef":"#","url":"/docs/playable/code/error-codes/LP1029","content":"","keywords":"fix playable luna unhandled exception warning error LP1029","version":"Next"},{"title":"Message​","type":1,"pageTitle":"Avatar Animation","url":"/docs/playable/code/error-codes/LP1029#message","content":"Avatar on the: {0} GameObject. Please bake the animation instead as a workaround. ","version":"Next","tagName":"h2"},{"title":"Explanation​","type":1,"pageTitle":"Avatar Animation","url":"/docs/playable/code/error-codes/LP1029#explanation","content":"Playable Plugin does not currently support Avatar animations. ","version":"Next","tagName":"h2"},{"title":"Steps to fix​","type":1,"pageTitle":"Avatar Animation","url":"/docs/playable/code/error-codes/LP1029#steps-to-fix","content":"You can bake the animation instead as a workaround using a free tool in Unity. See our docs for more information. ","version":"Next","tagName":"h2"},{"title":"Package(s) Not Supported in Luna","type":0,"sectionRef":"#","url":"/docs/playable/code/error-codes/LP1032","content":"","keywords":"fix playable luna unhandled exception warning error LP1032","version":"Next"},{"title":"Message​","type":1,"pageTitle":"Package(s) Not Supported in Luna","url":"/docs/playable/code/error-codes/LP1032#message","content":"Package(s) not supported by Playable Plugin. ","version":"Next","tagName":"h2"},{"title":"Explanation​","type":1,"pageTitle":"Package(s) Not Supported in Luna","url":"/docs/playable/code/error-codes/LP1032#explanation","content":"Currently, the package(s) {0} is not supported by Playable Plugin. We recommend you remove it and work around its functionality. ","version":"Next","tagName":"h2"},{"title":"Steps to fix​","type":1,"pageTitle":"Package(s) Not Supported in Luna","url":"/docs/playable/code/error-codes/LP1032#steps-to-fix","content":"Proceed to the package manager and remove it, then make a workaround for its functionality if needed. ","version":"Next","tagName":"h2"},{"title":"Unsupported Atlas Population Mode","type":0,"sectionRef":"#","url":"/docs/playable/code/error-codes/LP1030","content":"","keywords":"fix playable luna unhandled exception warning error LP1030","version":"Next"},{"title":"Message​","type":1,"pageTitle":"Unsupported Atlas Population Mode","url":"/docs/playable/code/error-codes/LP1030#message","content":"TMP Font Asset uses unsupported Atlas Population Mode ","version":"Next","tagName":"h2"},{"title":"Explanation​","type":1,"pageTitle":"Unsupported Atlas Population Mode","url":"/docs/playable/code/error-codes/LP1030#explanation","content":"Project contains Text Mesh Pro font asset that uses unsupported Atlas Population Mode ","version":"Next","tagName":"h2"},{"title":"Steps to fix​","type":1,"pageTitle":"Unsupported Atlas Population Mode","url":"/docs/playable/code/error-codes/LP1030#steps-to-fix","content":"Find font asset that mentioned in error description in Luna window and switch its Atlas population Mode to Static'. After switching mode from Dynamic to Static some text may be rendered incorrectly. This happens because font atlas doesnt contains necessary symbols. Make sure that font asset contains all necessary symbols for generating correct atlas. ","version":"Next","tagName":"h2"},{"title":"Unity Version","type":0,"sectionRef":"#","url":"/docs/playable/code/error-codes/LP1028","content":"","keywords":"fix playable luna unhandled exception warning error LP1028","version":"Next"},{"title":"Message​","type":1,"pageTitle":"Unity Version","url":"/docs/playable/code/error-codes/LP1028#message","content":"Playable Plugin does not officially support Unity version: {0}, bugs may occur. Therefore it is recommended to use a supported Unity LTS version for Luna: {1} ","version":"Next","tagName":"h2"},{"title":"Explanation​","type":1,"pageTitle":"Unity Version","url":"/docs/playable/code/error-codes/LP1028#explanation","content":"Our internal automated tests are ran on different Unity LTS versions. Therefore if you are using a different version, we cannot guarantee that the version of Unity is fully supported. ","version":"Next","tagName":"h2"},{"title":"Steps to fix​","type":1,"pageTitle":"Unity Version","url":"/docs/playable/code/error-codes/LP1028#steps-to-fix","content":"Please download and open the project with a supported Unity LTS version. You can see our currently supported Unity versions here. ","version":"Next","tagName":"h2"},{"title":"Character Controller Detected","type":0,"sectionRef":"#","url":"/docs/playable/code/error-codes/LP1033","content":"","keywords":"fix playable luna unhandled exception warning error LP1033","version":"Next"},{"title":"Message​","type":1,"pageTitle":"Character Controller Detected","url":"/docs/playable/code/error-codes/LP1033#message","content":"Use of unsupported CharacterController detected. ","version":"Next","tagName":"h2"},{"title":"Explanation​","type":1,"pageTitle":"Character Controller Detected","url":"/docs/playable/code/error-codes/LP1033#explanation","content":"Not all functionalities of the Character Controller component are currently implemented. This can result in unexpected behaviour in your playable, such as collider glitches. ","version":"Next","tagName":"h2"},{"title":"Steps to fix​","type":1,"pageTitle":"Character Controller Detected","url":"/docs/playable/code/error-codes/LP1033#steps-to-fix","content":"Please remove the Character Controller and move the GameObject via either the Rigidbody or Transform class instead. ","version":"Next","tagName":"h2"},{"title":"Failed To Combine Glyphs errors (Font)","type":0,"sectionRef":"#","url":"/docs/playable/code/error-codes/LP2001","content":"","keywords":"fix playable luna error LP2001","version":"Next"},{"title":"Explanation​","type":1,"pageTitle":"Failed To Combine Glyphs errors (Font)","url":"/docs/playable/code/error-codes/LP2001#explanation","content":"During the export process for fonts, we need to create a bitmap for them using fontBM, On occasion, you might come across a font that cant be processed through FontBM, The simplest solution would be to find an alternative that can be ran through FontBM, however it is possible to try debug the issue with the font. ","version":"Next","tagName":"h2"},{"title":"Steps to fix​","type":1,"pageTitle":"Failed To Combine Glyphs errors (Font)","url":"/docs/playable/code/error-codes/LP2001#steps-to-fix","content":"Please have a read of our Common Issue page on Font for troubleshooting steps. ","version":"Next","tagName":"h2"},{"title":"Sound Compression errors","type":0,"sectionRef":"#","url":"/docs/playable/code/error-codes/LP2002","content":"","keywords":"fix playable luna sound compression error LP2002","version":"Next"},{"title":"Explanation​","type":1,"pageTitle":"Sound Compression errors","url":"/docs/playable/code/error-codes/LP2002#explanation","content":"To compress sound files we apply FFMpeg compression. Which means if you hit an error, it's likely due to our tool not being able to compress the sound correctly. ","version":"Next","tagName":"h2"},{"title":"Steps to fix​","type":1,"pageTitle":"Sound Compression errors","url":"/docs/playable/code/error-codes/LP2002#steps-to-fix","content":"You could potentially be trying to use an audio format that Isn't supported by luna/FFMpeg compression at which point you could try to change its format in an audio application. If thats not the problem, then it could be down to the FFMpeg tool not being able to process the sound correctly resulting in an error, a way around this would be to compress the sound manually. If neither of the previous steps helped, please have a read of our Common Issue page on Audio for further troubleshooting steps. ","version":"Next","tagName":"h2"},{"title":"65k Mesh Vertices Limit","type":0,"sectionRef":"#","url":"/docs/playable/code/error-codes/LP1034","content":"","keywords":"fix playable luna unhandled exception warning error LP1034","version":"Next"},{"title":"Message​","type":1,"pageTitle":"65k Mesh Vertices Limit","url":"/docs/playable/code/error-codes/LP1034#message","content":"65k mesh vertices limit exceeded for WebGL 1.0, which breaks the playable. ","version":"Next","tagName":"h2"},{"title":"Explanation​","type":1,"pageTitle":"65k Mesh Vertices Limit","url":"/docs/playable/code/error-codes/LP1034#explanation","content":"WebGL 1.0 has a limit of 65k vertices per mesh to render. Luna currently runs on WebGL 1.0 to support older devices, thus we cannot support meshes bigger than 65k vertices. caution Other than this limitation, going near 65k vertices has a great negative impact on the playable performance and should be avoided! ","version":"Next","tagName":"h2"},{"title":"Steps to fix​","type":1,"pageTitle":"65k Mesh Vertices Limit","url":"/docs/playable/code/error-codes/LP1034#steps-to-fix","content":"You can the free tool Blender to remove some vertices using the decimate function. More information can be found here: Decimate Modifier — Blender Manual. ","version":"Next","tagName":"h2"},{"title":"Asset related errors","type":0,"sectionRef":"#","url":"/docs/playable/code/error-codes/LP2000","content":"","keywords":"fix playable luna error LP2000","version":"Next"},{"title":"Explanation​","type":1,"pageTitle":"Asset related errors","url":"/docs/playable/code/error-codes/LP2000#explanation","content":"This code pertains to general asset related errors, in some cases the source of the error can be unknown. These errors will have limited information but will always be logged with the exception thrown and any other meaningful information available. These errors will likely get their own error code or be applied to an already existing code in the future. ","version":"Next","tagName":"h2"},{"title":"Steps to fix​","type":1,"pageTitle":"Asset related errors","url":"/docs/playable/code/error-codes/LP2000#steps-to-fix","content":"Please first have a read of our section on Assets processing failing for troubleshooting steps. If you find that an asset that is not needed for your playable scene is causing an issue, you can exclude it from your build. More information on how to do this can be found here. ","version":"Next","tagName":"h2"},{"title":"DOTween Version","type":0,"sectionRef":"#","url":"/docs/playable/code/error-codes/LP1027","content":"","keywords":"fix playable luna unhandled exception warning error LP1027","version":"Next"},{"title":"Message​","type":1,"pageTitle":"DOTween Version","url":"/docs/playable/code/error-codes/LP1027#message","content":"The incorrect DOTween version for this Unity version is in use, please update to the recommended version: {0}. ","version":"Next","tagName":"h2"},{"title":"Explanation​","type":1,"pageTitle":"DOTween Version","url":"/docs/playable/code/error-codes/LP1027#explanation","content":"We dont support all DOTween versions because each version may change in functionality or have different class name, so that our current solution wont work in a newer version of DOTween. ","version":"Next","tagName":"h2"},{"title":"Steps to fix​","type":1,"pageTitle":"DOTween Version","url":"/docs/playable/code/error-codes/LP1027#steps-to-fix","content":"Please download the supported DOTween version from the DOTween website. ","version":"Next","tagName":"h2"},{"title":"Texture Compression errors","type":0,"sectionRef":"#","url":"/docs/playable/code/error-codes/LP2003","content":"","keywords":"fix playable luna texture compression error LP2003","version":"Next"},{"title":"Explanation​","type":1,"pageTitle":"Texture Compression errors","url":"/docs/playable/code/error-codes/LP2003#explanation","content":"Failed texture compression can relate to either the ImageMagick tool we use for adjusting/compressing textures, or with one of the compression formats we support in Luna. ","version":"Next","tagName":"h2"},{"title":"Steps to fix​","type":1,"pageTitle":"Texture Compression errors","url":"/docs/playable/code/error-codes/LP2003#steps-to-fix","content":"A main cause for a texture compression issue could be that the image is an unsupported format (JPG and PNG are guaranteed to work provided the file isn't corrupt in some way). There are other formats that are supported by ImageMagick and our other compression formats, however these two are definitely safe. You can also manually compress any problematic textures prior to building in order to avoid the process failing. If the previous step doesn't fix your issue, please have a read of our Common Issue page on Textures for further troubleshooting steps. ","version":"Next","tagName":"h2"},{"title":"Engine Build errors","type":0,"sectionRef":"#","url":"/docs/playable/code/error-codes/LP2005","content":"","keywords":"fix playable luna engine build error LP2005","version":"Next"},{"title":"Explanation​","type":1,"pageTitle":"Engine Build errors","url":"/docs/playable/code/error-codes/LP2005#explanation","content":"Bridge.NET is an open source C#-to-JavaScript Compiler, that helps us with converting Unity projects into lightweight HTML5 playables. Along with gaining the many benefits of using Bridge.NET, we also intern inherit some of its limitations. (Such as only supporting C# features from 7.0 and previous). It is likely that one of these limitations is causing the error you are seeing. ","version":"Next","tagName":"h2"},{"title":"Steps to fix​","type":1,"pageTitle":"Engine Build errors","url":"/docs/playable/code/error-codes/LP2005#steps-to-fix","content":"Please have a read of our section on Bridge Limitations for troubleshooting steps. ","version":"Next","tagName":"h2"},{"title":"Custom Script errors","type":0,"sectionRef":"#","url":"/docs/playable/code/error-codes/LP2004","content":"","keywords":"fix playable luna error LP2004","version":"Next"},{"title":"Explanation​","type":1,"pageTitle":"Custom Script errors","url":"/docs/playable/code/error-codes/LP2004#explanation","content":"During asset processing, we check if there are custom scripts attached to assets. In the case that there are, we attempt to apply the custom script. If a problem occurs during this process, this error is thrown. The problem with the script could be that it's broken/corrupt, or it's throwing exceptions causing the custom script application process to break. ","version":"Next","tagName":"h2"},{"title":"Steps to fix​","type":1,"pageTitle":"Custom Script errors","url":"/docs/playable/code/error-codes/LP2004#steps-to-fix","content":"Please have a read of our Common Issue page on code for troubleshooting steps. ","version":"Next","tagName":"h2"},{"title":"Animation Compression Setting","type":0,"sectionRef":"#","url":"/docs/playable/code/error-codes/LP1017","content":"","keywords":"fix playable luna setting compression warning error animation LP1017","version":"Next"},{"title":"Message​","type":1,"pageTitle":"Animation Compression Setting","url":"/docs/playable/code/error-codes/LP1017#message","content":"Animation optimisations are disabled ","version":"Next","tagName":"h2"},{"title":"Explanation​","type":1,"pageTitle":"Animation Compression Setting","url":"/docs/playable/code/error-codes/LP1017#explanation","content":"Storing animations in half precision floating point format will reduce the size of an animation without compromising quality and is a simple solution to reducing the overall size of your playable, which will also aid in improving loading times. ","version":"Next","tagName":"h2"},{"title":"Steps to fix​","type":1,"pageTitle":"Animation Compression Setting","url":"/docs/playable/code/error-codes/LP1017#steps-to-fix","content":"Head to the Assets section and select the animations tab. simply toggle Store animation in half-precision floating-point format  ","version":"Next","tagName":"h2"},{"title":"MSBuild Version","type":0,"sectionRef":"#","url":"/docs/playable/code/error-codes/LP3003","content":"","keywords":"fix playable luna msbuild version usage exception warning error LP3003","version":"Next"},{"title":"Message​","type":1,"pageTitle":"MSBuild Version","url":"/docs/playable/code/error-codes/LP3003#message","content":"MSBuild 15 or higher is required. MSBuild can be updated through the Visual Studio installer or here. Current path in use: {MSBuildPath}' ","version":"Next","tagName":"h2"},{"title":"Explanation​","type":1,"pageTitle":"MSBuild Version","url":"/docs/playable/code/error-codes/LP3003#explanation","content":"In order for Playable Plugin to compile and build diagnostics data, it is required MSBuild version 15 or higher. ","version":"Next","tagName":"h2"},{"title":"Steps to fix​","type":1,"pageTitle":"MSBuild Version","url":"/docs/playable/code/error-codes/LP3003#steps-to-fix","content":"Please download and install MSBuild version 15 via the Visual Studio Installer. More information can be found here. ","version":"Next","tagName":"h2"},{"title":"MSBuild path","type":0,"sectionRef":"#","url":"/docs/playable/code/error-codes/LP3000","content":"","keywords":"fix playable luna msbuild path LP3000","version":"Next"},{"title":"Explanation​","type":1,"pageTitle":"MSBuild path","url":"/docs/playable/code/error-codes/LP3000#explanation","content":"The path entered in the 'MSBuild Tools' field in your Advanced Settings tab is not pointing to where MSBuild.exe is located on your machine. ","version":"Next","tagName":"h2"},{"title":"Steps to fix​","type":1,"pageTitle":"MSBuild path","url":"/docs/playable/code/error-codes/LP3000#steps-to-fix","content":"Please make sure you have MSBuild (along with .NET 4.7+) installed on your machine. ","version":"Next","tagName":"h2"},{"title":"Extensive use of shader variants","type":0,"sectionRef":"#","url":"/docs/playable/code/error-codes/LP1022","content":"","keywords":"fix playable luna shaders unsupported version error LP1019","version":"Next"},{"title":"Explanation​","type":1,"pageTitle":"Extensive use of shader variants","url":"/docs/playable/code/error-codes/LP1022#explanation","content":"You are using a high number of shader variants which will affect negatively the startup time of your playable. We recommend using less than 20 shader variants. ","version":"Next","tagName":"h2"},{"title":"Steps to fix​","type":1,"pageTitle":"Extensive use of shader variants","url":"/docs/playable/code/error-codes/LP1022#steps-to-fix","content":"Check the Shader Tab in the Runtime Analysis section to see which shaders are being used in your build and try to reduce their number. For any more issues related to shader, please check our common issues section. ","version":"Next","tagName":"h2"},{"title":"Unity Bin Error","type":0,"sectionRef":"#","url":"/docs/playable/code/error-codes/LP3001","content":"","keywords":"fix playable luna unity binaries LP3001","version":"Next"},{"title":"Explanation​","type":1,"pageTitle":"Unity Bin Error","url":"/docs/playable/code/error-codes/LP3001#explanation","content":"Playable Plugin failed to build with Unity binaries. ","version":"Next","tagName":"h2"},{"title":"Steps to fix​","type":1,"pageTitle":"Unity Bin Error","url":"/docs/playable/code/error-codes/LP3001#steps-to-fix","content":"Please make sure you have MSBuild (along with .NET 4.7+) installed on your machineCheck if the path to MSBuild executable is set up properly in Playable Plugin UI &gt; Advanced Settings. ","version":"Next","tagName":"h2"},{"title":"Asset manifest errors","type":0,"sectionRef":"#","url":"/docs/playable/code/error-codes/LP2006","content":"","keywords":"fix playable luna asset build error LP2006","version":"Next"},{"title":"Explanation​","type":1,"pageTitle":"Asset manifest errors","url":"/docs/playable/code/error-codes/LP2006#explanation","content":"This error code relates to broken or corrupted asset manifests. ","version":"Next","tagName":"h2"},{"title":"Steps to fix​","type":1,"pageTitle":"Asset manifest errors","url":"/docs/playable/code/error-codes/LP2006#steps-to-fix","content":"First try building again. If the error persists, try to locate from the error log which asset is causing the problem and check that there is nothing wrong with it. ","version":"Next","tagName":"h2"},{"title":"SyntaxTransformer crash","type":0,"sectionRef":"#","url":"/docs/playable/code/error-codes/LP2008","content":"","keywords":"fix playable luna asset build error LP2008","version":"Next"},{"title":"Explanation​","type":1,"pageTitle":"SyntaxTransformer crash","url":"/docs/playable/code/error-codes/LP2008#explanation","content":"The tool that Playable Plugin uses to support the latest C# features (C# 8+) has failed to process your project. You are limited to C# 7.2 features. ","version":"Next","tagName":"h2"},{"title":"Steps to fix​","type":1,"pageTitle":"SyntaxTransformer crash","url":"/docs/playable/code/error-codes/LP2008#steps-to-fix","content":"Please use C# features up to version 7.2. ","version":"Next","tagName":"h2"},{"title":"Fatal bridge crash","type":0,"sectionRef":"#","url":"/docs/playable/code/error-codes/LP2007","content":"","keywords":"fix playable luna asset build error LP2007","version":"Next"},{"title":"Explanation​","type":1,"pageTitle":"Fatal bridge crash","url":"/docs/playable/code/error-codes/LP2007#explanation","content":"Bridge.NET is an open source C#-to-JavaScript Compiler, that helps us with converting Unity projects into lightweight HTML5 playables. Along with gaining the many benefits of using Bridge.NET, we also intern inherit some of its limitations. (Such as only supporting C# features from 7.0 and previous). It is likely that one of these limitations is causing the error you are seeing. ","version":"Next","tagName":"h2"},{"title":"Steps to fix​","type":1,"pageTitle":"Fatal bridge crash","url":"/docs/playable/code/error-codes/LP2007#steps-to-fix","content":"Please have a read of our section on Bridge Limitations for troubleshooting steps. ","version":"Next","tagName":"h2"},{"title":"Illegal keyword","type":0,"sectionRef":"#","url":"/docs/playable/code/error-codes/LP3005","content":"","keywords":"fix playable luna illegal keyword usage exception warning error LP3005","version":"Next"},{"title":"Message​","type":1,"pageTitle":"Illegal keyword","url":"/docs/playable/code/error-codes/LP3005#message","content":"You are using a Playable Plugin reserved keyword: {keyword}. ","version":"Next","tagName":"h2"},{"title":"Explanation​","type":1,"pageTitle":"Illegal keyword","url":"/docs/playable/code/error-codes/LP3005#explanation","content":"Playable Plugin has some reserved keywords, such as Handle. When a script contains a reserved keyword, it will overwrite our existing logic from within our engine. This will cause weird runtime errors. A full list if illegal keywords can be found here. ","version":"Next","tagName":"h2"},{"title":"Steps to fix​","type":1,"pageTitle":"Illegal keyword","url":"/docs/playable/code/error-codes/LP3005#steps-to-fix","content":"Please re-name the illegal keyword to something else. E.g. if you have Handle keyword, change it to HandleGameObject or HandleTransform Tip: Select the keyword and press CTRL+ R + R to automatically change the keyword in the whole project. ","version":"Next","tagName":"h2"},{"title":"Shader Runtime Analysis","type":0,"sectionRef":"#","url":"/docs/playable/code/error-codes/LP1031","content":"","keywords":"fix playable luna unhandled exception warning error LP1031","version":"Next"},{"title":"Message​","type":1,"pageTitle":"Shader Runtime Analysis","url":"/docs/playable/code/error-codes/LP1031#message","content":"We recommend running Runtime Analysis to find and remove all unused shader variants. ","version":"Next","tagName":"h2"},{"title":"Explanation​","type":1,"pageTitle":"Shader Runtime Analysis","url":"/docs/playable/code/error-codes/LP1031#explanation","content":"This warning is triggered when Runtime Analysis is not being used in the project. If you are not familiar with this functionality, we recommend checking our documentation about it. ","version":"Next","tagName":"h2"},{"title":"Steps to fix​","type":1,"pageTitle":"Shader Runtime Analysis","url":"/docs/playable/code/error-codes/LP1031#steps-to-fix","content":"Use Runtime Analysis. This will get rid of this warning and also remove all the unused shader variants in your project. ","version":"Next","tagName":"h2"},{"title":"Unity Bin Path","type":0,"sectionRef":"#","url":"/docs/playable/code/error-codes/LP3002","content":"","keywords":"fix playable luna unity bin path LP3002","version":"Next"},{"title":"Explanation​","type":1,"pageTitle":"Unity Bin Path","url":"/docs/playable/code/error-codes/LP3002#explanation","content":"Playable Plugin was unable to find an expected unity binary. ","version":"Next","tagName":"h2"},{"title":"Steps to fix​","type":1,"pageTitle":"Unity Bin Path","url":"/docs/playable/code/error-codes/LP3002#steps-to-fix","content":"Please make sure you have MSBuild (along with .NET 4.7+) installed on your machineCheck if the path to MSBuild executable is set up properly in Playable Plugin UI &gt; Advanced Settings. ","version":"Next","tagName":"h2"},{"title":"Custom Events Count","type":0,"sectionRef":"#","url":"/docs/playable/code/error-codes/LP3008","content":"","keywords":"fix playable luna custom events count add adding exception usage warning error LP3008","version":"Next"},{"title":"Message​","type":1,"pageTitle":"Custom Events Count","url":"/docs/playable/code/error-codes/LP3008#message","content":"you only have {0} custom event(s) consider adding more for better coverage. ","version":"Next","tagName":"h2"},{"title":"Explanation​","type":1,"pageTitle":"Custom Events Count","url":"/docs/playable/code/error-codes/LP3008#explanation","content":"Custom events is an important feature to track players during the playable. This will give you insights on how players behave, and you can adapt according to this data. Example: You have a custom event that triggers in the end of the game, this custom event is: PlayerWon and PlayerLost. According to the data, PlayerLost has 50% higher CTR than PlayerWon. In this case, it might be a good idea to make the playable ad more difficult so more players lose the game, resulting in higher CTR. Please do note, not all ad networks support this feature. ","version":"Next","tagName":"h2"},{"title":"Steps to fix​","type":1,"pageTitle":"Custom Events Count","url":"/docs/playable/code/error-codes/LP3008#steps-to-fix","content":"Please add the minimum recommended amount of custom events to your playable, such as: Luna.Unity.Analytics.LogEvent(&quot;score_achieved&quot;, 0);. More information can be found here. ","version":"Next","tagName":"h2"},{"title":"Luna API","type":0,"sectionRef":"#","url":"/docs/playable/code/error-codes/LP3006","content":"","keywords":"fix playable luna API call usage using required exception warning error LP3006","version":"Next"},{"title":"Message​","type":1,"pageTitle":"Luna API","url":"/docs/playable/code/error-codes/LP3006#message","content":"You are not using the Playable Plugin API call which are required for some ad networks. ","version":"Next","tagName":"h2"},{"title":"Explanation​","type":1,"pageTitle":"Luna API","url":"/docs/playable/code/error-codes/LP3006#explanation","content":"Some ad network require to have API calls, else they will reject your playable. Such as GameEnded() API call. To make it easier for the developer, Playable Plugin has integrated all the calls from each ad network into a single API call. ","version":"Next","tagName":"h2"},{"title":"Steps to fix​","type":1,"pageTitle":"Luna API","url":"/docs/playable/code/error-codes/LP3006#steps-to-fix","content":"Please implement the required API calls: Luna.Unity.LifeCycle.GameEnded();, more information here. And Luna.Unity.Playable.InstallFullGame();, more information here. ","version":"Next","tagName":"h2"},{"title":"No LunaPlaygroundField found","type":0,"sectionRef":"#","url":"/docs/playable/code/error-codes/LP3011","content":"","keywords":"fix playable luna playground field usage exception use add warning error LP3011","version":"Next"},{"title":"Message​","type":1,"pageTitle":"No LunaPlaygroundField found","url":"/docs/playable/code/error-codes/LP3011#message","content":"LunaPlaygroundFields is an important Luna feature to add variation to your playable ad in Luna Create. Thats why we recommend a minimum of 3 LunaPlaygroundfield attributes to be used. Of course, more is better! ","version":"Next","tagName":"h2"},{"title":"Explanation​","type":1,"pageTitle":"No LunaPlaygroundField found","url":"/docs/playable/code/error-codes/LP3011#explanation","content":"LunaPlaygroundFields is an important Luna feature to add variation to your playable ad in Luna Create. Thats why we recommend a minimum of 3 LunaPlaygroundfield attributes to be used. Of course, more is better! ","version":"Next","tagName":"h2"},{"title":"Steps to fix​","type":1,"pageTitle":"No LunaPlaygroundField found","url":"/docs/playable/code/error-codes/LP3011#steps-to-fix","content":"Please add LunaPlaygroundField attributes in your code so you can add more variation in Luna Create to the playable ad. More information can be found here Example: [LunaPlaygroundField(&quot;Amount of lives&quot;, 1, &quot;Game Settings&quot;)] public int maxLives = 3;  ","version":"Next","tagName":"h2"},{"title":"API not supported","type":0,"sectionRef":"#","url":"/docs/playable/code/error-codes/LP3009","content":"","keywords":"fix playable luna api support supported unsupported exception usage warning error LP3009","version":"Next"},{"title":"Message​","type":1,"pageTitle":"API not supported","url":"/docs/playable/code/error-codes/LP3009#message","content":"You are using a function/component which are currently not supported in the Playable Plugin. ","version":"Next","tagName":"h2"},{"title":"Explanation​","type":1,"pageTitle":"API not supported","url":"/docs/playable/code/error-codes/LP3009#explanation","content":"Some Unity APIs are not supported in Luna, either because of a known bug or because of limitations of ad networks. ","version":"Next","tagName":"h2"},{"title":"Steps to fix​","type":1,"pageTitle":"API not supported","url":"/docs/playable/code/error-codes/LP3009#steps-to-fix","content":"Please remove the line of code, usually there is a workaround to be found. Please contact your Technical Solutions Engineer for support on this. ","version":"Next","tagName":"h2"},{"title":"Base type not supported","type":0,"sectionRef":"#","url":"/docs/playable/code/error-codes/LP3010","content":"","keywords":"fix playable luna base type types support supported exception usage warning error LP3010","version":"Next"},{"title":"Message​","type":1,"pageTitle":"Base type not supported","url":"/docs/playable/code/error-codes/LP3010#message","content":"You are using an unsupported base type which is not compatible with ad networks. ","version":"Next","tagName":"h2"},{"title":"Explanation​","type":1,"pageTitle":"Base type not supported","url":"/docs/playable/code/error-codes/LP3010#explanation","content":"Not all Unity features are supported on ad networks, thus Playable Plugin cannot support this feature. A common unsupported base type is Editor. An ad network would never be able to support scripts which derive from Editor. ","version":"Next","tagName":"h2"},{"title":"Steps to fix​","type":1,"pageTitle":"Base type not supported","url":"/docs/playable/code/error-codes/LP3010#steps-to-fix","content":"Please either remove the script, or force-exclude the script in Playable Plugin:  ","version":"Next","tagName":"h2"},{"title":"Wrong API Usage","type":0,"sectionRef":"#","url":"/docs/playable/code/error-codes/LP3014","content":"","keywords":"fix playable luna unsupported json feature exception usage warning error LP3014","version":"Next"},{"title":"Message​","type":1,"pageTitle":"Wrong API Usage","url":"/docs/playable/code/error-codes/LP3014#message","content":"You are using the wrong API: Application.OpenURL(&quot;URL.com&quot;); ","version":"Next","tagName":"h2"},{"title":"Explanation​","type":1,"pageTitle":"Wrong API Usage","url":"/docs/playable/code/error-codes/LP3014#explanation","content":"Some ad networks require the creative to use their API instead, and will block Application.OpenURL(). To simplify the user experience, we have implemented a single API call for all ad networks. ","version":"Next","tagName":"h2"},{"title":"Steps to fix​","type":1,"pageTitle":"Wrong API Usage","url":"/docs/playable/code/error-codes/LP3014#steps-to-fix","content":"Please, replace the code with Luna.Unity.Playable.InstallFullGame() For more information, please see our API documentation. ","version":"Next","tagName":"h2"},{"title":"Including External C# Code","type":0,"sectionRef":"#","url":"/docs/playable/code/external-code","content":"","keywords":"external c# repository playable luna","version":"Next"},{"title":"Add your external C# source folder​","type":1,"pageTitle":"Including External C# Code","url":"/docs/playable/code/external-code#add-your-external-c-source-folder","content":"Navigate to the External Sources tab by clicking Code → External Sources in the Luna UI.  Here, you can add your source code folders as absolute or relative paths. Third-party packaged installed via Package Manager will be listed here and users can include/exclude these packages from the Luna Build through this window. Packages can be removed with a single click (the - icon). To make it easier to identify missing folders/files, invalid paths are highlighted in red.  ","version":"Next","tagName":"h2"},{"title":"Not enough LunaPlaygroundFields found","type":0,"sectionRef":"#","url":"/docs/playable/code/error-codes/LP3012","content":"","keywords":"fix playable luna enough increase plaground usage field fields exception warning error LP3012","version":"Next"},{"title":"Message​","type":1,"pageTitle":"Not enough LunaPlaygroundFields found","url":"/docs/playable/code/error-codes/LP3012#message","content":"You are not using the minimum recommended amount of LunaPlaygroundField attributes. ","version":"Next","tagName":"h2"},{"title":"Explanation​","type":1,"pageTitle":"Not enough LunaPlaygroundFields found","url":"/docs/playable/code/error-codes/LP3012#explanation","content":"LunaPlaygroundFields is an important Luna feature to add variation to your playable ad in Luna Create. Thats why we recommend a minimum of 3 LunaPlaygroundfield attributes to be used. Of course, more is better! ","version":"Next","tagName":"h2"},{"title":"Steps to fix​","type":1,"pageTitle":"Not enough LunaPlaygroundFields found","url":"/docs/playable/code/error-codes/LP3012#steps-to-fix","content":"Please use more LunaPlaygroundField attributes in your code so you can add more variation in Luna Create to the playable ad. More information can be found here. Example: [LunaPlaygroundField(&quot;Amount of lives&quot;, 1, &quot;Game Settings&quot;)] public int maxLives = 3;  ","version":"Next","tagName":"h2"},{"title":"Unsupported JSON feature","type":0,"sectionRef":"#","url":"/docs/playable/code/error-codes/LP3013","content":"","keywords":"fix playable luna unsupported json feature exception usage warning error LP3013","version":"Next"},{"title":"Message​","type":1,"pageTitle":"Unsupported JSON feature","url":"/docs/playable/code/error-codes/LP3013#message","content":"You are using an unsupported JSON feature JsonUtility. ","version":"Next","tagName":"h2"},{"title":"Explanation​","type":1,"pageTitle":"Unsupported JSON feature","url":"/docs/playable/code/error-codes/LP3013#explanation","content":"Playable Plugin does not support the Unity JSON Utility, instead, we have support for a different JSON method. ","version":"Next","tagName":"h2"},{"title":"Steps to fix​","type":1,"pageTitle":"Unsupported JSON feature","url":"/docs/playable/code/error-codes/LP3013#steps-to-fix","content":"Please use Newtonsoft.JSON instead. More information can be found here. ","version":"Next","tagName":"h2"},{"title":"Performance Indicator","type":0,"sectionRef":"#","url":"/docs/playable/code/luna-in-browser/performance-indicator","content":"Performance Indicator This page has moved! Redirecting you now ... Click here if nothing happens after a few seconds.","keywords":"profiler performance chrome record track playable luna","version":"Next"},{"title":"Including External JS Libraries","type":0,"sectionRef":"#","url":"/docs/playable/code/external-js-libraries","content":"","keywords":"JS libraries library snippet playable luna","version":"Next"},{"title":"Add your external JS library​","type":1,"pageTitle":"Including External JS Libraries","url":"/docs/playable/code/external-js-libraries#add-your-external-js-library","content":"Navigate to the External Sources tab by clicking Code → External Sources in the Luna UI.  Only select the JS file itself and not a folder directory as these are not supported. To add multiple files you need to select them individually. Choose the required JavaScript file. Below is an example of an external library we have linked to Luna. MyTextListener.js pc.MyTextListener = function () { this.stringProp = ''; this.enterKey = function (ctx) { console.log(this.stringProp + ' ' + ctx); }; };  You can add your source code folders as relative paths. To make it easier to identify missing folders/files, invalid paths are highlighted in red. Path can be removed with a single click (the - icon).  ","version":"Next","tagName":"h2"},{"title":"Create a corresponding C# script​","type":1,"pageTitle":"Including External JS Libraries","url":"/docs/playable/code/external-js-libraries#create-a-corresponding-c-script","content":"Once the library path has been chosen, to begin using elements from your library you will need to create a new C# script. Inside your new C# script, one of the first things you will want to do is, make sure you add a bridge using directive. This is for use during Luna compilation and includes the selected JS library file that it correlates too, within this new C# file. When using the bridge namespace, it is important you wrap this directive with a #if UNITY_LUNA pre-processor as bridge is not part of Unity and is only used for Luna compilation. Inside the Luna pre-processor you will also need to add the JS type name, e.g. [External][Name( &quot;pc.MyTextListener&quot; )]. After C# to JS conversion, this class will be linked to the library's type. Make sure that the JS type is globally visible (or define it with the full name). MyTextListener.cs using System.Collections; using System.Collections.Generic; using UnityEngine; // Bridge is available only in luna compilation time, so wrap it in define. #if UNITY_LUNA using Bridge; // It will be replaced in JavaScript with library code. // Name is important to pass existing class in JS. [External][Name( &quot;pc.MyTextListener&quot; )] #endif  Inside this class you should then include every property and method which you need to use in C#, marking them as extern. public class MyTextListener { // Names of all properties and methods will be renamed to lowerCamelCase. public extern string StringProp { get; set; } public extern string EnterKey(string ctx); } // Now this file is available to use in C# and can be used for binding with JS library.  ","version":"Next","tagName":"h2"},{"title":"Accessing the JS from C#​","type":1,"pageTitle":"Including External JS Libraries","url":"/docs/playable/code/external-js-libraries#accessing-the-js-from-c","content":"Once done you can access those variable methods from C#, such as the following example: testSCR.cs public class testSCR : MonoBehaviour { void Start() { var MyTextListener = new MyTextListener(); MyTextListener.StringProp = &quot;Good&quot;; MyTextListener.EnterKey( &quot;Job&quot;); } }  ","version":"Next","tagName":"h2"},{"title":"Debugging JS 101","type":0,"sectionRef":"#","url":"/docs/playable/code/luna-in-browser/debug-js","content":"","keywords":"debug browser chrome dev tools playable luna","version":"Next"},{"title":"Using Chrome DevTools​","type":1,"pageTitle":"Debugging JS 101","url":"/docs/playable/code/luna-in-browser/debug-js#using-chrome-devtools","content":"At times, you may find that you experience JavaScript errors in the browser; errors can be caused for a number of reasons. To successfully understand and fix these errors, we recommend using the Chrome browser and powerful developer tools provided. For more information and guides on DevTools, please refer to the Google Chrome DevTools documentation. ","version":"Next","tagName":"h2"},{"title":"Get Started With Debugging​","type":1,"pageTitle":"Debugging JS 101","url":"/docs/playable/code/luna-in-browser/debug-js#get-started-with-debugging","content":"Build a develop build from Playable Plugin.Start the server which will automatically open a tab in your browser. note Once opened, you can access Chrome DevTools by pressing command+option+i (Mac) or control+shift+i (Windows, Linux) to access the console view of the Chrome page to see what's happening under the hood. Once open you will be presented with a spilt browser that will give a breakdown of the processes from the page. If there is an error it will be shown here. ","version":"Next","tagName":"h3"},{"title":"Browser Error Types​","type":1,"pageTitle":"Debugging JS 101","url":"/docs/playable/code/luna-in-browser/debug-js#browser-error-types","content":"","version":"Next","tagName":"h3"},{"title":"Yellow Warnings​","type":1,"pageTitle":"Debugging JS 101","url":"/docs/playable/code/luna-in-browser/debug-js#yellow-warnings","content":"The scene will run, but these could be things that may have been changed or altered during the conversion to JS. Typically, these shouldn't be any cause for concern, but of course you should review them, if these are the only messages, in case unintended problems occur. ","version":"Next","tagName":"h3"},{"title":"Red Errors​","type":1,"pageTitle":"Debugging JS 101","url":"/docs/playable/code/luna-in-browser/debug-js#red-errors","content":"These are runtime failures - usually it's easy to identify which code is the problem. Typically, you can click the error and be presented with more information including a stack trace in Chrome dev tools. See below for more information. ","version":"Next","tagName":"h3"},{"title":"Using DevTools dev tools.​","type":1,"pageTitle":"Debugging JS 101","url":"/docs/playable/code/luna-in-browser/debug-js#using-devtools-dev-tools","content":"When debugging in Chrome, you will commonly use the Sources tab.  Let's look at each panel in the Chrome window to see what each section is used for and how to navigate it. You can quickly open converted user code in the browser by typing command+shift+p and typing UnityScriptsCompiler and pressing enter. As mentioned above, UnityScriptsCompiler.js includes all user scripts. The File Navigator panel is on the left. Every file that the page requests is listed here. Clicking on a file will show the contents of the file.The Code Editor panel is in the centre. After selecting a file in the File Navigator panel, the contents of that file are displayed here.The JavaScript Debugging panel includes various tools for inspecting the page's JavaScript. ","version":"Next","tagName":"h3"},{"title":"Error Examples​","type":1,"pageTitle":"Debugging JS 101","url":"/docs/playable/code/luna-in-browser/debug-js#error-examples","content":"","version":"Next","tagName":"h2"},{"title":"Luna Browser Error: Example 1​","type":1,"pageTitle":"Debugging JS 101","url":"/docs/playable/code/luna-in-browser/debug-js#luna-browser-error-example-1","content":"Here is an example error that you may encounter when using Luna, and how you can debug this using Chrome DevTools.  The error and partial stack trace is printed to the console in DevTools. This is helpful in determining where in the compiled JavaScript code your error occurred. In the above example, the stack trace touches multiple script and also touches UnityScriptsCompiler.js which contains all the converted (C#) user code. Clicking the UnityScriptsCompiler.js link in the stack trace will open this file and highlight the relevant line of code which you can use to trace where the error originated.  note A good way to see where the problem code exists in your C# code, is via the code editor pane of the Chrome DevTools. The converted code from C# scripts are commented above the section it resides within. /*LunaConroller.Start start.*/ Start: funtion() { this.rigidody.useGravity = false; }, /*LunaConroller.Start end.*/  Once identified it should provide you with an idea of what to fix. In this case we can see the Rigidbody is set to null. The solution is to make sure we have a Rigidbody attached to our object in Unity. ","version":"Next","tagName":"h3"},{"title":"Luna Browser Error: Example 2​","type":1,"pageTitle":"Debugging JS 101","url":"/docs/playable/code/luna-in-browser/debug-js#luna-browser-error-example-2","content":"A common error in the browser when using Luna is a ctor error message. This can occur when scripts are attempting to call a constructor method from a script that might not be included in the build, is being called in the wrong execution order or is an un-implemented method.  When debugging this, it's helpful to identify where this code is being called from the user code. A few common things to consider for ctor errors: Is the call is in a script that may have been excluded?Is the call being made in the right execution order?Is the method implemented method in Luna?   In this example we can check the code by following the stack trace and identifying that the error originated in the Awake method from our converted C# code (which as mentioned before is contained in UnityScriptsCompiler.js). At the top of the stack trace there is also an UnityEngine.js call, which defines Luna's implementation of the Unity engine. As shown in the second image above we can see that the method being used in the Awake method is not yet implemented in Luna. In most cases, it is simple to work around an un-implemented method. Here, Screen.currentResolution can be replaced with a method that gets the resolution of the screen by using Screen.width and Screen.height, which are supported methods in Luna. ","version":"Next","tagName":"h3"},{"title":"Dev Environment","type":0,"sectionRef":"#","url":"/docs/playable/code/luna-in-browser/dev-environment","content":"","keywords":"guide project playable luna environment develop","version":"Next"},{"title":"Enabling and disabling the Dev Environment​","type":1,"pageTitle":"Dev Environment","url":"/docs/playable/code/luna-in-browser/dev-environment#enabling-and-disabling-the-dev-environment","content":"The Dev Environment cannot be disabled but you can view an original page by appending /iframe.html to the end of the URL (for example: http://127.0.0.1:8000/ should be replaced with http://127.0.0.1:8000/iframe.html). ","version":"Next","tagName":"h2"},{"title":"Differences between Dev Environment and Creative Suite preview​","type":1,"pageTitle":"Dev Environment","url":"/docs/playable/code/luna-in-browser/dev-environment#differences-between-dev-environment-and-creative-suite-preview","content":"The Dev Environment currently supports a limited number of features compared to Creative Suite. The following features are NOT currently supported by the Dev Environment: Creative versionsReordering and renaming fieldsCreating and renaming sectionsUploading assets (such as fonts, images, video and audio) while the following features are supported by the Dev Environment: Testing Creative Suite Fields to more easily check all code paths for Runtime Analysis.By reloading the page or reopening it, changes made to fields are preserved.An Enter / Exit Fullscreen button was added to the bottom-right corner, which hides / shows the Creative Suite interface. Creative Suite InterfaceFullscreen ","version":"Next","tagName":"h2"},{"title":"QR Code for Develop Builds​","type":1,"pageTitle":"Dev Environment","url":"/docs/playable/code/luna-in-browser/dev-environment#qr-code-for-develop-builds","content":"tip Make sure you are running the latest version of Playable Plugin to use this feature. You can easily test a playable on multiple devices with the QR code provided when running a development build in the Dev Environment. Click on the QR icon located on the top-right of the middle container: and the QR code will pop up: Make sure your device and your computer are connected to the same network. Scan the QR code and you are now able to test your playable from another device! ","version":"Next","tagName":"h2"},{"title":"Js Profiler","type":0,"sectionRef":"#","url":"/docs/playable/code/luna-in-browser/profiler-js","content":"","keywords":"profiler performance chrome record track playable luna","version":"Next"},{"title":"Record Runtime Performance​","type":1,"pageTitle":"Js Profiler","url":"/docs/playable/code/luna-in-browser/profiler-js#record-runtime-performance","content":"Once selected, the performance tab should show the profiler in the chrome window. There are some steps you need to do in order to start capturing profiling data.  In DevTools, click the Record option (first left option). DevTools will then capture performance metrics as the page runs.Interact with the page, or wait a few seconds for the data to capture the sequence you want to analyse.Click Stop when the sequence is finished. DevTools will stop recording, process the data and then display the results on the Performance panel. Once the Performance tab is selected, and a session recorded, here is what a typical view may look like.  ","version":"Next","tagName":"h2"},{"title":"Record Performance​","type":1,"pageTitle":"Js Profiler","url":"/docs/playable/code/luna-in-browser/profiler-js#record-performance","content":"The profiling in Unity may not show performance issues with scenes but when converted and run in HTML5 it can be apparent that some gameplay is not very performant and slow. DevTools allows you to identify which part is performing poorly much like the Unity profiler. Begin recording and play through your ad, its important to capture the area that may be causing performance issues or causing inconsistent results. Unity engine APIs may not be as performant once converted into HTML5, as builds need to be lightweight and have limitations of running on the web-browser. ","version":"Next","tagName":"h2"},{"title":"Chrome Profiling: Example​","type":1,"pageTitle":"Js Profiler","url":"/docs/playable/code/luna-in-browser/profiler-js#chrome-profiling-example","content":"Recorded profiles show a timeline that can be used to narrow down the data to a specific area of information, allow for finer look into the calls like rendering, events, functions and time-taken to perform actions.  In the image below Animation Frame Fired and Function Call is causing a drop in performance, as these are taking a long time to execute, which is slowing down the pace of the ad gameplay. In these situations you want gameplay to be a fluid as possible! Here we have an animation event and function call that is causing a slow in performance due to the time-taken to perform these calls, but identifies what the issue is in terms of where begin to reduce this time delay and improving performance.  The Views are from a specific analysing tab which is: Main The main tab represents the main thread activity with a Flame chart. The x-axis represents the recording over time. The y-axis represents the call stack. From top to bottom, the events on top cause the events below it. Flame Chart The Flame chart as described above shows the call stack and events. These events can be clicked and viewed in the activity table for specific events information inside the call stack. ","version":"Next","tagName":"h2"},{"title":"Analysis of the cause​","type":1,"pageTitle":"Js Profiler","url":"/docs/playable/code/luna-in-browser/profiler-js#analysis-of-the-cause","content":"To understand why this happens, the effects of running your code in a different environment needs to always be in consideration. Following the Flame chart down the execution order it helps to identify where the problem origin is. In this case somewhere during animation call and a specific function call. The solution for this example is that the Instantiation of the Cube objects followed by a FindObjectWithTag call, causes a time-consuming and slow process of searching the scene and creating many objects at the same time, especially if you then Destroy these objects. A general point of advice is to avoid these kinds of issues by not using methods that require such resource expensive calls or require a large amount of draw calls in an update method. Try to object-pool in these cases which will significantly improve performance in your scene. ","version":"Next","tagName":"h2"},{"title":"Luna Expert - Overview","type":0,"sectionRef":"#","url":"/docs/playable/code/error-codes/overview","content":"Luna Expert - Overview Luna Project Diagnostics is simple yet powerful tool that helps identifying performance issues, malformed project items and so on. Luna Project Diagnostics automatically runs upon each export and collects all the messages in the Playable Plugin UI: Messages logged by Luna Project Diagnostics are not always critical, but often help to quickly identify common pitfalls, performance and build size issues early. Error List 1000 - Huge Mesh1001 - Shader Stripping1002 - Non Pot Texture1003 - Deferred Rendering1004 - Missing Shader Variant1005 - Invalid Shader Variant1006 - Linear Color Space1007 - Many Mesh Colliders1008 - Null Component1009 - PlaygroundAsset Value1010 - Scale On Collider1011 - Unreadable Texture1012 - Exportation1013 - Sprite Atlas1014 - Runtime Analysis Warning1015 - Unsupported TMP Version1016 - Excessive component usage1017 - Animation Compression Setting1018 - Mesh Compression Usage1022 - Extensive use of shader variants1023 - Many Facebook Files1024 - Huge Ram Usage1025 - Unhandled Exception1026 - Cinemachine Version1027 - DOTween Version1028 - Unity Version1029 - Avatar Animation1030 - Unsupported Atlas Population Mode1031 - Shader Runtime Analysis1032 - Package(s) Not Supported1033 - Character Controller Detected1034 - 65k Mesh Vertices Limit2000 - Assets2001 - Failed To Combine Glyphs2002 - Sound Compression2003 - Texture Compression2004 - Custom Scripts2005 - Engine Build (Bridge.NET)2006 - Asset manifest2007 - Bridge crash2008 - SyntaxTransformer3000 - MSBuild path3001 - Unity Bin Error3002 - Unity Bin Path3003 - MSBuild Version3005 - Illegal keyword3006 - Luna API3007 - Custom Events Missing3008 - Custom Events Count3009 - API not supported3010 - Base type not supported3011 - No LunaPlaygroundField found3012 - Not enough LunaPlaygroundFields found3013 - Unsupported JSON feature3014 - Wrong API Usage","keywords":"diagnostic messages fix playable luna","version":"Next"},{"title":"Custom Events Missing","type":0,"sectionRef":"#","url":"/docs/playable/code/error-codes/LP3007","content":"","keywords":"fix playable luna custom events usage missing exception warning error LP3007","version":"Next"},{"title":"Message​","type":1,"pageTitle":"Custom Events Missing","url":"/docs/playable/code/error-codes/LP3007#message","content":"There are no custom events in the playable, consider adding some for insights in user behaviour. ","version":"Next","tagName":"h2"},{"title":"Explanation​","type":1,"pageTitle":"Custom Events Missing","url":"/docs/playable/code/error-codes/LP3007#explanation","content":"Custom events is an important feature from Playable Plugin to track players during the playable. This will give you insights on how players behave, and you can adapt according to this data. Example: You have a custom event that triggers in the end of the game, this custom event is: PlayerWon and PlayerLost. According to the data, PlayerLost has 50% higher CTR than PlayerWon. In this case, it might be a good idea to make the playable ad more difficult so more players lose the game, resulting in higher CTR. Please do note, not all ad networks support this feature. ","version":"Next","tagName":"h2"},{"title":"Steps to fix​","type":1,"pageTitle":"Custom Events Missing","url":"/docs/playable/code/error-codes/LP3007#steps-to-fix","content":"Please add the custom event API for a minimum of 3 times in your playable: Luna.Unity.Analytics.LogEvent(&quot;PlayerLost&quot;, 0); , more information here. ","version":"Next","tagName":"h2"},{"title":"End Card Builder","type":0,"sectionRef":"#","url":"/docs/playable/code/interactive-end-card-builder","content":"","keywords":"playable luna end card iec fields configuration","version":"Next"},{"title":"Overview​","type":1,"pageTitle":"End Card Builder","url":"/docs/playable/code/interactive-end-card-builder#overview","content":"The Interactive End Card Builder is a tool developed by Luna for the Playable plug-in. Game developers can create and customize end cards for their playables instantly in the Unity editor. ","version":"Next","tagName":"h2"},{"title":"Getting Started​","type":1,"pageTitle":"End Card Builder","url":"/docs/playable/code/interactive-end-card-builder#getting-started","content":"Install Playable Plugin into your Unity project.Download and import the Interactive End Card Builder into your Unity project. You can now see the Interactive End Card Builder folder in your Unity assets. If you want to test the builder, or have a play around with it, you can select the Scenes folder and open the the Example Scene. The CanvasWithEndCard prefab can be dragged and dropped into your project hierarchy and integrated with your work. You can find it in the End Card folder, in the prefabs sub-folder. ","version":"Next","tagName":"h2"},{"title":"End Card Call​","type":1,"pageTitle":"End Card Builder","url":"/docs/playable/code/interactive-end-card-builder#end-card-call","content":"It is necessary to call the end card in order for it to appear in the scene. Therefore, you can use the OpenEndCard() method in your script to instantiate the end card. An example is available in the scripts folder: Example End Card Call. ","version":"Next","tagName":"h2"},{"title":"End Card Configuration​","type":1,"pageTitle":"End Card Builder","url":"/docs/playable/code/interactive-end-card-builder#end-card-configuration","content":"To configure an end card, you can select the prefab first child LunaEndCardContainer in the hierarchy. In this way the inspector will show you all the fields that can be modified in real time.  These fields are also divided between Portrait Settings and Landscape Settings according to what orientation is being used. These settings work in a similar way, they are only split in two groups in order to get different behaviors according to the considered orientation. PortraitLandscape ","version":"Next","tagName":"h2"},{"title":"End Card Settings​","type":1,"pageTitle":"End Card Builder","url":"/docs/playable/code/interactive-end-card-builder#end-card-settings","content":"Use these variables to set your basic end card features (eg. background, icon texture, description, etc.).  Field\tType/Options\tDetailsAlways show Endcard\tBoolean(true/false)\tMainly used for testing. Tick this option to make your end card to stay fixed in play mode. Background color\tClick on the color bar to open the color context menu and begin choosing a color.\tThe background colour and opacity of the end card. If you do not need a background you can set the alpha value to 0. Background Texture\tImage file(.png, .jpg, .jpeg, etc.)\tYou may upload a custom image to use for the end card. If your image includes text already on it be sure to set the End Card text color to transparent. Icon Texture\tImage file(.png, .jpg, .jpeg, etc.)\tThe image used for the icon in the end card. Icon Color\tClick on the color bar to open the color context menu and begin choosing a color.\tThe background colour and opacity of the end card's icon. Button Texture\tImage file(.png, .jpg, .jpeg, etc.)\tThe image used for the Button in the end card. Button Color\tClick on the color bar to open the color context menu and begin choosing a color.\tThe background colour for and opacity of the end card's button. End Card Description Text\tString (Letters, Numbers and Symbols)\tThe description text displayed under the icon and above the CTA button. CTA Button Text\tString (Letters, Numbers and Symbols)\tThe text displayed inside the CTA button. Use Best Fit On CTA\tBoolean(true/false)\tTick this box to automatically resize the button text to the best fit. CTA Font Color\tClick on the color bar to open the color context menu and begin choosing a color.\tThe color and the opacity of the CTA button text. If needed, you can set the opacity to 0 to remove the text. Description Font Color\tClick on the color bar to open the color context menu and begin choosing a color.\tThe color and the opacity of the description text. If needed, you can set the opacity to 0 to remove the text. CTA Font\tFont file(.ttf, .otf)\tDrag &amp; drop a font file in this field to change the font used by the CTA button text. Description Font\tFont file(.ttf, .otf)\tDrag &amp; drop a font file in this field to change the font used by the description text. ","version":"Next","tagName":"h2"},{"title":"Portrait Settings​","type":1,"pageTitle":"End Card Builder","url":"/docs/playable/code/interactive-end-card-builder#portrait-settings","content":"Use this settings to edit the appearance of the end card in portrait mode.  Landscape orientation fields will not update the end card's features while in portrait orientation. ","version":"Next","tagName":"h2"},{"title":"Description and CTA Button​","type":1,"pageTitle":"End Card Builder","url":"/docs/playable/code/interactive-end-card-builder#description-and-cta-button","content":"Field\tType/Options\tDetailsCTA Font Size\tSlider (which changes a float value)\tThe size of the CTA button text, the larger the value entered the larger the text will be. Description Font Size\tSlider (which changes a float value)\tThe size of the description text, the larger the value entered the larger the text will be. Center Description X\tBoolean(true/false)\tTick this box to center the description text along the X axis. When this field is set to true, the description will be fixed in the center of the playable. Setting this back to false will allow this object to be moved along the X axis again. Center Description Y\tBoolean(true/false)\tTick this box to center the description text along the Y axis. When this field is set to true, the description will be fixed in the center of the playable. Setting this back to false will allow this object to be moved along the Y axis again. Center Button X\tBoolean(true/false)\tTick this box to center the CTA button along the X axis. When this field is set to true, the CTA button will be fixed in the center of the playable. Setting this back to false will allow this object to be moved along the X axis again. Center Button Y\tBoolean(true/false)\tTick this box to center the CTA button along the Y axis. When this field is set to true, the CTA button will be fixed in the center of the playable. Setting this back to false will allow this object to be moved along the Y axis again. Description Position X\tSlider (which changes a float value)\tUse the slider to translate the description text along the X axis. Description Position Y\tSlider (which changes a float value)\tUse the slider to translate the description text along the Y axis. Button Position X\tSlider (which changes a float value)\tUse the slider to translate the CTA button along the X axis. Button Position Y\tSlider (which changes a float value)\tUse the slider to translate the CTA button along the Y axis. ","version":"Next","tagName":"h3"},{"title":"Icon​","type":1,"pageTitle":"End Card Builder","url":"/docs/playable/code/interactive-end-card-builder#icon","content":"Field\tType/Options\tDetailsCenter Icon X\tBoolean(true/false)\tTick this box to center the description text along the X axis. When this field is set to true, the description will be fixed in the center of the playable. Setting this back to false will allow this object to be moved along the X axis again. Center Icon Y\tBoolean(true/false)\tTick this box to center the description text along the Y axis. When this field is set to true, the description will be fixed in the center of the playable. Setting this back to false will allow this object to be moved along the Y axis again. Icon Position X\tSlider (which changes a float value)\tUse the slider to move the icon along the X axis. Icon Position Y\tSlider (which changes a float value)\tUse the slider to move the icon along the Y axis. Icon Size\tSlider (which changes a float value)\tMove the slider to change the size the icon. Round Edged On Icon\tBoolean(true/false)\tTick this box to round the edges of your icon. ","version":"Next","tagName":"h3"},{"title":"Landscape Settings​","type":1,"pageTitle":"End Card Builder","url":"/docs/playable/code/interactive-end-card-builder#landscape-settings","content":"Use this settings to test the landscape orientation of your playable. These settings function in the same way the The landscape settings are separated from the portrait fields in the inspector. In this way, you are able to create a different behavior for your end card when the user is using landscape orientation. If you are using a portrait orientation the landscape settings will not update the end card's features.  ","version":"Next","tagName":"h2"},{"title":"Clickable Options​","type":1,"pageTitle":"End Card Builder","url":"/docs/playable/code/interactive-end-card-builder#clickable-options","content":"In this field, you can specify which part of the end card will be clickable and linked to the app store. Options\tDetailsCTA Button Only\tOnly the CTA button will be clickable in the end card. Fullscreen\tThe entire screen will be clickable in the end card. Fire App Stop Click On Show\tThis options will automatically click on the end card when it is shown for the first time. ","version":"Next","tagName":"h2"},{"title":"Animation Settings​","type":1,"pageTitle":"End Card Builder","url":"/docs/playable/code/interactive-end-card-builder#animation-settings","content":"The end card builder also provides different animations for the CTA button and the end card entry. Field\tType/Options\tDetailsButton Animation Type\t- None - Wobble - Scale - Opacity The animation for the end card button. The default value is Wobble. You can check them here. End Card Portrait Animation Type\t- None - Slide Top To Bottom: The end card enters from the top of the screens going towards the bottom - Slide Bottom To Top: The end card enters from the bottom of the screens going towards the top - Scale : The end card enters in the scene by expanding from the middle of the screen until it reaches the required measurements.\tThe appearance animation type for the end card in portrait orientation, which controls show the end card arrives on screen. Default value is Slide Top To Bottom. You can check them out here. End Card Landscape Animation Type\t- None - Slide Right To Left: The end card enters from the right of the screens going towards the left side. - Slide Left To Right: The end card enters from the left of the screens going towards the right side. - Scale: The end card enters in the scene by expanding from the middle of the screen until it reaches the required measurements. The appearance animation type for the end card in landscape orientation, which controls show the end card arrives on screen. Default value is Slide Right To Left. ","version":"Next","tagName":"h2"},{"title":"Button Animations​","type":1,"pageTitle":"End Card Builder","url":"/docs/playable/code/interactive-end-card-builder#button-animations","content":"WobbleScaleOpacity ","version":"Next","tagName":"h3"},{"title":"End Card Entry Animation​","type":1,"pageTitle":"End Card Builder","url":"/docs/playable/code/interactive-end-card-builder#end-card-entry-animation","content":"Top To BottomBottom To TopScale ","version":"Next","tagName":"h3"},{"title":"Luna Debugger","type":0,"sectionRef":"#","url":"/docs/playable/code/luna-in-browser/luna-debugger","content":"","keywords":"debugger chrome extension playable luna","version":"Next"},{"title":"Overview​","type":1,"pageTitle":"Luna Debugger","url":"/docs/playable/code/luna-in-browser/luna-debugger#overview","content":"The Luna Debugger is a powerful tool that allows developers using Playable Plugin to inspect and debug develop builds directly in the browser. The interface will be familiar to users of the Unity Editor, weve incorporated similar components like hierarchy and inspector panels so that you can debug a Playable Plugin build in real time just as easily as you would a Unity scene. The tool is available to all Luna customers as a free browser extension in the Chrome Web Store.  ","version":"Next","tagName":"h2"},{"title":"How to get started​","type":1,"pageTitle":"Luna Debugger","url":"/docs/playable/code/luna-in-browser/luna-debugger#how-to-get-started","content":"Install the Luna Debugger Chrome extension from the Chrome Web StoreOpen a Playable Plugin develop build in ChromeUse the keyboard shortcut Option + ⌘ + I (on macOS), or Shift + CTRL + I (on Windows/Linux), to open the Chrome DevTools panelAt the furthermost right of the DevTools tabs you should now see Luna, click this to open the debugger Once the Luna Debugger is displayed in DevTools, you should see the hierarchy and inspector panels populated with information related to your scene in the develop build. What youre seeing is a live representation of your builds object hierarchy in the Luna engine. Additionally, most of what you see in the inspector panel is editable in real time and we provide tools to move freely around the scene and pause it. ","version":"Next","tagName":"h2"},{"title":"Hierarchy Panel​","type":1,"pageTitle":"Luna Debugger","url":"/docs/playable/code/luna-in-browser/luna-debugger#hierarchy-panel","content":"Here you can see the full hierarchy of all game objects in your exported build, you can click game objects to open them in the inspector panel and expand child objects. The hierarchy panel is useful for a number of reasons whilst debugging your build: Determining whether a game object is instantiated and active in the sceneDetermining whether a game object is a prefab ","version":"Next","tagName":"h2"},{"title":"Inspector Panel​","type":1,"pageTitle":"Luna Debugger","url":"/docs/playable/code/luna-in-browser/luna-debugger#inspector-panel","content":"This is where youll find the values and attributes that apply to a game object in your scene. All the fields displayed in this panel are editable and any resulting changes can be observed instantly in the running scene. Viewing and editing game objects here can useful for the following reasons: Activating disabled game objectsChanging the position, rotation and scale of an object Change the layer of an object. This can be useful if something is not visible when you expect it to be, sometimes changing the layer can help you identify the cause. Determining which components a game object has and which are disabled Checking to see how a component behaves in the Luna engine when you change its values, so you can find the optimal configuration for Luna There are some limitations of the inspector panel and what we show there, those are detailed here. Careful! Any changes that you apply using the Luna Debugger are not permanent and will be reset once you refresh or close the page. Changes are not written to your export and do not impact the final playable. ","version":"Next","tagName":"h2"},{"title":"Console & Animator Panel​","type":1,"pageTitle":"Luna Debugger","url":"/docs/playable/code/luna-in-browser/luna-debugger#console--animator-panel","content":"Under the Inspector and Hierarchy panels is where the Console and Animator panels can be found. By default this section will display the console. The debugger console will act similarly as the one in Unity, showing you: logs, warnings and errors pertaining to your project. Some logs will link you to the GameObject in the hierarchy panel when clicking on them. Clicking on a log type icon in the top right of the panel will filter out logs of that type from the console. The second tab in this section is for the animator, this will display the same animation graph you would see in Unity's animator panel. You can change what animation is shown by selecting the GameObject in the hierarchy that has the desired animation attached.  ","version":"Next","tagName":"h2"},{"title":"Resizing Panels​","type":1,"pageTitle":"Luna Debugger","url":"/docs/playable/code/luna-in-browser/luna-debugger#resizing-panels","content":"You can also resize the extension window to suit your needs:  ","version":"Next","tagName":"h2"},{"title":"Scene Camera & Scene Pause​","type":1,"pageTitle":"Luna Debugger","url":"/docs/playable/code/luna-in-browser/luna-debugger#scene-camera--scene-pause","content":"You can use the scene camera to move freely around a scene. Simply click the running scene and drag in the direction you want to move the camera in. Scroll to move the camera backwards or forwards or use the W, S, A, D keys, and the Q and E keys to move up and down. Pause can be used to stop the running of the scene arbitrarily and see the state of the scene in that frame. ","version":"Next","tagName":"h2"},{"title":"Other features​","type":1,"pageTitle":"Luna Debugger","url":"/docs/playable/code/luna-in-browser/luna-debugger#other-features","content":"Collider highlighting: You can use the debugger to highlight colliders in your scene so that you can identify their position, size and shape easily For this feature to work, you must have the free camera mode activated!  Luna particle system support: In the inspector panel, if you are viewing a game object with the particle component used, we will highlight in red any features unsupported by the Luna engine Game object logging: You can right click a game object in the hierarchy panel and log it to the console. This will log the entire object in JS to the browser's console.  ","version":"Next","tagName":"h2"},{"title":"Limitations​","type":1,"pageTitle":"Luna Debugger","url":"/docs/playable/code/luna-in-browser/luna-debugger#limitations","content":"The follow component types are supported in the inspector panel: IntFloatBooleanTextLayerColorVectorRectEnumCurve (Not editable)ColorGradient (Not editable)AssetReference (Not editable)ComponentReference (Not editable) Currently, the Luna Debugger has the following limitations to be aware of: Inherited fields in the Inspector panel are not properly orderedEnums are stored as integers for user-created classesCurves and colour gradient are not supported for editingIn the particle system, angles are stored and displayed as radians instead of degrees ","version":"Next","tagName":"h2"},{"title":"Runtime Analysis","type":0,"sectionRef":"#","url":"/docs/playable/code/runtime-analysis","content":"Runtime Analysis This page has moved! Redirecting you now ... Click here if nothing happens after a few seconds.","keywords":"old","version":"Next"},{"title":"JSON in Luna","type":0,"sectionRef":"#","url":"/docs/playable/code/json-in-luna","content":"","keywords":"JSON newtonsoft serialize deserialize read write populate playable luna","version":"Next"},{"title":"Installing Newtonsoft.Json​","type":1,"pageTitle":"JSON in Luna","url":"/docs/playable/code/json-in-luna#installing-newtonsoftjson","content":"Firstly, open your project directory and locate the manifest.json file under the Packages folder.  Add the following line to the dependencies section of the file and save:  &quot;com.unity.nuget.newtonsoft-json&quot;: &quot;2.0.0&quot;   In this way, Package Manager handles the installation of Newtonsoft Json automatically. Verify the package installation by opening the Package Manager interface in Unity and sorting the results by &quot;In Project&quot;. You should see the Newtonsoft Json package among the results.  You cannot install Newtonsoft Json by searching it in the Package Manager interface, for this reason you need to add it manually to the manifest.json file in order to install it. From here you are good to use Newtonsoft.Json (via including the namespace using Newtonsoft.Json; in your scripts). ","version":"Next","tagName":"h2"},{"title":"Install Newtonsoft.Json manually​","type":1,"pageTitle":"JSON in Luna","url":"/docs/playable/code/json-in-luna#install-newtonsoftjson-manually","content":"We highly recommend you use the installation method provided above. The following is a tutorial on how to install Newtonsoft Json manually in your project without using Package Manager. CLICK ME First you will need to download the Newtonsoft package from NuGet (link here). After downloading the package you will see the file type is .nupkg, change this to .zip and then extract the contents. Inside the extracted contents navigate to /lib/netstandard2.0 and copy the Newtonsoft.Json.dll file. Now inside your Unity project create a new folder in the root of Assets and call it 'Plugins' (the naming here is important as this is a special folder name within Unity). Inside this Plugins folder paste the Newtonsoft.Json.dll file. From here you are good to use Newtonsoft.Json (via including the namespace using Newtonsoft.Json; in your scripts). ","version":"Next","tagName":"h2"},{"title":"Supported Methods​","type":1,"pageTitle":"JSON in Luna","url":"/docs/playable/code/json-in-luna#supported-methods","content":"Note: When printing values relating to deserialized objects, you will need to use Console.WriteLine in order for them to show up in the browser console. You can use Debug.Log when checking them inside Unity though. ","version":"Next","tagName":"h2"},{"title":"Writing To & Reading From Files​","type":1,"pageTitle":"JSON in Luna","url":"/docs/playable/code/json-in-luna#writing-to--reading-from-files","content":"Whilst we can still read from files once the project is built, we cannot write to them as we don't have permission to store data (no drive access). This means you can preprocess any writing being done in the project, and replace any reading logic using paths by adding a public TextAsset to the script and using it in place of paths. E.g.  // Before JsonConvert.DeserializeObject&lt;Product&gt;(File.ReadAllText(&quot;Assets/products.json&quot;)); // After public TextAsset _json; // Drag JSON file from within Assets to this exposed field JsonConvert.DeserializeObject&lt;Product&gt;(_json.text);  ","version":"Next","tagName":"h3"},{"title":"SerializeObject​","type":1,"pageTitle":"JSON in Luna","url":"/docs/playable/code/json-in-luna#serializeobject","content":"Serializes the specified object to a JSON string. Available at runtime. More info in Newtonsoft.Json's documentation. JsonConvert.SerializeObject(Object); JsonConvert.SerializeObject(Object, Formatting); JsonConvert.SerializeObject(Object, JsonSerializerSettings); JsonConvert.SerializeObject(Object, Formatting, JsonSerializerSettings);  ","version":"Next","tagName":"h3"},{"title":"DeserializeObject​","type":1,"pageTitle":"JSON in Luna","url":"/docs/playable/code/json-in-luna#deserializeobject","content":"Deserializes the JSON to a .NET object. Available at runtime. More info in Newtonsoft.Json's documentation. JsonConvert.DeserializeObject(String); JsonConvert.DeserializeObject(String, Type); JsonConvert.DeserializeObject(String, JsonSerializerSettings); JsonConvert.DeserializeObject(String, Type, JsonSerializerSettings);  ","version":"Next","tagName":"h3"},{"title":"PopulateObject​","type":1,"pageTitle":"JSON in Luna","url":"/docs/playable/code/json-in-luna#populateobject","content":"Populates the specified object following the description in a JSON string. Available at runtime. More info in Newtonsoft.Json's documentation. JsonConvert.PopulateObject(String, Object); JsonConvert.PopulateObject(String, Object, JsonSerializerSettings);  ","version":"Next","tagName":"h3"},{"title":"Unsupported Data Types / Structures / Encodings​","type":1,"pageTitle":"JSON in Luna","url":"/docs/playable/code/json-in-luna#unsupported-data-types--structures--encodings","content":"Our implementation of Newtonsoft.Json supports all data types, structs and encodings other than a few exceptions: StacksQueuesUTF7 encodingUTF32 encoding Note: Whilst we do support private properties, you will need to add a `[JsonProperty] attribute to them in order for them to serializable. ","version":"Next","tagName":"h2"},{"title":"Example​","type":1,"pageTitle":"JSON in Luna","url":"/docs/playable/code/json-in-luna#example","content":"using UnityEngine; using System; using System.IO; using Newtonsoft.Json; public class jsonTest : MonoBehaviour { // Attach your json file to the script public TextAsset jsonFile; private void Start() { JsonFunc(jsonFile); } public static void JsonFunc(TextAsset _json) { // Path will not be used in build string path = &quot;Assets/jsonData.json&quot;; // Initialise data Product product = new Product(); product.Name = &quot;Apple&quot;; product.Price = 3.99M; product.Sizes = new string[] { &quot;Small&quot;, &quot;Medium&quot;, &quot;Large&quot; }; // Write to file only outside of Luna #if !UNITY_LUNA File.WriteAllText(path, JsonConvert.SerializeObject(product)); #endif // Deserialize the JSON and assign to variable Product deserializedProduct = JsonConvert.DeserializeObject&lt;Product&gt;(_json.text); // Log the properties // (Remember you need Console.WriteLine to see them in the browser console) Console.WriteLine(deserializedProduct.Name); Console.WriteLine(deserializedProduct.Price); for (int i = 0; i &lt; product.Sizes.Length; i++){ Console.WriteLine(deserializedProduct.Sizes[i]); } } } public class Product { public string Name { get; set; } public decimal Price { get; set; } public string[] Sizes { get; set; } }  ","version":"Next","tagName":"h2"},{"title":"Luna Compiler V2","type":0,"sectionRef":"#","url":"/docs/playable/code/luna-compiler-v2","content":"Luna Compiler V2 Playable Plugin now has support of C# 8.0 and C# 9.0 features. This option is disabled by default and could be activated in Playable Plugin Plugin window. When to use? If you know, that you use C# 8.0 or C# 9.0 features in project - enabling of Luna Compiler v2 is recommended. Popular C# 8.0 and C# 9.0 features: Pattern matching if(fruit is Apple) { MakeApplePieFrom(fruit as Apple); } Using declarations static int WriteLinesToFile(IEnumerable&lt;string&gt; lines) { using var file = new System.IO.StreamWriter(&quot;WriteLines2.txt&quot;); int skippedLines = 0; foreach (string line in lines) { if (!line.Contains(&quot;Second&quot;)) { file.WriteLine(line); } else { skippedLines++; } } // Notice how skippedLines is in scope here. return skippedLines; // file is disposed here } Null-coalescing assignment List&lt;int&gt; numbers = null; int? i = null; numbers ??= new List&lt;int&gt;(); numbers.Add(i ??= 17); numbers.Add(i ??= 20); Console.WriteLine(string.Join(&quot; &quot;, numbers)); // output: 17 17 Console.WriteLine(i); // output: 17 Enhancement of interpolated verbatim strings var myString1 = $@&quot;...&quot;; var myString2 = @$&quot;...&quot;; If you see errors on Luna Compiler v1 (default compiler), then enabling of Luna Compiler v2 could solve the issue: Feature is not available in C# 7.0. Please use language version 8.0 or greater.An expression of type MyCustomType cannot be handled by a pattern of type “not null” in C# 8.0. Please use language version 9.0 or greater.Tuple element name MyElementName is inferred. Please use language version 9.0 or greater to access an element by its inferred name.Invalid MyCustomType value: null for C# 8.0. Please use language version 9.0 or greater. Supported Unity versions Option is not available on Unity 2019.X - 2020.1. C# 8.0 works on Unity 2020.2 or higher. C# 9.0 works on Unity 2021.2 or higher. Tools Luna Compiler v2 uses Mono Runtime, MSBuild and Roslyn compiler directly from Unity Editor installation, so no additional tools required. How it affects your playable? With Luna Compiler v2 you could use newest C# features.With Luna Compiler v2 build time slightly increased.With Luna Compiler v2 all Luna types now arent exposed to user (see Caveats section for more details). Supported features Playable Plugin Plugin supports almost all C# 9.0 features, which Unity supports. Full list of tested features you could find below: C# 8.0 Features​ Feature\tSupportNull-coalescing assignment\tSupported Pattern-matching enhancements\tSupported Readonly members\tSupported Static local functions\tSupported Using declarations\tSupported Enhancement of interpolated verbatim strings\tSupported Disposable ref structs\tUnsupported Stackalloc in nested expressions\tUnsupported Unmanaged constructed types\tUnsupported Default interface methods\tUnsupported (Unity does not support) Indices and ranges\tUnsupported (Unity does not support) Asynchronous streams\tUnsupported (Unity does not support) Asynchronous disposable\tUnsupported (Unity does not support) C# 9.0 Features​ Feature\tSupportLambda discard parameters\tSupported Target-typed new\tSupported Pattern-matching enhancements\tSupported Static anonymous functions\tSupported Lambda discard parameters\tSupported Target-typed conditional expression\tUnsupported Local function attribute\tUnsupported Native-sized integers\tUnsupported Skip localsinit\tUnsupported Records\tUnsupported Init-only setters\tUnsupported (Unity does not support) Covariant returns\tUnsupported (Unity does not support) Top-level statements\tUnsupported Function Pointers\tUnsupported (Unity does not support) Caveats Luna specific types In some rare cases, your code could use Playable Plugin Plugin internal classes (due to custom package or any kind of custom changes in your project) such as ElementComponent class, so, it could not be exposed as public anymore. Such issues have workarounds, you could ask for help from our support.","keywords":"luna compiler v2 support supported unsupported unity playable luna","version":"Next"},{"title":"Preparing Your Code - Overview","type":0,"sectionRef":"#","url":"/docs/playable/code/overview","content":"","keywords":"prepare code playable luna","version":"Next"},{"title":"Getting started​","type":1,"pageTitle":"Preparing Your Code - Overview","url":"/docs/playable/code/overview#getting-started","content":"First of all, it is helpful to go over the below checklist and make sure Luna is properly set up for the project: Make sure to follow initial setup steps of LunaChoose appropriate export type via Luna UIVerify Luna installation by exporting a simple scene ","version":"Next","tagName":"h2"},{"title":"Compilation issues​","type":1,"pageTitle":"Preparing Your Code - Overview","url":"/docs/playable/code/overview#compilation-issues","content":"When the project export process is started but the code compilation fails, the following topics describe how to address common issues: Using the Project Diagnostics feature to analyse your project and view any build issuesOpening a Visual Studio solution to get an overview of compilation errorsExcluding scripts from compilation processExcluding blocks of code from compilation processUsing Automatic Stubbing to remove third party libraries ","version":"Next","tagName":"h2"},{"title":"Frame Debugger - SpectorJS","type":0,"sectionRef":"#","url":"/docs/playable/code/luna-in-browser/spector-js","content":"","keywords":"debugger frame browser playable luna","version":"Next"},{"title":"Spector Instructional Videos​","type":1,"pageTitle":"Frame Debugger - SpectorJS","url":"/docs/playable/code/luna-in-browser/spector-js#spector-instructional-videos","content":"Here are some instructional videos explaining how SpectorJS can be used.   For more information about how SpectorJS works check out their documentation. ","version":"Next","tagName":"h2"},{"title":"Spector Argument​","type":1,"pageTitle":"Frame Debugger - SpectorJS","url":"/docs/playable/code/luna-in-browser/spector-js#spector-argument","content":"When running a develop build or a specific ad network build, you can add the ?spector=1 argument at the end of the URL in order to use the frame debugger.  Then press the red record button at the top and wait a moment. A panel with information about what is being drawn in a single frame will appear.  ","version":"Next","tagName":"h2"},{"title":"Insert Custom JavaScript at Runtime","type":0,"sectionRef":"#","url":"/docs/playable/code/js-code-insertions","content":"","keywords":"read write playable luna javascript insert inject c# code","version":"Next"},{"title":"Custom Javascript Code in LunaPlaygroundField​","type":1,"pageTitle":"Insert Custom JavaScript at Runtime","url":"/docs/playable/code/js-code-insertions#custom-javascript-code-in-lunaplaygroundfield","content":"You can use Bridge.Script.Write() to insert custom JS at runtime. Let's create a new C# script, and attach it to a GameObject in the scene. Initialise a public string and set it to be a JS function in string type, for example: public string codeMain = &quot;console.log(\\&quot;Test\\&quot;)&quot;; Create an Awake function where we'll call the Bridge API method Write, and wrap it in a preprocessor directive (#if UNITY_LUNA) like in the following example: [ LunaPlaygroundField( &quot;My Code&quot;, 0, &quot;Additional Code&quot; ) ] public string codeMain = &quot;console.log(\\&quot;Test\\&quot;)&quot;; private void Awake() { #if UNITY_LUNA Bridge.Script.Write( &quot;let fn = Function(this.codeMain);&quot; ); Bridge.Script.Write( &quot;fn();&quot; ); #endif } As you can see, the argument in the Write method is currently a string. This will then get converted and executed as JS code in the Luna build. Create a Develop Build with the Dev Environment activated. The codeMain variable is set as a LunaPlaygroundField and it will appear in the Dev Enviroment and Creative Suite as the following:  In this field, you can now write custom Javascript. In this example, the custom code in the field is called when the playable starts (**`Test`** should get printed in the browser's console).  ","version":"Next","tagName":"h2"},{"title":"Call external JS via Bridge API​","type":1,"pageTitle":"Insert Custom JavaScript at Runtime","url":"/docs/playable/code/js-code-insertions#call-external-js-via-bridge-api","content":"If you include External JavaScript libraries into your project, you can use Bridge.Script.Write() to execute their code. For example, if we add this simple JS script: function printNumber(n) { console.log(n); }  as an external JavaScript library:  You can then call the external library methods by using Bridge API:  public string codeMain = &quot;printNumber(5)&quot; private void Awake() { #if UNITY_LUNA Bridge.Script.Write( &quot;let fn = Function(this.codeMain);&quot; ); Bridge.Script.Write( &quot;fn();&quot; ); #endif }  ","version":"Next","tagName":"h2"},{"title":"Enabling Video Audio","type":0,"sectionRef":"#","url":"/docs/playable/code/luna-in-browser/video-audio","content":"","keywords":"video audio browser playable luna","version":"Next"},{"title":"How to workaround this via code​","type":1,"pageTitle":"Enabling Video Audio","url":"/docs/playable/code/luna-in-browser/video-audio#how-to-workaround-this-via-code","content":"If your video needs to be played when the user isn't tapping, you can instead Play() the video at some point when user does tap the screen, perhaps when the playable first starts, and then call Pause() immediately after. Then once the video is ready to play, you can resume by calling Play() again. The video component game object does not need to be active for this to work ","version":"Next","tagName":"h2"},{"title":"Luna Terrain Exporter","type":0,"sectionRef":"#","url":"/docs/playable/code/luna-terrain-exporter","content":"","keywords":"playable luna terrain exporter unity","version":"Next"},{"title":"Overview​","type":1,"pageTitle":"Luna Terrain Exporter","url":"/docs/playable/code/luna-terrain-exporter#overview","content":"The Luna Terrain Exporter is a tool that allows you to produce .OBJ format versions of your terrain in Unity. This intern allows Playable Plugin developers to use this .OBJ file, along with the textures, to replace the unsupported terrain environment. The tool is available to all Luna customers as a free Unity package in our Community Github. ","version":"Next","tagName":"h2"},{"title":"How to get started​","type":1,"pageTitle":"Luna Terrain Exporter","url":"/docs/playable/code/luna-terrain-exporter#how-to-get-started","content":"Download &amp; then import the Luna Terrain Exporter into your Unity projectMake sure that the textures used for your terrain have the 'Read/Write Enabled' setting set to true in their import settings  Open the Terrain Exporter via the Unity Tools tab (the same place that Playable Plugin is located)  If Terrain Exporter displays &quot;No terrain found&quot; please make sure you have an active terrain in your Scene 4. Configure the [settings](#settings) to suit your needs (we recommend either 'Quarter' or 'Eighth' for the Resolution setting) 5. Hit Export and a `.OBJ`, material, and `.png` will be created in a numbered folder at 'Assets/Luna Terrain Exporter/Exported files'  You can now replace the terrain in your scene with this object (You will need to apply the exported material to the object after dragging it in) ","version":"Next","tagName":"h2"},{"title":"Settings & Options​","type":1,"pageTitle":"Luna Terrain Exporter","url":"/docs/playable/code/luna-terrain-exporter#settings--options","content":"","version":"Next","tagName":"h2"},{"title":"Resolution​","type":1,"pageTitle":"Luna Terrain Exporter","url":"/docs/playable/code/luna-terrain-exporter#resolution","content":"Set the resolution of the terrain vertices by fractions. FullHalfQuarter (recommended)Eighth (recommended)Sixteenth ","version":"Next","tagName":"h3"},{"title":"Terrain texture resolution​","type":1,"pageTitle":"Luna Terrain Exporter","url":"/docs/playable/code/luna-terrain-exporter#terrain-texture-resolution","content":"Resolution size of the terrain textures in pixels. 512x5121024x10242048x2048 ","version":"Next","tagName":"h3"},{"title":"Tiling of the texture​","type":1,"pageTitle":"Luna Terrain Exporter","url":"/docs/playable/code/luna-terrain-exporter#tiling-of-the-texture","content":"This affects the amount of tiles within the terrain, if set too low the texture will appear stretched, too high and you may begin to lose detail. int value (Minimum of 1, no max value) ","version":"Next","tagName":"h3"},{"title":"Limitations​","type":1,"pageTitle":"Luna Terrain Exporter","url":"/docs/playable/code/luna-terrain-exporter#limitations","content":"As of now we currently only support the use of 4 or less textures in conjunction with this toolVertices need to be under 65k, lower the Resolution setting to avoid this preventing exportationCurrently we cannot export terrain with holes ","version":"Next","tagName":"h2"},{"title":"Scripting Defines","type":0,"sectionRef":"#","url":"/docs/playable/code/scripting-defines","content":"","keywords":"scripting defines preprocess playable luna","version":"Next"},{"title":"Example​","type":1,"pageTitle":"Scripting Defines","url":"/docs/playable/code/scripting-defines#example","content":"#if UNITY_2017_1_OR_NEWER //...Your Awesome Code...// #endif  If code wrapped with scripting defines exists in your code, which is required in your Luna build you should also include them in the `Scripting Defines` tab in the Luna UI. Otherwise they wont be compiled. Then include the name space inside the Luna Window. Navigate to the Code section and the Scripting Defines tab.  Although you are able to select which ones are to be picked up during compilation, Luna implements scripting defines default namespaces that are pre-included in the Luna engine: UNITY_LUNA; UNITY_BUPC; UNITY_5_4_OR_NEWER; Luna respects specific Unity version for scripting defines. Let's use an example to fully undestand it: While the UNITY_2018 will function if you are running Unity 2018, this will be skipped when running another version like Unity 2019. ","version":"Next","tagName":"h3"},{"title":"Special Characters Warning","type":0,"sectionRef":"#","url":"/docs/playable/code/special-characters-warning","content":"Special Characters Warning A project path containing special characters can cause errors, whether when opening the project, initializing packages, or building. Different operating systems allow different characters. For example, Windows does not allow \\/:*?&quot;&lt;&gt;| set for naming files and folders. In Linux &quot;:&lt;&gt;|*?\\r\\n, in MacOS /:. However, these restrictions can sometimes be circumvented by using console utilities to create folders or files. There is a double chance of error when special characters are used in the project path and a Luna package is placed inside, and a triple chance of error when special characters are used in the package name as well. A few restrictions are also in place regarding the paths that can be used in C# (Win32) and through the tools that are used to build the project. In connection with the above, we want to warn users against unexpected errors related to the paths to the project and package. To make it easier for you to work with Luna and Unity projects in general, we have compiled a list of characters we know are most likely to cause problems: $~;'&quot;&lt;&gt;|\\*?{}\\r\\n\\f\\cK. This does not mean that the use of these characters is absolutely not allowed, but only informs the user that using them can create problems. At the moment, we just check the project (and package) path for these special characters during initialization, and if they are found, a popup like this is shown:","keywords":"luna classes c# monobehaviour names characters special path paths","version":"Next"},{"title":"Unity Plugins - Overview","type":0,"sectionRef":"#","url":"/docs/playable/code/unity-plugins/overview","content":"","keywords":"unity plugin supported supports playable luna","version":"Next"},{"title":"Validated supported plug-ins:​","type":1,"pageTitle":"Unity Plugins - Overview","url":"/docs/playable/code/unity-plugins/overview#validated-supported-plug-ins","content":"Plugin\tVersionTextMeshPro\t3.0.6 (Unity 2020 and newer versions), 2.0.0 (Unity 2019) Spine\tup to 4.2 beta DOTween\tup to 1.2.705 Zenject\t8.0.0 Cinemachine\tup to 2.4.0 LeanTween A* Newtonsoft (limited support)\t  info These plugins have been validated by Luna. Many more plugins may be supported but not included in this list. ","version":"Next","tagName":"h3"},{"title":"Luna Community","type":0,"sectionRef":"#","url":"/docs/playable/getting-started/community","content":"Luna Community The Luna github is designed to help provide you with support, examples and updates on Luna products. The Luna Community GitHub contains projects, samples and assets to our users. Here you can find example project, free-to-use assets and examples of techniques and approaches that you can use in your playable ads.","keywords":"community forum github playable luna","version":"Next"},{"title":"Zenject","type":0,"sectionRef":"#","url":"/docs/playable/code/unity-plugins/zenject","content":"Zenject Luna supports Zenject up to version 8.0.0. Luna doesn't support DLL versions of plugins so it is required to include the C# source files inside your project. This guide is for developers who are using Zenject in their Unity projects as DLLs. Download or clone the Zenject source code on GitHub.Move the Zenject source files located inside Zenject-master &gt; UnityProject &gt; Assets &gt; Plugins &gt; Zenject outside Zenject-master. You will receive some console errors that need resolving but don't worry, these are caused by DLL usages requests within the plugin. To clear the errors you will need to remove then replace Zenject &gt; Source &gt; Usage folder contents (containing the DLL) with the contents of Zenject-master &gt; AssemblyBuild &gt; Zenject-usage with is the source files. Remove the DLL usage: Move the source usage Once this is done you can remove the Zenject-master from your project. You can also remove optionalExtras from the Zenject folder. The final step will be an invisible build error caused in Luna. This error is caused by a specific script called CachedProvider.cs, and the pre-processor directives (#if and #endif), which can cause build errors in Luna. To resolve the build compilation failure you should comment out all pre-processors from this script which will allow for a successful build. Example: List&lt;object&gt; _instance; // #if ZEN_MULTITHREADING readonly object _locker = new object(); // #else bool _isCreatingInstance; // #endif You may need to restart Unity as some errors might be present due to cache.","keywords":"zenject playable luna","version":"Next"},{"title":"Custom Preloader Logo","type":0,"sectionRef":"#","url":"/docs/playable/custom-logo","content":"Custom Preloader Logo Follow these steps to change the preloader logo of your playable: Before you build the project, open your luna.json file and look for the &quot;preloader&quot; field.Insert your custom sprite path into the logo field as shown in the example below: &quot;preloader&quot;: { &quot;active&quot;: true, &quot;icon&quot;: &quot;&quot;, &quot;logo&quot;: &quot;Assets/Sprites/MyLogo.jpg&quot;, // Make sure you change this field &quot;backgroundHexColor&quot;: &quot;#914AFA&quot; // Edit this field to change the background color }, Return back to Unity and build the project.The custom logo will appear when opening the build in the browser. The recommended dimension for custom logos are 100x100 pixels. The Luna export process never compresses logos, so please do not use heavy-size sprites. You can also remove the logo by adding &quot;disabled&quot; in logo field.","keywords":"playable luna logo custom","version":"Next"},{"title":"TextMeshPro","type":0,"sectionRef":"#","url":"/docs/playable/code/unity-plugins/tmp","content":"","keywords":"textmesh pro tmp playable luna","version":"Next"},{"title":"Installing TMP​","type":1,"pageTitle":"TextMeshPro","url":"/docs/playable/code/unity-plugins/tmp#installing-tmp","content":"The TMP package is included with the Unity Editor so there is no installation requirement. However, you do need to add the TMP Essential Resources in order for it to work.   ","version":"Next","tagName":"h3"},{"title":"Including Resources​","type":1,"pageTitle":"TextMeshPro","url":"/docs/playable/code/unity-plugins/tmp#including-resources","content":"TMP loads font settings via the Resources folder in Unity, and Luna's default export settings excludes this folder from builds. To include the Resources folder please tick the box next to &quot;Resources&quot; under the Export type section in the Basic Settings tab (Settings -&gt; Basic).  ","version":"Next","tagName":"h3"},{"title":"TMP Versions Supported in Luna​","type":1,"pageTitle":"TextMeshPro","url":"/docs/playable/code/unity-plugins/tmp#tmp-versions-supported-in-luna","content":"Supported Versions Unity Version\tTMP Version2019.4+\t2.0.0 2020.1+\t3.0.0 or 3.0.6 2020.3+\t3.0.6 2021.3\t3.0.6 We do not currently support 2.1.0 As we do not support the default version of TMP, we have listed some workarounds to get the right TMP version with Luna:  ","version":"Next","tagName":"h3"},{"title":"Project in Unity 2018.4+ - Install 1.3.0​","type":1,"pageTitle":"TextMeshPro","url":"/docs/playable/code/unity-plugins/tmp#project-in-unity-20184---install-130","content":"Unity 2018.4 have been deprecated and no longer supported by Luna.  Install TMP for Unity 2018.4 If you are using Unity 2018, navigate to the Package Manager window (Window → Package Manager). Find TextMeshPro and select it.From here change the version to install in the top right corner of the window and select &quot;1.3.0&quot;. After this has been updated you are good to go!   ","version":"Next","tagName":"h3"},{"title":"Project in Unity 2019.4+ - Install 2.0.0​","type":1,"pageTitle":"TextMeshPro","url":"/docs/playable/code/unity-plugins/tmp#project-in-unity-20194---install-200","content":"If you are using Unity 2019, you will need to modify the package manifest.json file.Open the manifest and find com.unity.textmeshpro and change the corrispondent number to 2.0.0.  After this has been updated you are good to go!   ","version":"Next","tagName":"h3"},{"title":"Project in Unity 2020.3+ and newer versions - Install 3.0.6​","type":1,"pageTitle":"TextMeshPro","url":"/docs/playable/code/unity-plugins/tmp#project-in-unity-20203-and-newer-versions---install-306","content":"With Unity 2020 you can use TMP version 3.0.0 or 3.0.6 When the project has opened, navigate to the Package Manager window (Window → Package Manager). From here find TextMeshPro and open the drop down via clicking the arrow to the left (circled below).  To make sure you got the correct version of TMP you will need to modify the package manifest.json. Open the manifest and find com.unity.textmeshpro and change the corrispondent number to 3.0.6.  Once you save the file, your version will be correctly updated. You can double check if the changes have gone through in the Package Manager (image below).   Now you're all good to go!  Upgrading project to Unity 2020 and newer versions​ Note: Updating to a newer version of Unity can cause unforeseen problems in your project, it is recommended that you create a backup before doing this. To update your project to Unity 2020 first open Unity Hub and navigate to the project you wish to upgrade. Under the 'Unity Version' column select the drop-down arrow to the right of your project's version number, and select a Unity 2020 version you have installed. Note: The newer the Unity 2020 version, the more likely it is that it will contain new features that we do not yet support in Luna. Making use of such features will cause errors in your Luna build. Please keep this in mind when using Unity 2020 with Luna, or consider using previous versions of Unity.  After selecting your desired version, click confirm on the warning window that will pop up. Your project will update itself to the version selected and open. ","version":"Next","tagName":"h3"},{"title":"Using the Command Line","type":0,"sectionRef":"#","url":"/docs/playable/command-line","content":"","keywords":"command line terminal console playable luna","version":"Next"},{"title":"Using Command Line​","type":1,"pageTitle":"Using the Command Line","url":"/docs/playable/command-line#using-command-line","content":"","version":"Next","tagName":"h2"},{"title":"Sign into the Plugin​","type":1,"pageTitle":"Using the Command Line","url":"/docs/playable/command-line#sign-into-the-plugin","content":"To use the command line with the Luna Package you must be signed into the Luna Plugin in Unity. Not doing so will produce a “Authentication failed” error when trying to run the Jake tasks. ","version":"Next","tagName":"h3"},{"title":"Set the Luna package as your working directory​","type":1,"pageTitle":"Using the Command Line","url":"/docs/playable/command-line#set-the-luna-package-as-your-working-directory","content":"After signing in you now need to set the package as your working directory. Example: $ cd Projects/LunaPackages/1.11.0  If the directory is set correctly, then listing the folder's contents using ls will look like this: $ ls config.json engine jake pipeline scripts tools  ","version":"Next","tagName":"h3"},{"title":"Set your project path​","type":1,"pageTitle":"Using the Command Line","url":"/docs/playable/command-line#set-your-project-path","content":"Now you need to set the project path for your current Unity project. The command differs slightly for Mac and Windows OS. Mac: $ export PROJECT_PATH=/d/Projects/Studio.Game  Windows: &gt; set PROJECT_PATH=C:/Projects/Studio.Game  ","version":"Next","tagName":"h3"},{"title":"Using Jake tasks to create a Develop build​","type":1,"pageTitle":"Using the Command Line","url":"/docs/playable/command-line#using-jake-tasks-to-create-a-develop-build","content":"Once your path is set, you will be able to us Jake tasks to execute the equivalent exporting stages from the Playable Plugin Unity UI. Mac: $ ./jake project:build  Windows: &gt; tools\\node\\win64\\node.exe pipeline\\node_modules\\jake\\bin\\cli.js -f pipeline\\Jakefile.js project:build  This will begin building a develop build of the project using the settings you have chosen in the Playable Plugin Unity UI. Once complete, you can run this in the browser as normal. ","version":"Next","tagName":"h3"},{"title":"Using Jake tasks to create a Creative Suite build​","type":1,"pageTitle":"Using the Command Line","url":"/docs/playable/command-line#using-jake-tasks-to-create-a-creative-suite-build","content":"You can also create a Creative Suite build using Jake tasks, which will compile all the relevant assets and code into a Creative Suite archive. Mac: $ ./jake project:build TARGET_PLATFORM=playground  Windows: &gt; tools\\node\\win64\\node.exe pipeline\\node_modules\\jake\\bin\\cli.js -f pipeline\\Jakefile.js project:build TARGET_PLATFORM=playground  ","version":"Next","tagName":"h3"},{"title":"Creating a Size Breakdown report​","type":1,"pageTitle":"Using the Command Line","url":"/docs/playable/command-line#creating-a-size-breakdown-report","content":"You can also generate a size breakdown of your Luna builds by using add-ons in your Jake tasks. Including STATS in the build command will add a size breakdown of the compiled assets. You may use the STATS options, 1 and 2, to display a less and more detailed report respectively. Mac: $ ./jake project:build STATS=1  Windows: &gt; tools\\node\\win64\\node.exe pipeline\\node_modules\\jake\\bin\\cli.js -f pipeline\\Jakefile.js project:build STATS=1  STATS=1 : A shortened report.  STATS=2 : Full report  ","version":"Next","tagName":"h3"},{"title":"The Process Sequence​","type":1,"pageTitle":"Using the Command Line","url":"/docs/playable/command-line#the-process-sequence","content":"You also have more discrete control over which part of the Luna export process you run. For example, if you make a change to your user code but not to your assets, you can start from the code:bundle command (code conversion). When you run project:build, you are effectively executing the following commands in order: ./jake unity:export - Exports all assets from Unity project./jake assets:bundle - Compiles and compresses assets./jake code:bundle - Bridge engine compiles code from C# to JS./jake package:bundle - Bundles into HTML package As stated, All the above comments can be replaced by ./jake project:build. ","version":"Next","tagName":"h2"},{"title":"More commands​","type":1,"pageTitle":"Using the Command Line","url":"/docs/playable/command-line#more-commands","content":"In addition, Luna provides also other commands that could help you with the development of your project. ./jake project:deploy Use this command to run the full project build. You can also use it to upload the build directly into Creative Suite by using different parameters. ./jake project:deploy USER_EMAIL=your.email@domain.com USER_TOKEN=%yourToken% TARGET_PLATFORM=playground Your user token can be found under Settings → Account, then click on the Copy token button. It will automatically save in your clipboard.  ./jake project:re Use this command to re-export the project without having to rebuild the code again. ","version":"Next","tagName":"h2"},{"title":"FAQ","type":0,"sectionRef":"#","url":"/docs/playable/faq","content":"","keywords":"playable plugin luna faq","version":"Next"},{"title":" General ​","type":1,"pageTitle":"FAQ","url":"/docs/playable/faq#-general-","content":"","version":"Next","tagName":"h2"},{"title":" Does Playable Plugin support all operating systems? ​","type":1,"pageTitle":"FAQ","url":"/docs/playable/faq#-does-playable-plugin-support-all-operating-systems-","content":"Playable Plugin is a plugin for Unity, and can be run on macOS and Windows. ","version":"Next","tagName":"h3"},{"title":"Which versions of Unity do you support?​","type":1,"pageTitle":"FAQ","url":"/docs/playable/faq#which-versions-of-unity-do-you-support","content":"We currently support all versions of Unity Personal or Unity Pro from 2020.3.16 up to 2021.3 inclusively. (This does not including alpha or beta releases) ","version":"Next","tagName":"h3"},{"title":" Does Playable Plugin use WebGL for rendering?​","type":1,"pageTitle":"FAQ","url":"/docs/playable/faq#-does-playable-plugin-use-webgl-for-rendering","content":"Yes, the Playable Plugin engine use WebGL1.0 as graphics library. As our goal is to support all the variety of devices (including low end devices), we don't use WebGL2.0 as it's support is limited. ","version":"Next","tagName":"h3"},{"title":" What versions of C# language does Playable Plugin support? ​","type":1,"pageTitle":"FAQ","url":"/docs/playable/faq#-what-versions-of-c-language-does-playable-plugin-support-","content":"With the first iteration of Luna Compiler we fully support C# 7.0 features and earlier. We have select support for some select features from 7.1+. A list of which can be found here.). To be able to convert C# code to JS we require .NET 4.7 or later installed on machine. With Luna Compiler V2 we support up to C# 9.0 with some limitations. A list of which can be found here.). ","version":"Next","tagName":"h3"},{"title":" What platforms can run Playable's creatives? ​","type":1,"pageTitle":"FAQ","url":"/docs/playable/faq#-what-platforms-can-run-playables-creatives-","content":"Playable's creatives function in a web browser and can be run on every major OS: Android, iOS, Windows, macOS. ","version":"Next","tagName":"h3"},{"title":" Does Playable Plugin use the WebGL build target in Unity?​","type":1,"pageTitle":"FAQ","url":"/docs/playable/faq#-does-playable-plugin-use-the-webgl-build-target-in-unity","content":"No, Playable Plugin does not interact with the build target pipeline of Unity, nor does it use the Unity Tiny package. Our exporter (as part of the plugin) acts independently to create a custom C# solution file and assets set which is then run on the Playable Plugin engine. ","version":"Next","tagName":"h3"},{"title":" How big is the Playable Plugin Engine?​","type":1,"pageTitle":"FAQ","url":"/docs/playable/faq#-how-big-is-the-playable-plugin-engine","content":"The Playable Plugin engine is ~650kb compressed. This base footprint can be decreased dramatically using Runtime Analysis code stripping. ","version":"Next","tagName":"h3"},{"title":" What happens at each of the 4 steps of Playable Plugin's export process?​","type":1,"pageTitle":"FAQ","url":"/docs/playable/faq#-what-happens-at-each-of-the-4-steps-of-playable-plugins-export-process","content":"Unity Export: gather all resources from the Unity project and prepares it for the Assets Preprocess stage.Assets Preprocess: compression is applied to the assets, as well as font bitmap generation, applied custom scripts, and essentially any other asset processing needed.Code Conversion: convert from C# to JavaScript.Compilation: Compile everything, and depending on the ad platform convert to the required files. ","version":"Next","tagName":"h3"},{"title":"I am trying to export a playable with Playable Plugin, but I get compilation errors. What should I do? ​","type":1,"pageTitle":"FAQ","url":"/docs/playable/faq#i-am-trying-to-export-a-playable-with-playable-plugin-but-i-get-compilation-errors-what-should-i-do-","content":"Check ProjectDiagnostics section to get more info about issues. Also you can check our documentation for troubleshooting steps. ","version":"Next","tagName":"h3"},{"title":"I have exported a playable but the build size is too big. What can I do? ​","type":1,"pageTitle":"FAQ","url":"/docs/playable/faq#i-have-exported-a-playable-but-the-build-size-is-too-big-what-can-i-do-","content":"Please review our documentation on optimisation. ","version":"Next","tagName":"h3"},{"title":"The playable runs smoothly in Creative Suite, but lags when on my phone. What can I do?​","type":1,"pageTitle":"FAQ","url":"/docs/playable/faq#the-playable-runs-smoothly-in-creative-suite-but-lags-when-on-my-phone-what-can-i-do","content":"This can happen due to performance differences between devices. We recommend running the standalone playable or develop build in Google Chrome and using the inbuilt profiling tools. You can also review our documentation for improving startup time. ","version":"Next","tagName":"h3"},{"title":" Do the App Store URLs set in the Playable Plugin window get overridden by the ones set in App Settings in Creative Suite? ​","type":1,"pageTitle":"FAQ","url":"/docs/playable/faq#-do-the-app-store-urls-set-in-the-playable-plugin-window-get-overridden-by-the-ones-set-in-app-settings-in-creative-suite-","content":"The URLs that are set set within the Playable Plugin window in Unity will take priority over the ones set in the App settings in Creative Suite.  ","version":"Next","tagName":"h3"},{"title":" Playable Plugin Features ​","type":1,"pageTitle":"FAQ","url":"/docs/playable/faq#-playable-plugin-features-","content":"","version":"Next","tagName":"h2"},{"title":" Do you support all Unity APIs?​","type":1,"pageTitle":"FAQ","url":"/docs/playable/faq#-do-you-support-all-unity-apis","content":"The Unity engine has a vast number of APIs, many of which are not required for playable ads (i.e. Editor scripts) or not feasible for use on the web (i.e. native features). Considering this, the Playable Plugin engine supports all of the major and most commonly used components and APIs for playable ads. Over time, we plan to support more and more of these. ","version":"Next","tagName":"h3"},{"title":" Do you support Async/Await? ​","type":1,"pageTitle":"FAQ","url":"/docs/playable/faq#-do-you-support-asyncawait-","content":"Yes, but without multithreading due to limitations of the web platform. Check out our documentation on Async/Await. ","version":"Next","tagName":"h3"},{"title":" Can I use videos within Playable Plugin? ​","type":1,"pageTitle":"FAQ","url":"/docs/playable/faq#-can-i-use-videos-within-playable-plugin-","content":"Yes, Playable Plugin supports the Video component in Unity. We currently support VideoRenderMode.MaterialOverride and VideoRenderMode.RenderTexture(from Playable Plugin 3.6.0). ","version":"Next","tagName":"h3"},{"title":" What do I do if my game uses an unsupported component or API in Unity?​","type":1,"pageTitle":"FAQ","url":"/docs/playable/faq#-what-do-i-do-if-my-game-uses-an-unsupported-component-or-api-in-unity","content":"If you are using an unsupported component of API, there we suggest the following options: Firstly, consider whether this feature is necessary for a playable ad. Will it enhance the experience? Will it cause performance issues? If it's not required, then simply remove its use.Find a suitable workaround using a supported component or API. In Unity, there are multiple ways to achieve the same results, and this is often the quickest and most straightforward approach.If none of the above are possible, email support@lunalabs.uk with details on the component/API you wish to use and what you have tried so far. ","version":"Next","tagName":"h3"},{"title":" Do you support the NGUI library? ​","type":1,"pageTitle":"FAQ","url":"/docs/playable/faq#-do-you-support-the-ngui-library-","content":"NGUI is not officially supported by Playable Plugin. We recommend changing to the UI to UGUI libraries to avoid future bugs and complications. ","version":"Next","tagName":"h3"},{"title":" How do I request a feature?​","type":1,"pageTitle":"FAQ","url":"/docs/playable/faq#-how-do-i-request-a-feature","content":"Please email support@lunalabs.uk. In the coming months we will be launching a feedback resource for our partners.  ","version":"Next","tagName":"h3"},{"title":" Playables ​","type":1,"pageTitle":"FAQ","url":"/docs/playable/faq#-playables-","content":"","version":"Next","tagName":"h2"},{"title":" Which ad networks are supported ​","type":1,"pageTitle":"FAQ","url":"/docs/playable/faq#-which-ad-networks-are-supported-","content":"Currently, we support the following ad networks directly from Creative Suite: ApplovinFacebookironSourceMintegralTencentTikTokUnity AdsVungle ","version":"Next","tagName":"h3"},{"title":" Do I need to handle device orientation ​","type":1,"pageTitle":"FAQ","url":"/docs/playable/faq#-do-i-need-to-handle-device-orientation-","content":"We recommend that you build a responsive playable ad, and ensure that the UI and other elements scale or adapt accordingly. Please review the guide here for more information. ","version":"Next","tagName":"h3"},{"title":" My Playable is unresponsive when testing with a touch screen laptop, what do I do? ​","type":1,"pageTitle":"FAQ","url":"/docs/playable/faq#-my-playable-is-unresponsive-when-testing-with-a-touch-screen-laptop-what-do-i-do-","content":"Disable your touchscreen via device manager and restart the machine. ","version":"Next","tagName":"h3"},{"title":" Why doesn't audio play until user clicks?​","type":1,"pageTitle":"FAQ","url":"/docs/playable/faq#-why-doesnt-audio-play-until-user-clicks","content":"Autoplay is a browser limitation, and defined at a user level. Please refer to this policy update for more information. Therefore, when testing your playable ad you may find that audio doesn't start automatically. However, this may not be the case in when the ad is displayed by the ad network SDK. We therefore recommend you test or consult with the ad network for specific behaviour. ","version":"Next","tagName":"h3"},{"title":" Are the texture's properties in the Unity inspector used by Playable Plugin? ​","type":1,"pageTitle":"FAQ","url":"/docs/playable/faq#-are-the-textures-properties-in-the-unity-inspector-used-by-playable-plugin-","content":"Playable Plugin will prioritise the use of its own compression and sizing settings. However, if compression is disabled, it will only consider Unity's settings. Click here for more info about texture optimisation. ","version":"Next","tagName":"h3"},{"title":"Project Diagnostics","type":0,"sectionRef":"#","url":"/docs/playable/code/project-diagnostics","content":"","keywords":"playable luna","version":"Next"},{"title":"When to use it​","type":1,"pageTitle":"Project Diagnostics","url":"/docs/playable/code/project-diagnostics#when-to-use-it","content":"Project Diagnostics aims to streamline the debugging experience with Playable Plugin: After building the diagnostics window will display any pertinent warning/error messages based on that build's outcome. It's also a useful way to view the compilation status without having to compile your project or switch over to your IDE. These messages can be double-clicked to take you to where in your scripts we believe the problem is originating. You can also click on the error code at the beginning of diagnostic messages to be taken to the relevant documentation page here, which will in turn direct you to possible fixes. ","version":"Next","tagName":"h2"},{"title":"How it works​","type":1,"pageTitle":"Project Diagnostics","url":"/docs/playable/code/project-diagnostics#how-it-works","content":"To analyse the solution, Diagnostics will construct the solution file in the same way as the build process but rather than compiling it to JavaScript, we instead analyse the project with Roslyn to quickly obtain all compilation information. Diagnostic logs are grouped by categories: Category\tDescriptionAd Network\tThis category will give you an indication if the current project is compatible with all ad network requirements, such as the required API call are used. Fixing all of these issues mean your playable ad will be accepted by all of our supported ad networks. Best Practises\tThis category checks for our best practises, such as usage of LunaPlaygroundFields or Custom Events API's. Our data has shown that a playable implementing all of our best practises perform better on ad networks. Core Functionality\tThis category checks for issues that can break the playable ad for unexpected behaviour. For that reason, it is extremely important to fix these issues. They may include compiler errors or usage of a reserved keyword which is known to break the playable ad during runtime. Technical Performance\tThis category checks for issues related to runtime performance, which might break the playable during runtime. Our data has shown that runtime performance is also related to a better performing playable ad, and in some cases, ad networks reject the playable if the runtime performance is too low. Any errors you see in this panel regarding the UnityEngine namespace, actually refer to our version of UnityEngine and therefore highlight compatibility issues between your project and Luna. ","version":"Next","tagName":"h2"},{"title":"Diagnostics UI guide​","type":1,"pageTitle":"Project Diagnostics","url":"/docs/playable/code/project-diagnostics#diagnostics-ui-guide","content":"","version":"Next","tagName":"h2"},{"title":"1. Build button options & Previewing​","type":1,"pageTitle":"Project Diagnostics","url":"/docs/playable/code/project-diagnostics#1-build-button-options--previewing","content":"At the top left of the Diagnostics window is the 'Build project' button.  This button also provides a drop-down of different compilation options: Build project: This will begin the process of creating a develop build. (You can preview a develop build in your browser via the post-build prompt options, or the 'Start server' button near the top right of the window)Build project (asset only): This option is available from Playable Plugin 3.3.0. It will be automatically selected when the Optimize export with Caching option is enabled and any asset of your project including Luna settings was modified.Build project (code only): This option is available from Playable Plugin 3.3.0. It will be automatically selected when the Optimize export with Caching option is enabled, your code was modified or you made changes to settings in Code section.Assets diagnostics: This will recompile only your playable's assets, and filter the logs to only pertain to said assets.Code diagnostics: This will recompile only your playable's custom scripts, and filter the logs to only pertain to said scripts.Open in Browser: This option is available from Playable Plugin 4.2.0. It will be automatically selected when the Optimize export with Caching option is enabled and you havent done any changes in your project since your last succeeded develop build. By default, the button will be set to 'Build project'. ","version":"Next","tagName":"h3"},{"title":"2. Optimize export with Caching​","type":1,"pageTitle":"Project Diagnostics","url":"/docs/playable/code/project-diagnostics#2-optimize-export-with-caching","content":"This functionality is automatic. Depending on what is changed in your project (code or assets), if the Optimize export with Caching checkbox is activated, it will change the build type to either export code, or assets only. Starting from Playable Plugin 4.2.0 the Open in Browser button will replace Build Develop button if you havent made any changes to your project, but if you did and cache gets dirty, you can revert those changes to bring back previous state of the Build button. After building develop Open In Browser button automatically shows up as below:  Exclude some scripts in Code section:  Build button changes to Build Develop (Code only):  If you untick excluded scripts back, Build button changes back to its previous state too, in our case to Open In Browser. Revert detection doesnt work with Unity Assets or C# code, youll have to rebuild Develop. Your cache gets reset after updating to newer version of Playable Plugin. What changes doesnt affect cache? Creative Suite related changes doesnt affect local cache: Runtime Analysis (both for Code and Shaders)Settings in Build &amp; upload/Upload to Creative Suite tabAccount settings in Settings/Account tabPlatform specific settings in Settings/Ad Network (Global settings affect cache) ","version":"Next","tagName":"h3"},{"title":"3. Last Build & Success Indicator​","type":1,"pageTitle":"Project Diagnostics","url":"/docs/playable/code/project-diagnostics#3-last-build--success-indicator","content":"Project Diagnostics also displays at what date and time you last built (this includes builds that fail). This handy for keeping track of if you've applied your recent project changes to your Luna build. (If you don't see a last build indicator it likely means you have yet to build)  A build success indicator is also present to the left of the 'Last Build' information, in the form of a colored circle that will change color based on the outcome of the build: Green: build was successfulRed: build failed For more information on what happens at each step of the build process click here. ","version":"Next","tagName":"h3"},{"title":"4. Double-click to Open​","type":1,"pageTitle":"Project Diagnostics","url":"/docs/playable/code/project-diagnostics#4-double-click-to-open","content":"To open the file a diagnostic's error is pointing to, simply double-click on the error log. This will open the Unity script at the line where the error is stemming from. (Example of this process below)  ","version":"Next","tagName":"h3"},{"title":"5. Error Codes​","type":1,"pageTitle":"Project Diagnostics","url":"/docs/playable/code/project-diagnostics#5-error-codes","content":"Diagnostic logs also come with unique error codes attached to them. These codes link to pages here in the documentation, that will provide an explanation of the error type as well as steps to fix. You can easily find the corresponding docs page by selecting a log in the plugin (e.g. box 1 in the image below), and then clicking on the code in the log details section (e.g. in the image below: box 2, the underlined code).  ","version":"Next","tagName":"h3"},{"title":"Opening the Luna Solution​","type":1,"pageTitle":"Project Diagnostics","url":"/docs/playable/code/project-diagnostics#opening-the-luna-solution","content":"Instead of opening your Unity solution file, you can instead use the &quot;Open Luna Solution&quot; button in the code tab to open the solution file, regardless of whether there are any errors occurring. This is useful to be made aware unrecognised APIs as you code, saving changes in the Luna solution also saves them to your original Unity Scripts. NOTE: This is not the same as opening the script from within Unity, this will instead open the Luna Solution version. The scripts will use Luna's version of the Unity Engine, while also linking changes made here to their original Unity counterparts. ","version":"Next","tagName":"h2"},{"title":"How to analyse your project​","type":1,"pageTitle":"Project Diagnostics","url":"/docs/playable/code/project-diagnostics#how-to-analyse-your-project","content":"Load the project you wish to build with Playable Plugin in Unity. Ensure you have Playable Plugin installed and included in the project. To learn more about setting up Playable Plugin visit our Getting Started guide. Open the Playable Plugin window and navigate to the Develop section, and hit 'Build'. Issues with your project identified by the plugin will now appear in the window after the build finishes. The top table will contain issues grouped depending on the four predefined cateogories. Selecting a log will display more specific information at the bottom of the panel, including the full error message and a code snippet of the issue. You can double click on a log to open the relevant script at the line the message pertains to in the Luna Solution. You can also click on the error-code at the beginning of diagnostic messages to be taken to the relevant documentation page here. ","version":"Next","tagName":"h2"},{"title":"Where to find Legacy Project Diagnostics (1.13.0 and previous)​","type":1,"pageTitle":"Project Diagnostics","url":"/docs/playable/code/project-diagnostics#where-to-find-legacy-project-diagnostics-1130-and-previous","content":"CLICK HERE for legacy Project Diagnostics information To access Project Diagnostics in Playable plugin versions 1.12.0 and previous, you need to navigate to the Code section and select the Diagnostics tab. When to use it​ Diagnostics is a useful way to view the compilation status without having to compile your project or switch over to your IDE. Often you may want to simply exclude any code that won't be needed in your playable, simply open the Diagnostics (and hit 'Refresh') to see how these changes impact the compilation. The same is true for the other code related Luna features; With the 'Compile' button you can trigger a code compilation, this will recompile your code without executing a full build (exporting assets). This is useful when iterating on code changes since it will be faster than a 'Develop' build but means only code changes will be updated in the output. Opening the Luna Solution​ To open the file a diagnostic's error is pointing to, simply double-click on the error message shown in the window. This will open the script at the line where the error is stemming from: This is not the same as opening the script from within Unity, this will instead open the Luna Solution version. The scripts will use Luna's version of the Unity Engine, while also linking changes made here to their original Unity counterparts. Alternatively you can use the &quot;Open Luna Solution&quot; button at the bottom of the same window to open the solution file, regardless of whether there are any errors occurring. How it works​ To analyse the solution, Diagnostics will construct the solution file in the same way as the build process but rather than compiling it to JavaScript, we instead analyse the project with Roslyn to quickly obtain all compilation information. Diagnostic logs are grouped either by the CS error code, or by the file in which they occur, you can change this with the 'Group By' option. Any errors you see in this panel regarding the UnityEngine namespace, actually refer to our version of UnityEngine and therefore highlight compatibility issues between your project and Luna. How to analyse your project​ Load the project you wish to build with Playable Plugin in Unity. Ensure you have Playable Plugin installed and included in the project. To learn more about setting up Playable Plugin visit our Getting Started guide. Open the Playable Plugin window and navigate to the Code section, and the Diagnostics tab. Issues with your project identified by the plugin will now appear in the window. The top table will contain issues grouped depending on the 'Group By' option, selecting an entry here will populate the table below with the logs for that particular group. Selecting a log will display more specific information at the bottom of the panel, including the full error message and a code snippet of the issue. ","version":"Next","tagName":"h2"},{"title":"Sample Code","type":0,"sectionRef":"#","url":"/docs/playable/getting-started/sample-code","content":"","keywords":"sample game repository example walkthrough playable luna","version":"Next"},{"title":"Example Project​","type":1,"pageTitle":"Sample Code","url":"/docs/playable/getting-started/sample-code#example-project","content":"As an introduction to building creatives with Playable Plugin, we have provided a free sample 2D game in our Community GitHub. This project acts both as an example of what a fully prepared &amp; optimised project for Playable looks like, as well as a testing ground for implementing Playable Plugin yourself! We highly recommend trying out the walkthrough using the Dev Branch, as it will provide you with a great hands-on opportunity to learn how to use the Luna Plugin without needing to prepare a project from scratch yourself! When designing this game's UI &amp; end card we used some of our free assets, which can be downloaded for free from our community github. info You can download the project here in our community github!  ","version":"Next","tagName":"h2"},{"title":"How to make use of the project​","type":1,"pageTitle":"Sample Code","url":"/docs/playable/getting-started/sample-code#how-to-make-use-of-the-project","content":"As previously described there are two different use cases for this project, which is why there are two branches (one for each). How to choose: The Master branch of this project has already been modified to be exportable to Creative Suite as a lightweight editable playable. All you need to do is install the Luna Plugin, and un-comment the luna attributes code located in GameManager.cs and PauseManager.cs to access variables in Creative Suite. Then build for Creative Suite (Plugin UI -&gt; Creative Suite -&gt; Build &amp; upload). The Dev branch has been stripped of all changes made in the Master branch to work in Luna. Downloading this branch and following the steps on the repository's readme will provide you with a great hands-on opportunity to learn how to use the Luna Plugin. ","version":"Next","tagName":"h2"},{"title":"What you will learn​","type":1,"pageTitle":"Sample Code","url":"/docs/playable/getting-started/sample-code#what-you-will-learn","content":"If you choose to download the Dev branch and follow along the walkthrough detailed on the repo's readme, you will learn about the following: Setting up the Playable Plugin PluginMaking a develop build (How to select your scene &amp; fixing msbuild errors)Fixing Plugin Diagnostic Errors (Excluding files &amp; preprocessing lines)Size Breakdown Calculation &amp; ReductionBuilding &amp; Uploading to Creative Suite ","version":"Next","tagName":"h2"},{"title":"DOTween","type":0,"sectionRef":"#","url":"/docs/playable/code/unity-plugins/dotween","content":"","keywords":"dotween playable luna","version":"Next"},{"title":"DOTween Pro​","type":1,"pageTitle":"DOTween","url":"/docs/playable/code/unity-plugins/dotween#dotween-pro","content":"Source files for DOTween Pro are unfortunately not available and DLLs are currently unsupported. Its likely that DOTween Pro features will fail export because of this limitation. Find out more about the limitations of Playable Plugin here. ","version":"Next","tagName":"h2"},{"title":"DOShakeScale​","type":1,"pageTitle":"DOTween","url":"/docs/playable/code/unity-plugins/dotween#doshakescale","content":"The DOShakeScale function can cause Array out of range errors in Luna if floats are used for the 'duration' &amp; 'vibrato' inputs. To avoid this issue arising please ensure that 'duration' &amp; 'vibrato' are set to integers. ","version":"Next","tagName":"h2"},{"title":"Instructions for Luna versions older than 1.0.0​","type":1,"pageTitle":"DOTween","url":"/docs/playable/code/unity-plugins/dotween#instructions-for-luna-versions-older-than-100","content":"Click here Download or clone the DOTween source code on GitHub.In your Unity project remove the following from the DOTween root folder: DOTween.dllDOTween.mdbDOTween.xmlEditor folder After recompilation you will receive many errors - dont worry, these will be fixed in the next step! Inside the DOTween folder in Unity, create a new folder called “DOTweenSources”Navigate to the source code you downloaded in step 1, and move the scripts from the DOTween source folder (_DOTween.Assembly =&gt; DOTween) to the newly created folder. After importing the script, please delete the Properties folder, and DOTween.csproj. At this stage you will still have errors related to missing scripts. In your Resources folder, you will find the DOTweenSettings asset which will have a missing script. Simply drag the DOTweenSettings.cs file (Demigiant/DOTween/DOTweenSources/Core/DOTweenSettings.cs) into the missing script or locate it using the window. Please note, parts of the DOTween source code may include scripting defines which will cause Luna to ignore this code during compilation. You will need to add UNITY_LUNA to the define conditions in order to include this code in Luna. Finally, in the Playable Plugin window (Tools/Playable Plugin) open the Advanced tab and check the Additional Generic Check setting. Additional step for older versions of DOTween​ If you use an older version of DOTween (without the modules folder), then there is an additional required step. Navigate to the source code you downloaded in step 1, and move the following folders from the DOTween source folder (_DOTween.Assembly) to the DOTween folder in your Unity project: DOTween43DOTween46DOTween50 You must then delete the Properties folder, and DOTween.csproj from these three modules. ","version":"Next","tagName":"h2"},{"title":"Must-have features","type":0,"sectionRef":"#","url":"/docs/playable/getting-started/creative-guide/must-have-features","content":"","keywords":"design tips features playable luna","version":"Next"},{"title":"Portrait and Landscape support​","type":1,"pageTitle":"Must-have features","url":"/docs/playable/getting-started/creative-guide/must-have-features#portrait-and-landscape-support","content":"To maximize the reach of your playable, it should support and be optimized for both portrait and landscape. At the very least, all game UI elements (such as buttons, text) should adapt and fit within both orientations.  ","version":"Next","tagName":"h2"},{"title":"Design Tips​","type":1,"pageTitle":"Must-have features","url":"/docs/playable/getting-started/creative-guide/must-have-features#design-tips","content":"Try to avoid layouts that &quot;kind of work&quot; in landscape or portrait - you should optimise your layout so that it looks great regardless of orientation. Test your gameplay in both orientations and ensure that there are no edge cases that occur when the resolution is outside the usual range. Don't stretch call to action buttons to match the screen width. Consider including additional UI in landscape mode, for example you can add the game's icon in the top left corner to fill some unused space. ","version":"Next","tagName":"h3"},{"title":"Tutorial​","type":1,"pageTitle":"Must-have features","url":"/docs/playable/getting-started/creative-guide/must-have-features#tutorial","content":"As you will read in our design guide for engaging he user, the tutorial is the most important part of your playable experience. Your tutorial should be designed to engage the user, and ensure that they start your playable experience. To do this, you will need to offer some visual hints and guides so the user understands what to do in your playable. Text overlays, finger icons and dummy-moves are all natural ways to do this.  ","version":"Next","tagName":"h2"},{"title":"Design Tips​","type":1,"pageTitle":"Must-have features","url":"/docs/playable/getting-started/creative-guide/must-have-features#design-tips-1","content":"Use animated fingers to highlight how the user should interact the ad i.e. swipe, tap, move. Have a clear message or hint to the user letting them know what the goal is for the playable. As you can see in this example, &quot;Can you fix it&quot; lets you know that you should try to fix the wall. Use arrows/highlights - if the user needs to get to interact with a certain part of the playable scene, you can use arrows or masks to draw attention to the right place. ","version":"Next","tagName":"h3"},{"title":"In-game hints and motivators​","type":1,"pageTitle":"Must-have features","url":"/docs/playable/getting-started/creative-guide/must-have-features#in-game-hints-and-motivators","content":"As you will read in our design guide for guiding the user, you do not want to create an experience where a user can be left unsure of what to do next. What may seem obvious to you, you should remember that you built the game and have played it hundreds of times; this will be the first time many users experience what you have to offer! Include hints and tips to keep you user engaged and motivated, and ensure that they reach the end of your ad where they can click to the app store.  ","version":"Next","tagName":"h2"},{"title":"Design Tips​","type":1,"pageTitle":"Must-have features","url":"/docs/playable/getting-started/creative-guide/must-have-features#design-tips-2","content":"Introduce reminders or tips in the playable the user doesn't interact for more than a certain length of time. Show positive/negative reinforcements, giving visual feedback to the user i.e. a smiling or sad emoji, or &quot;wow&quot; and &quot;boo&quot; messages. Use visual fx to reinforce the correct interactions i.e. particles.           ","version":"Next","tagName":"h3"},{"title":"Persistent CTA​","type":1,"pageTitle":"Must-have features","url":"/docs/playable/getting-started/creative-guide/must-have-features#persistent-cta","content":" There should be a clear CTA throughout the playable experience. Typically this will be across the top or bottom of the ad, and sometimes in one of the corners. Make sure you place the CTA appropriately so to avoid accidental clicks.       warning Some ad networks require this in order to run a playable on their inventory. ","version":"Next","tagName":"h2"},{"title":"Replay or try-again​","type":1,"pageTitle":"Must-have features","url":"/docs/playable/getting-started/creative-guide/must-have-features#replay-or-try-again","content":"Just as with your full game, users may take 2 or 3 attempts before they're able to win a level. Give them the chance to try again before having to exit the playable. But be careful with giving them too many chances - ultimately you want them download and try out your full game.      note By using Creative Suite, you can easily configure your playable to quickly test the number of retries a user has when engaging with your playable. See more about Playground Attributes. ","version":"Next","tagName":"h2"},{"title":"End Card​","type":1,"pageTitle":"Must-have features","url":"/docs/playable/getting-started/creative-guide/must-have-features#end-card","content":"When a user has completed the playable, it is recommended to display a full screen CTA along with a message, for example a congratulations, a summary of their gameplay or their score. You can either use this as an exit point of your ad, triggering a click to the app store when the user interacts, or you can trigger the click during the gameplay and show this end card immediately afterwards.  ","version":"Next","tagName":"h2"},{"title":"Design tips​","type":1,"pageTitle":"Must-have features","url":"/docs/playable/getting-started/creative-guide/must-have-features#design-tips-3","content":"Use animations to draw the user's attention to the call-to-action. Show some branding (app logo or app name) for consistent experience with your app store page. Make the whole screen clickable. Experiment with different styles. For example, you can use a standard end card as shown to the left. Or alternatively, you could use one of the following:a) Choose your next...: allow the user to pick from 2 or more items such as level, character, weapon etc. b) Next level: show the gameplay for the next level start screen and add an overlay tempting the user to play. c) Upgrade: offer the user the chance to upgrade after winning the level. d) Retry: offer the user the chance to play again after failing.  ","version":"Next","tagName":"h3"},{"title":"ShaderLab Features","type":0,"sectionRef":"#","url":"/docs/playable/getting-started/shaderlab-features","content":"","keywords":"shaderlab features shader subshader support supported unity playable luna","version":"Next"},{"title":"Subshaders​","type":1,"pageTitle":"ShaderLab Features","url":"/docs/playable/getting-started/shaderlab-features#subshaders","content":"SubShaders Feature Supported SubShader block\tYes PackageRequirements block\tNo SubShader LOD block\tYes SubShader Tags Feature Supported SubShader Tags block\tYes RenderPipeline SubShader tag\tNo Queue SubShader tag\tYes RenderType SubShader tag\tYes DisableBatching SubShader tag\tNo CanUseSpriteAtlas SubShader tag\tNo PreviewType SubShader tag\tNo SubShader Commands Feature Supported UsePass\tYes GrabPass\tYes ","version":"Next","tagName":"h3"},{"title":"Pass​","type":1,"pageTitle":"ShaderLab Features","url":"/docs/playable/getting-started/shaderlab-features#pass","content":"Pass Feature Supported Pass block\tYes Name block\tYes Pass Tags Feature Supported Pass Tags block\tYes LightMode tag\tYes PassFlags tag\tNo RequiteOptions tag\tNo Pass Commands Feature Supported AlphaToMask\tNo Blend\tYes BlendOp\tYes ColorMask\tYes Conservative\tNo Cull\tYes Offset\tYes Stencil\tYes ZClip\tYes ZTest\tYes ZWrite\tYes ","version":"Next","tagName":"h3"},{"title":"pragma​","type":1,"pageTitle":"ShaderLab Features","url":"/docs/playable/getting-started/shaderlab-features#pragma","content":"#pragma Feature Supported #pragma target &lt;value&gt; 2.0 - 3.0 (limited for 3.0) #pragma only_renderers &lt;value&gt;\tLuna needs GLES target shaders #pragma exclude_renderers &lt;value&gt;\tLuna needs GLES target shaders ","version":"Next","tagName":"h3"},{"title":"Limitations in Playable Plugin","type":0,"sectionRef":"#","url":"/docs/playable/getting-started/limitations","content":"","keywords":"limitations apis dlls unsupported playable luna","version":"Next"},{"title":"DLLs​","type":1,"pageTitle":"Limitations in Playable Plugin","url":"/docs/playable/getting-started/limitations#dlls","content":"DLLs are currently unsupported in Luna. ","version":"Next","tagName":"h2"},{"title":"What can you do?​","type":1,"pageTitle":"Limitations in Playable Plugin","url":"/docs/playable/getting-started/limitations#what-can-you-do","content":"Replace the DLL with the plug-in C# source code. C++ plugins are not supported. ","version":"Next","tagName":"h3"},{"title":"Ads and Analytics SDKs​","type":1,"pageTitle":"Limitations in Playable Plugin","url":"/docs/playable/getting-started/limitations#ads-and-analytics-sdks","content":"Ads and Analytics SDKs are not supported in Playable ads, and therefore Luna does not support them. ","version":"Next","tagName":"h2"},{"title":"What can you do?​","type":1,"pageTitle":"Limitations in Playable Plugin","url":"/docs/playable/getting-started/limitations#what-can-you-do-1","content":"You have a few options: Use Automatic Stubbing to remove the SDKs from your project.Wrap calls to these SDKs using #if !UNITY_LUNA.Remove references to the SDKs entirely from your code. ","version":"Next","tagName":"h3"},{"title":"Avatar Animations​","type":1,"pageTitle":"Limitations in Playable Plugin","url":"/docs/playable/getting-started/limitations#avatar-animations","content":"Avatar-based animations (both generic and humanoid) are not supported. ","version":"Next","tagName":"h2"},{"title":"What can you do?​","type":1,"pageTitle":"Limitations in Playable Plugin","url":"/docs/playable/getting-started/limitations#what-can-you-do-2","content":"A work around is to re-bake the animations to target skinned mesh directly. ","version":"Next","tagName":"h3"},{"title":"NavMesh​","type":1,"pageTitle":"Limitations in Playable Plugin","url":"/docs/playable/getting-started/limitations#navmesh","content":"NavMesh is currently unsupported by Luna - whilst it is on the roadmap, it can be computationally expensive and so an alternative may be preferred for a playable experience. ","version":"Next","tagName":"h2"},{"title":"What can you do?​","type":1,"pageTitle":"Limitations in Playable Plugin","url":"/docs/playable/getting-started/limitations#what-can-you-do-3","content":"The A* C# plugin from the asset store is a great alternative, and has been tested by Luna.Implement you logic manually in C#.Implement node-based Movement. ","version":"Next","tagName":"h3"},{"title":"URP/HDRP​","type":1,"pageTitle":"Limitations in Playable Plugin","url":"/docs/playable/getting-started/limitations#urphdrp","content":"HDRP is currently unsupported, with no short term plans to add support. ","version":"Next","tagName":"h2"},{"title":"What can you do?​","type":1,"pageTitle":"Limitations in Playable Plugin","url":"/docs/playable/getting-started/limitations#what-can-you-do-4","content":"Use Universal Render Pipeline or Unity's built-in Default render pipeline. ","version":"Next","tagName":"h3"},{"title":"Shadows​","type":1,"pageTitle":"Limitations in Playable Plugin","url":"/docs/playable/getting-started/limitations#shadows","content":"Shadows are supported only for the built-in pipeline. ","version":"Next","tagName":"h2"},{"title":"WebGL / Shader targets​","type":1,"pageTitle":"Limitations in Playable Plugin","url":"/docs/playable/getting-started/limitations#webgl--shader-targets","content":"","version":"Next","tagName":"h2"},{"title":"Additive Shaders​","type":1,"pageTitle":"Limitations in Playable Plugin","url":"/docs/playable/getting-started/limitations#additive-shaders","content":"While we do support them, problems can arise due to the limitations of using WebGL1: WebGL1 can't handle values greater than 1, or less than 0. So the output will be clamped between these values. E.g. Overlit = White (1,1,1,1) + Red (1,0,0,1). Rather than getting the expected value of (2,1,1,2) it will be clamped to (1,1,1,1) Please be aware this could lead to unexpected outcomes when performing this type of operation, and the colour seen may not be what you intended. ","version":"Next","tagName":"h3"},{"title":"Precompiled Shaders​","type":1,"pageTitle":"Limitations in Playable Plugin","url":"/docs/playable/getting-started/limitations#precompiled-shaders","content":"Shaders marked with Compiled code: none (Precompiled shaders) are not currently supported. Using such shaders can produce Type error: Cannot read property val of null. (on line offsetUnits.val) ","version":"Next","tagName":"h3"},{"title":"Shader Targets​","type":1,"pageTitle":"Limitations in Playable Plugin","url":"/docs/playable/getting-started/limitations#shader-targets","content":"Luna always initialises WebGL 1.0 context for compatibility reasons (even when WebGL 2.0 is available). This leads to limited support of newer shader features (the exact set varies from device to device due to different vendor-specific extensions available). To make sure Luna is able to utilize all your shader code, please try running the game targeting OpenGL ES 2 API. ","version":"Next","tagName":"h3"},{"title":"Bridge Limitations​","type":1,"pageTitle":"Limitations in Playable Plugin","url":"/docs/playable/getting-started/limitations#bridge-limitations","content":"Luna transpiles C# code to JS with the Bridge.NET library, however Bridge only supports up to C# 7.0. This means features added in later releases (7.1, 7.2 etc.) will likely not be supported in Luna. For a list of C# 7.1+ features that we do support, click here. Examples of such features, with workarounds for each: ","version":"Next","tagName":"h2"},{"title":"Destructor (~TypeName method)​","type":1,"pageTitle":"Limitations in Playable Plugin","url":"/docs/playable/getting-started/limitations#destructor-typename-method","content":"Example of unsupported behaviour:  class myClass { ~myClass() {} }  One workaround for this would be to instead use OnDestroy(). ","version":"Next","tagName":"h3"},{"title":"GOTO statement​","type":1,"pageTitle":"Limitations in Playable Plugin","url":"/docs/playable/getting-started/limitations#goto-statement","content":"Example of unsupported behaviour: switch (n) { case 1: cost += 25; break; case 2: cost += 25; goto case 1; case 3: cost += 50; goto case 1; default: Console.WriteLine(&quot;Invalid selection.&quot;); break; }  One workaround for this is to use functions in place of looping back: private static void costUp(int n){ cost += n * 25; } if (n != null){ costUp(n) }  In other cases it might be better to use recursion in place of goto logic. ","version":"Next","tagName":"h3"},{"title":"Circular inheritance with interfaces​","type":1,"pageTitle":"Limitations in Playable Plugin","url":"/docs/playable/getting-started/limitations#circular-inheritance-with-interfaces","content":"Example of unsupported behaviour: interface A extends B {} interface B extends A {}  To workaround this you will need to break such inheritance and rewrite the code without it. ","version":"Next","tagName":"h3"},{"title":"Inline cast​","type":1,"pageTitle":"Limitations in Playable Plugin","url":"/docs/playable/getting-started/limitations#inline-cast","content":"When attempting an inline cast, be sure to have declared the variable prior to casting. However to avoid complications we suggest avoiding inline casting entirely. Example of what to do: double varDouble = 2.3; int varInt; varInt = (int) varDouble;  ","version":"Next","tagName":"h3"},{"title":"Bridge Implemented Features​","type":1,"pageTitle":"Limitations in Playable Plugin","url":"/docs/playable/getting-started/limitations#bridge-implemented-features","content":"As previously mentioned, Luna transpiles C# code into JavaScript by using Bridge.NET library. Listed below is a list of all the C# 7.0-7.3 features that have been implemented or are planned to be implemented. info Playable Plugin offers support for C# 7.0 features. Please refer to the C# documentation to see the differences between the various versions. ","version":"Next","tagName":"h2"},{"title":"C# 7.0-7.3 features​","type":1,"pageTitle":"Limitations in Playable Plugin","url":"/docs/playable/getting-started/limitations#c-70-73-features","content":"Feature\tSupportOut variables\tSupported Tuples and deconstruction\tSupported Pattern matching\tSupported Local functions\tSupported Expanded Expression-bodied members\tSupported Ref locals and returns\tSupported Discards\tSupported Throw expressions\tSupported Default Literal expressions\tSupported In modifiers on parameters\tSupported Non-trailing names arguments\tSupported == and != with tuple types\tSupported ","version":"Next","tagName":"h3"},{"title":"Luna Compiler V2​","type":1,"pageTitle":"Limitations in Playable Plugin","url":"/docs/playable/getting-started/limitations#luna-compiler-v2","content":"For more information C# 8.0/9.0 features, please check the Luna Compiler V2 guide. ","version":"Next","tagName":"h3"},{"title":"Lighting​","type":1,"pageTitle":"Limitations in Playable Plugin","url":"/docs/playable/getting-started/limitations#lighting","content":"While lighting is supported, there are limitations surrounding the number of lights that have high intensity settings. For example, if you have a light component and set its intensity to 1 and have additional lights in the scene as well, with intensities set to 1 or higher as these lights are summed in Luna causing over lit scenes in your Luna build. This is a limitation of WebGL 1.0. ","version":"Next","tagName":"h2"},{"title":"Unity GUI​","type":1,"pageTitle":"Limitations in Playable Plugin","url":"/docs/playable/getting-started/limitations#unity-gui","content":"Luna does not support the old Unity GUI system. ","version":"Next","tagName":"h2"},{"title":"DOTS or ECS​","type":1,"pageTitle":"Limitations in Playable Plugin","url":"/docs/playable/getting-started/limitations#dots-or-ecs","content":"We don't support Unity DOTs or ECS. ","version":"Next","tagName":"h2"},{"title":"Step-by-step Guide","type":0,"sectionRef":"#","url":"/docs/playable/getting-started/step-by-step","content":"","keywords":"guide step-by-step unity project playable luna","version":"Next"},{"title":"Step 1: Design your playable ad​","type":1,"pageTitle":"Step-by-step Guide","url":"/docs/playable/getting-started/step-by-step#step-1-design-your-playable-ad","content":"Before you start to edit your code, plan what features and gameplay the playable ad will show off! Sit down with your creative and UA teams to identify what you want your users to experience.Check out the design guidelines for ideas on what to include.Consider the must have features !Check out our free asset pack , available for all Luna customers to use in their creatives. info When designing your playable ad, keep in mind that the final output will be HTML + JavaScript running in a performance constrained environment. Keeping the playable simple will not only benefit the user experience, but also the runtime performance across devices. ","version":"Next","tagName":"h2"},{"title":"Step 2: Create a new scene in Unity​","type":1,"pageTitle":"Step-by-step Guide","url":"/docs/playable/getting-started/step-by-step#step-2-create-a-new-scene-in-unity","content":"Once you've designed your playable flow. We recommend to create a standalone scene in Unity for you playable.You can make use of your existing script and assets , which reduces development time and ensures your playable is a true representation of your game!You don't want to include your entire codebase in the playable as this will increase the build times and bloat your playable's size unnecessarily.For the best performance, the scene should only include essential assets, libraries and code. Try to remove anything you don't need.Remember that each ad network has a build size limit when exporting your playable.Remove all Ads SDKs and Analytics. These can be removed, or simply excluded from the project, alternatively if these are heavily integrated with your code consider using automatic stubbing to mock them.If you use external plugins, then please review our guide. In summary, you can only use plugins with C# source code, we don't support DLLs. ","version":"Next","tagName":"h2"},{"title":"Step 3: Install all required dependencies​","type":1,"pageTitle":"Step-by-step Guide","url":"/docs/playable/getting-started/step-by-step#step-3-install-all-required-dependencies","content":"Review our guide on dependencies.Notably - ensure you have .NET 4.7 and MS-Build installed. ","version":"Next","tagName":"h2"},{"title":"Step 4: Install Playable Plugin Plugin​","type":1,"pageTitle":"Step-by-step Guide","url":"/docs/playable/getting-started/step-by-step#step-4-install-playable-plugin-plugin","content":"Download the latest plugin in Creative Suite .Follow our installation guide to add Luna to your project. ","version":"Next","tagName":"h2"},{"title":"Step 5: Select assets to export​","type":1,"pageTitle":"Step-by-step Guide","url":"/docs/playable/getting-started/step-by-step#step-5-select-assets-to-export","content":"Only include the assets you require in the scene hierarchy and project folder.Selecting the appropriate assets for export is important, as ads networks have strict file size requirements. ","version":"Next","tagName":"h2"},{"title":"Step 6: Create a develop build​","type":1,"pageTitle":"Step-by-step Guide","url":"/docs/playable/getting-started/step-by-step#step-6-create-a-develop-build","content":"A build is the final output of the Luna Compilation.There are two types of Luna builds: Develop build: this one can be used to open a server and preview in a browser. Located in PROJECT &gt; LunaTemp &gt; Stage4 &gt; developCreative Suite build (Zip file): this build can be uploaded to Creative Suite. Located in PROJECT &gt; LunaTemp &gt; Stage4 &gt; create-hubWe recommend using the develop build when testing and optimising your playable. Playable Plugin supports the majority of Unity APIs which you'll need to build a playable scene. We are constatly working to support more functionalities but currently the plugin does not support everything Unity offers ( check out our supported features for more info about Playable Plugin limitations .)Use the Project Diagnostics tab (within the Build and Upload section) to check for any compilation issues.Please have a look at our guides for preparing your code.Use an incognito window in Chrome to avoid plugin errors.Review our Debugging in JS for some tips on how to fix any JS runtime errors or browser issues. ","version":"Next","tagName":"h2"},{"title":"Step 7: Optimize your playable​","type":1,"pageTitle":"Step-by-step Guide","url":"/docs/playable/getting-started/step-by-step#step-7-optimize-your-playable","content":"Luna provides a number of tools to help optimise your playable. ","version":"Next","tagName":"h2"},{"title":"Step 8: Add playable variables​","type":1,"pageTitle":"Step-by-step Guide","url":"/docs/playable/getting-started/step-by-step#step-8-add-playable-variables","content":"Expose any variables you want to be control using Luna Attributes , these can be configured later in Creative Suite to create many variants of your playable. ","version":"Next","tagName":"h2"},{"title":"Step 9: Review ad network requirements​","type":1,"pageTitle":"Step-by-step Guide","url":"/docs/playable/getting-started/step-by-step#step-9-review-ad-network-requirements","content":"Each ad network has different requirements for playable ads.Review the ad network requirements to ensure your playable meets the requirements. ","version":"Next","tagName":"h2"},{"title":"Step 10: Add required APIs and analytics events​","type":1,"pageTitle":"Step-by-step Guide","url":"/docs/playable/getting-started/step-by-step#step-10-add-required-apis-and-analytics-events","content":"Use our playable APIs to trigger store redirects and manage ad network life cycle events. ","version":"Next","tagName":"h2"},{"title":"Step 11: Add custom events​","type":1,"pageTitle":"Step-by-step Guide","url":"/docs/playable/getting-started/step-by-step#step-11-add-custom-events","content":"Custom events allow you to track specific events within in your playables, as well as create your own.Examples: TutorialStarted,TutorialComplete , LevelWon, LevelFailed etc.Understanding the different paths of interactions users took to either closing, or installing your playables is key to optimising them. ","version":"Next","tagName":"h2"},{"title":"Step 12: Upload your playable to Creative Suite​","type":1,"pageTitle":"Step-by-step Guide","url":"/docs/playable/getting-started/step-by-step#step-12-upload-your-playable-to-creative-suite","content":"Once you are happy with the playable, you can create a Creative Suite build, when uploaded to our website you can use this to configure/deploy your ad.Before uploading, make sure that you do the following: Upload an icon in Unity &gt; Player Settings.Add your game name in the Settings &gt; Ad Network tab.Add a Package Id and Product name for your playable in the Creative Suite section. Creative Suite builds can be uploaded directly from the Playable plugin or manually in the Creative Suite interface. ","version":"Next","tagName":"h2"},{"title":"Mecanim Animation System","type":0,"sectionRef":"#","url":"/docs/playable/getting-started/supported-features/mecanim","content":"","keywords":"luna mecanim avatar humanoid","version":"Next"},{"title":"Humanoid Avatars (Experimental)​","type":1,"pageTitle":"Mecanim Animation System","url":"/docs/playable/getting-started/supported-features/mecanim#humanoid-avatars-experimental","content":"The Mecanim Animation System is particularly well suited for working with animations for humanoid skeletons. Since humanoid skeletons are used extensively in games. Because of the similarity in bone structure, it is possible to map animations from one humanoid skeleton to another, allowing retargeting and inverse kinematics. With rare exceptions, humanoid models can be expected to have the same basic structure, representing the major articulate parts of the body, head and limbs. The Mecanim system makes good use of this idea to simplify the rigging and control of animations. A fundamental step in creating a animation is to set up a mapping between the simplified humanoid bone structure understood by Mecanim and the actual bones present in the skeleton; in Mecanim terminology, this mapping is called an Avatar.   ","version":"Next","tagName":"h2"},{"title":"Unity version support​","type":1,"pageTitle":"Mecanim Animation System","url":"/docs/playable/getting-started/supported-features/mecanim#unity-version-support","content":"Version2020.1 - 2020.3 2021.1 - 2021.3 2022.1 - 2022.3 2023.1 ","version":"Next","tagName":"h3"},{"title":"Supported Features​","type":1,"pageTitle":"Mecanim Animation System","url":"/docs/playable/getting-started/supported-features/mecanim#supported-features","content":"Mecanim support provides basic playback of humanoid animations. Available animator options: Animator LayerWidth Blending Animator StateMotion Speed Multiplier Mirror CycleOffset WriteDefault Animator State TransitionHas exit time No exit time Fixed duration Transition duration RootMotion​  Now we support basic RootMotion features: Feature\tDescriptionBuiltin RootMotion\tBuiltin RootMotion is RM which calculation based on data provided from animation clip or/with respect to physics systems. Could be manually applied in user defined callbacks ( OnAnimatorMove, OnStateMove ) by calling Animator.ApplyBuiltinRootMotion(). MonoBehaviour.OnAnimatorMove Callback for processing animation movements for modifying root motion. This callback will be invoked at each frame after the state machines and the animations have been evaluated. OnAnimatorMove Example void OnAnimatorMove() { Animator animator = GetComponent&lt;Animator&gt;(); if (animator) { Vector3 newPosition = transform.position; newPosition.x += animator.GetFloat( &quot;Runspeed&quot; ) * Time.deltaTime; transform.position = newPosition; } } StateMachineBehaviour.OnStateMove\tCalled right after MonoBehaviour.OnAnimatorMove. ","version":"Next","tagName":"h3"},{"title":"Limitations​","type":1,"pageTitle":"Mecanim Animation System","url":"/docs/playable/getting-started/supported-features/mecanim#limitations","content":"For now Humanoid animations feature are limited with Forward Kinematics step. Currently not supported features you can see is such table: Features\tSupported\tDetailsBlend Tree\tNo\tBlend Tree overview Sub-StateMachine\tNo\tSub/Nested StateMachine overview Inverse Kinematics (IK)\tNo\tInverse Kinematics (IK) overview ","version":"Next","tagName":"h3"},{"title":"Performance​","type":1,"pageTitle":"Mecanim Animation System","url":"/docs/playable/getting-started/supported-features/mecanim#performance","content":"Important Mecanim may negatively impact performance on some devices, or they may not work at all. This could be related to the device specific limitations. In order to resolve this issue, try decrease amount of active humanoid characters. ","version":"Next","tagName":"h3"},{"title":"Supported Rendering Features","type":0,"sectionRef":"#","url":"/docs/playable/getting-started/supported-features/supported-rendering-features","content":"","keywords":"supported plan implement unsupported rendering unity playable luna","version":"Next"},{"title":"Supported​","type":1,"pageTitle":"Supported Rendering Features","url":"/docs/playable/getting-started/supported-features/supported-rendering-features#supported","content":"These features are all available right now to use with the Luna Engine: Standard &amp; Custom Shaders from Unity (which means the converted results are 1:1) info Make sure the shaders you use support Shader Target 3.0. If not they can most likely be converted/adapted. Forward renderer path from Unity's built-in render pipeline. info We do not support other rendering paths from Unity's built-in pipeline, only ForwardPath. Normal Maps Spherical harmonics: LightProbes, ReflectionProbes, Ambient Probes All built-in Unity uniforms (for lights, harmonics, matrices, screenparams etc.) Unity Fog (Exponential, Exponential Squared &amp; Linear Fog) caution Calls made to fog via scripts will cause shader issues in Luna, be sure to use the lighting settings window in Unity instead. Baked lightmaps MaterialPropertyBlock Dynamic batching Realtime Shadows ","version":"Next","tagName":"h2"},{"title":"What we plan to implement​","type":1,"pageTitle":"Supported Rendering Features","url":"/docs/playable/getting-started/supported-features/supported-rendering-features#what-we-plan-to-implement","content":"These are features that we have on our roadmap to add to the Luna Engine, be sure to check out our release notes when we update Playable to see what new features are available. Static batching ","version":"Next","tagName":"h2"},{"title":"Not Supported​","type":1,"pageTitle":"Supported Rendering Features","url":"/docs/playable/getting-started/supported-features/supported-rendering-features#not-supported","content":"Luna always initializes WebGL 1.0 context for compatibility reasons (even when WebGL 2.0 is available). This can lead to limitations when it comes to the support of newer shader features. The exact set varies from device to device due to different vendor-specific extensions available. You can find more info on WebGL1.0 here. To make sure Luna is able to utilize all your shader code, please try running the game targeting OpenGL ES 2 API. Below are features we currently do not support: Shader target 3.5 and above HDR (because of lack of float textures) Linear color space (again due to lack of float textures) Color values from fragment shaders are clamped01 for WebGL1. This can lead to wrong blending (especially in additive). E.g. White (1,1,1,1) + Red (1,0,0,1); Would be clamped to (1,1,1,1). Deferred rendering path Native compression Optimized graphics API (instancing, cbuffers, VAO, vertexBuffer partial update) ","version":"Next","tagName":"h2"},{"title":"Shader Lab Features​","type":1,"pageTitle":"Supported Rendering Features","url":"/docs/playable/getting-started/supported-features/supported-rendering-features#shader-lab-features","content":"In this section are displayed all the ShaderLab features that are supported by Playable Plugin. Shader Lab Features ShaderLab Feature Supported Shader block\tYes Properties block\tYes Fallback block\tOnly for ShadowCaster Subshaders​ SubShaders Feature Supported SubShader block\tYes PackageRequirements block\tNo SubShader LOD block\tYes SubShader Tags Feature Supported SubShader Tags block\tYes RenderPipeline SubShader tag\tNo Queue SubShader tag\tYes RenderType SubShader tag\tYes DisableBatching SubShader tag\tNo CanUseSpriteAtlas SubShader tag\tNo PreviewType SubShader tag\tNo SubShader Commands Feature Supported UsePass\tYes GrabPass\tYes Pass​ Pass Feature Supported Pass block\tYes Name block\tYes Pass Tags Feature Supported Pass Tags block\tYes LightMode tag\tYes PassFlags tag\tNo RequiteOptions tag\tNo Pass Commands Feature Supported AlphaToMask\tNo Blend\tYes BlendOp\tYes ColorMask\tYes Conservative\tNo Cull\tYes Offset\tYes Stencil\tYes ZClip\tYes ZTest\tYes ZWrite\tYes #pragma​ #pragma Feature Supported #pragma target &lt;value&gt; 2.0 - 3.0 (limited for 3.0) #pragma only_renderers &lt;value&gt;\tLuna needs GLES target shaders #pragma exclude_renderers &lt;value&gt;\tLuna needs GLES target shaders ","version":"Next","tagName":"h2"},{"title":"Playable design guidelines","type":0,"sectionRef":"#","url":"/docs/playable/getting-started/creative-guide/playable-design","content":"","keywords":"design guide engage interactivity user playable luna","version":"Next"},{"title":"Get the user engaged​","type":1,"pageTitle":"Playable design guidelines","url":"/docs/playable/getting-started/creative-guide/playable-design#get-the-user-engaged","content":"Playable ads require the user to interact in order to experience what you have to offer - if you fail to get the user to do that, you've missed an opportunity. The tutorial and onboarding experience is the most important in your playable ad, so focus a lot of creative energy on this. tip Use fingers, animations and tutorial text i.e. &quot;Can you beat the level&quot; to draw the user in. ","version":"Next","tagName":"h2"},{"title":"Prioritize Interactivity​","type":1,"pageTitle":"Playable design guidelines","url":"/docs/playable/getting-started/creative-guide/playable-design#prioritize-interactivity","content":"Playable ads offer you the chance to fully engage a user, so making the experience as interactive as possible is a good start. Make full use of the opportunity; don't simply rely on a single click to complete the game and show an install dialogue. tip Equally, don't over complicate the controls - an experience with multiple controls can be confusing in such a short time frame. Instead focus on single-controls (i.e. tap to jump OR tap to shoot), but with multiple engagement opportunities. ","version":"Next","tagName":"h2"},{"title":"Optimise the playable length​","type":1,"pageTitle":"Playable design guidelines","url":"/docs/playable/getting-started/creative-guide/playable-design#optimise-the-playable-length","content":"Many playable ads are delivered into rewarded placements, which typically serve a 30s forced-view video. This is a well established ecosystem that is understood by publishers and users. tip Optimise your Playable ad to last ~30s (between 10-40s is generally “ok”) ","version":"Next","tagName":"h2"},{"title":"Consistency is important​","type":1,"pageTitle":"Playable design guidelines","url":"/docs/playable/getting-started/creative-guide/playable-design#consistency-is-important","content":"Focus on consistency. Whilst you may create a playable ad which drives great CTR and install rates, if the users dont find what they expect once they have downloaded your app, then this will ultimately lead to low LTV, low engagement and uninstalls. tip Create a playable experience which is consistent with your app experience. For example, allow the user to play through a tutorial or a challenging and exciting feature from the game. ","version":"Next","tagName":"h2"},{"title":"Guide the user​","type":1,"pageTitle":"Playable design guidelines","url":"/docs/playable/getting-started/creative-guide/playable-design#guide-the-user","content":"Help the user get the most out of the experience, by giving them guidance on what to do. The user may not be aware that the ad is playable, and they will have likely not played it before. If you only have their attention for 30s, then make sure its not wasted being confused about what to do. tip Include 1-2 instructional overlays that explain how to play the game, but dont make the entire experience a tutorial. ","version":"Next","tagName":"h2"},{"title":"Invite the user​","type":1,"pageTitle":"Playable design guidelines","url":"/docs/playable/getting-started/creative-guide/playable-design#invite-the-user","content":"Whilst the playable ad should mimic the real Gameplay, it is important to remember that it is still an ad! The ad should be inviting and have a clear call to action which allows the user to visit the store of your full Game experience. tip Make sure you showcase some of your best features in the ad - you want to hook the user with what you have to offer. ","version":"Next","tagName":"h2"},{"title":"Keep it simple​","type":1,"pageTitle":"Playable design guidelines","url":"/docs/playable/getting-started/creative-guide/playable-design#keep-it-simple","content":"Hard to do when you have so much to offer, but simplicity really is key. Whilst you will be inclined to excite the user with all of your features, be sure that you dont lose sight of the end goal. tip Do some real-customer testing and listen to their feedback - was it enough to capture their interest, or was it too overproduced and hard to follow. Its a fine balance to find, but theres success in getting it right. ","version":"Next","tagName":"h2"},{"title":"Make it a challenge​","type":1,"pageTitle":"Playable design guidelines","url":"/docs/playable/getting-started/creative-guide/playable-design#make-it-a-challenge","content":"Just like designing your game is a careful balance, your playable ad is too. You should focus on making the ad simple, understandable and fun - but of course make sure its a challenge! You want to create an experience where the user can easily engage with the ad and get value from it, but not make it so difficult that they give up and leave. tip Dont simply make users win by default; let them feel like they worked for it. Its likely to increase conversion rates if the user needs to download your app to complete the challenge. ","version":"Next","tagName":"h2"},{"title":"Iterate​","type":1,"pageTitle":"Playable design guidelines","url":"/docs/playable/getting-started/creative-guide/playable-design#iterate","content":"A/B test! It is important to iterate on your playable ads, as you would with any video or image assets you use for advertising. Two of the main reasons to do this are: Ad saturation or ad fatigue: If youre running a large ad campaign then you may find that some users are exposed to your playable ad multiple times; as the playable is a short (~30s) game experience with no variation, you will find that users become quickly bored of this.Optimisation: Just with your full game, you will need to continually measure and learn from the experiences you are creating. By doing this, you then iterate on new designs, pointers, characters, difficulty etc. You need to find what works well for your specific game and audience. tip Here are some important metrics to follow closely and measure: Play rate: how many users play the ad after it is served (per ad impression):Install Rate: how many users install your ad after seeing/playing itRetention (D1, D7, D28): what percentage of users retain (keep using) after downloading from your playable. ","version":"Next","tagName":"h2"},{"title":"Localisation​","type":1,"pageTitle":"Playable design guidelines","url":"/docs/playable/getting-started/creative-guide/playable-design#localisation","content":"Youve invested time, resources and money in creating a playable - so go the final length and make sure youre serving the user with the correct language. Check out our guide for playable ad localisation. ","version":"Next","tagName":"h2"},{"title":"Async Await","type":0,"sectionRef":"#","url":"/docs/playable/code/unity-cs-features/async-await","content":"Async Await Asynchronous programming is very popular with the help of the async and await keywords in C#. And Luna supports those! Below are some verified samples. Parallel calls //parralel calls async Task DoWorkParallel() { Debug.Log( &quot;parralel calls&quot; ); TickParallel(); TockParallel(); } //Task method will work but not if you are not about to wait for it keep it void async Task TickParallel() { Debug.Log( &quot;Parallel Tick Waiting 0.5f second...&quot; ); await Task.Delay( TimeSpan.FromSeconds( 0.5f ) ); Debug.Log( &quot;Parallel Tick Done!&quot; ); } //void as return value async void TockParallel() { Debug.Log( &quot;Parallel Tock Waiting 0.5f second...&quot; ); await Task.Delay( TimeSpan.FromSeconds( 0.5f ) ); Debug.Log( &quot;Parallel Tock Done!&quot; ); } Sequential calls //sequential calls //calling method have to be marked as async async Task DoWorkSequential() { Debug.Log( &quot;sequential calls&quot; ); await TickSequential(); await TockSequential(); } //void method async Task TickSequential() { Debug.Log( &quot;Sequential Tick Waiting 1 second...&quot; ); await Task.Delay( TimeSpan.FromSeconds( 1 ) ); Debug.Log( &quot;Sequential Tick Done!&quot; ); } //In order to wait for result return value should be Task async Task TockSequential() { Debug.Log( &quot;Sequential Tock Waiting 1 second...&quot; ); await Task.Delay( TimeSpan.FromSeconds( 1 ) ); Debug.Log( &quot;Sequential Tock Done!&quot; ); } Getting data from task (using Task&lt;T&gt;) Debug.Log( await TickTockTracker() ); //getting come data out of task async Task&lt;string&gt; TickTockTracker() { return &quot;Return result sample&quot;; } 4.Custom Awaiter //call for it await CustomAwaiter(); //extenstion for TimeSpan public static class AwaitExtensions { public static TaskAwaiter GetAwaiter( this TimeSpan timeSpan ) { return Task.Delay( timeSpan ).GetAwaiter(); } } Calling from Coroutine StartCoroutine( RunTask() ); IEnumerator RunTask() { yield return RunTaskAsync().AsIEnumerator(); } async Task RunTaskAsync() { Debug.Log( &quot;RunTaskAsync Start&quot; ); await TimeSpan.FromSeconds( 1 ); Debug.Log( &quot;RunTaskAsync Finish&quot; ); } public static class AwaitExtensions { public static IEnumerator AsIEnumerator( this Task task ) { while ( !task.IsCompleted ) { yield return null; } if ( task.IsFaulted ) { throw task.Exception; } } Use of async for Unity callbacks async void Start() { await DoWorkParallel(); await DoWorkSequential(); Debug.Log( await TickTockTracker() ); await CustomAwaiter(); StartCoroutine( RunTask() ); } ","keywords":"async await playable luna","version":"Next"},{"title":"WebGL2 support","type":0,"sectionRef":"#","url":"/docs/playable/getting-started/supported-features/webgl2","content":"","keywords":"webgl2 webgl web luna","version":"Next"},{"title":"Devices adoption​","type":1,"pageTitle":"WebGL2 support","url":"/docs/playable/getting-started/supported-features/webgl2#devices-adoption","content":"Based on our data (August 2023) WebGL2 adoption on Android is 99.98% and 96.07% for ios devices. ","version":"Next","tagName":"h2"},{"title":"How to turn it on​","type":1,"pageTitle":"WebGL2 support","url":"/docs/playable/getting-started/supported-features/webgl2#how-to-turn-it-on","content":"Click on the Settings section and then from within there go to the Advanced tab, enable the feature.  ","version":"Next","tagName":"h2"},{"title":"Hotkeys and Shortcuts","type":0,"sectionRef":"#","url":"/docs/playable/hotkeys","content":"","keywords":"overview playable luna hotkeys shortcuts hotclicks","version":"Next"},{"title":"Hotkeys​","type":1,"pageTitle":"Hotkeys and Shortcuts","url":"/docs/playable/hotkeys#hotkeys","content":"Open luna window: command/control + E   ","version":"Next","tagName":"h2"},{"title":"Scene Hotkeys​","type":1,"pageTitle":"Hotkeys and Shortcuts","url":"/docs/playable/hotkeys#scene-hotkeys","content":"Open selected scene: shift + ctrl/command + click on scene  Select or deselect all scenes: shift + click on scene  Select only one scene: ctrl/command + click on scene  Pick active scene: alt/option + click on scene   ","version":"Next","tagName":"h3"},{"title":"Build hotkeys​","type":1,"pageTitle":"Hotkeys and Shortcuts","url":"/docs/playable/hotkeys#build-hotkeys","content":"Build only active scene: command/control + shift + alt/option + E  Build project: command/control + shift + E   ","version":"Next","tagName":"h3"},{"title":"Shortcuts​","type":1,"pageTitle":"Hotkeys and Shortcuts","url":"/docs/playable/hotkeys#shortcuts","content":"Show asset in editor: double click on any asset or folder  Open CS errors: double click on any error  ","version":"Next","tagName":"h2"},{"title":"User Experience - Overview","type":0,"sectionRef":"#","url":"/docs/playable/insights/user-experience/overview","content":"User Experience - Overview Documentation coming soon!","keywords":"","version":"Next"},{"title":"Events Funnel","type":0,"sectionRef":"#","url":"/docs/playable/insights/advanced/events-funnel","content":"","keywords":"events funnel report chain playable luna","version":"Next"},{"title":"Generate a report​","type":1,"pageTitle":"Events Funnel","url":"/docs/playable/insights/advanced/events-funnel#generate-a-report","content":"Similar to the Events Overview page, the Events Funnel allows you to generate custom reports using the report builder. The key difference here, is that you are able to build up chains events, and view data only related to playable ad sessions which contain the specific sequence of events. The order of events in a chain matters. Events that happen out of this sequence will not be counted in the report. Non-specified events can occur between events in the chain. Each chain can contain up to five events, and you may view up to five chains in one report. ","version":"Next","tagName":"h2"},{"title":"Example chain​","type":1,"pageTitle":"Events Funnel","url":"/docs/playable/insights/advanced/events-funnel#example-chain","content":"  Here we can see the % of impressions with the following sequence: Impressions &gt; Level Won (1) event &gt; Click on a CTA  Any report that you generate in the Events Funnel page is created using our report builder and will follow the same structure. The top level filters will be applied to any report that you generate. Event chains - select which events you are interested in analysing from the drop down menu. You may add up to five events per chain. View - how you would like to see this event, using one of the following: number of eventsnumber of sessions% of sessions% of impressions% of a Custom Event Grouping - the dimension by which you would like to slice the data: nothingad networkos namecountryversionlocaleevent parameter Compare to - you can also implement a single event view as a comparison, when creating your report i.e. compared to total number of impressions. ","version":"Next","tagName":"h3"},{"title":"Examples: What kind of data can I see?​","type":1,"pageTitle":"Events Funnel","url":"/docs/playable/insights/advanced/events-funnel#examples-what-kind-of-data-can-i-see","content":"By using the report builder, you can fully explore your data to be able to answer questions about certain event chains in your playables. ","version":"Next","tagName":"h2"},{"title":"What % of impressions have a Level Won vs Level Lost event, compared to Level Started?​","type":1,"pageTitle":"Events Funnel","url":"/docs/playable/insights/advanced/events-funnel#what--of-impressions-have-a-level-won-vs-level-lost-event-compared-to-level-started","content":"Event Chain #1:Impressions &gt; Custom Event: Level Won Event Chain #2: Impressions &gt; Custom Event: Level Lost Event Chain #3: Impressions &gt; Custom Event: Level Started View: % of impressions Grouping: none    ","version":"Next","tagName":"h3"},{"title":"What % of impressions have a first interaction vs those which also have a click on CTA?​","type":1,"pageTitle":"Events Funnel","url":"/docs/playable/insights/advanced/events-funnel#what--of-impressions-have-a-first-interaction-vs-those-which-also-have-a-click-on-cta","content":"Event Chain #1:Impressions &gt; First Interaction Event Chain #2: Impressions &gt; First Interaction &gt; Click on CTA View: % of impressions Grouping: ad network    ","version":"Next","tagName":"h3"},{"title":"Events - Overview","type":0,"sectionRef":"#","url":"/docs/playable/insights/advanced/events-overview","content":"","keywords":"events report playable luna","version":"Next"},{"title":"Generate a report​","type":1,"pageTitle":"Events - Overview","url":"/docs/playable/insights/advanced/events-overview#generate-a-report","content":"Any report that you generate in the Events Overview page is created using our report builder and will follow the same structure. The top level filters will be applied to any report that you generate. Event - select which event you are interested in analysing from the drop down menu. View - how you would like to see this event, using one of the following: a. number of events b. number of sessions c. % of sessions d. % of impressions e. sum of parameter f. max of parameter g. min of parameter Grouping - the dimension by which you would like to slice the data: a. nothing b. ad network c. os name d. country e. version d. locale d. event parameter  You can also make use of the filters which be applied to any set of data you wish to visualise. ","version":"Next","tagName":"h2"},{"title":"Examples: What kind of data can I see?​","type":1,"pageTitle":"Events - Overview","url":"/docs/playable/insights/advanced/events-overview#examples-what-kind-of-data-can-i-see","content":"By using the report builder, you can fully explore your data to be able to answer questions about your playable performance. ","version":"Next","tagName":"h2"},{"title":"Engagement rate by country​","type":1,"pageTitle":"Events - Overview","url":"/docs/playable/insights/advanced/events-overview#engagement-rate-by-country","content":"Event: First Interaction View: % of impressions Grouping: country    ","version":"Next","tagName":"h3"},{"title":"Percentage of custom events per impressions, by OS​","type":1,"pageTitle":"Events - Overview","url":"/docs/playable/insights/advanced/events-overview#percentage-of-custom-events-per-impressions-by-os","content":"Event: Custom Event: Level Won, Custom Event: Level Lost View: % of impressions Grouping: os    ","version":"Next","tagName":"h3"},{"title":"Events Timeline","type":0,"sectionRef":"#","url":"/docs/playable/insights/advanced/events-timeline","content":"","keywords":"events timeline playable luna","version":"Next"},{"title":"Chart​","type":1,"pageTitle":"Events Timeline","url":"/docs/playable/insights/advanced/events-timeline#chart","content":"On the chart, you will see a time series plot of events in your playable: The X-axis represents the median time of starting from impressionThe Y-axis signifies the frequency of the event's occurrence. Hovering over each dot on the chart will give detailed information about the specific event. ","version":"Next","tagName":"h2"},{"title":"Table​","type":1,"pageTitle":"Events Timeline","url":"/docs/playable/insights/advanced/events-timeline#table","content":" Heading\tDefinitionEvent Name\tName of the custom event as defined by you in your project. Type\tThe event’s type: standard or custom. Learn more about standard and custom events. Time\tThe median time from impression for an event to be triggered (in seconds). # Events\tCount of the event’s occurrence % Impressions\tThe event’s occurrence as % of total impressions, calculated as count of events divided by count of impression ","version":"Next","tagName":"h2"},{"title":"Date Range​","type":1,"pageTitle":"Events Timeline","url":"/docs/playable/insights/advanced/events-timeline#date-range","content":"To modify the date range, select the new range from the date picker on top right of the page. You’ll need to click Apply for the page to update with data from the new time frame ","version":"Next","tagName":"h2"},{"title":"Filtering Data​","type":1,"pageTitle":"Events Timeline","url":"/docs/playable/insights/advanced/events-timeline#filtering-data","content":"You can filter data on both the chart and table by using filters on top right of the page. This includes the ability to filter by specific events, or by dimensions like Ad Network, Country, OS. Once you’ve selected the required filter options, the data will automatically update on the page ","version":"Next","tagName":"h2"},{"title":"Comparing Data​","type":1,"pageTitle":"Events Timeline","url":"/docs/playable/insights/advanced/events-timeline#comparing-data","content":"You can enable comparison by using the dropdown on top left of the page. When you select an option to compare the events data, the chart and table will automatically refresh to show data grouped by the selected dimension. For example, if you have three concepts A,B and C in your app and you want to compare events data for these concepts, select ‘Concepts’ in the dropdown. The chart and table will now update to show you data of each concept. On the table you can refer to separate event count, median time and % impression for individual concepts. If you’d like to compare events of only two concepts, you can further use filters on top right to exclude concept C from the page ","version":"Next","tagName":"h2"},{"title":"Performance - Overview","type":0,"sectionRef":"#","url":"/docs/playable/insights/performance/overview","content":"Performance - Overview Documentation coming soon!","keywords":"","version":"Next"},{"title":"Universal Render Pipeline","type":0,"sectionRef":"#","url":"/docs/playable/getting-started/supported-features/urp","content":"","keywords":"universal render pipeline urp support supported unity playable luna","version":"Next"},{"title":"URP Sample Scene in Luna​","type":1,"pageTitle":"Universal Render Pipeline","url":"/docs/playable/getting-started/supported-features/urp#urp-sample-scene-in-luna","content":"The first thing you see when you create a new URP project is a sample scene by Unity. With minimum amount of corrections weve got this scene running beautifully in Luna: Angle 1Angle 2Angle 3  Click here to test the scene above in your browser. ","version":"Next","tagName":"h2"},{"title":"Shader Graph​","type":1,"pageTitle":"Universal Render Pipeline","url":"/docs/playable/getting-started/supported-features/urp#shader-graph","content":"A headline of what we now support with URP is the powerful Shader Graph tool!   Shaders created within this tool will be identical between Luna and Unity, below you can see an example of a URP shader working great in our engine:  Click here to test the scene above in your browser. (Shader in use is the FREE Skybox Extended Shader from the Unity Asset Store)  Here is another example. (Shader in use is the PolyArt - Ancient Village Pack) ","version":"Next","tagName":"h2"},{"title":"Vertical Fog​","type":1,"pageTitle":"Universal Render Pipeline","url":"/docs/playable/getting-started/supported-features/urp#vertical-fog","content":"We also have implemented support for URP's Vertical Fog. Below you can see an example scene rendered in our engine:  Click here to test the scene above in your browser. ","version":"Next","tagName":"h2"},{"title":"URP Lighting​","type":1,"pageTitle":"Universal Render Pipeline","url":"/docs/playable/getting-started/supported-features/urp#urp-lighting","content":"Below you can see a demonstration of URP lights (Directional &amp; Point lights) affecting planes and the crystals, “Weathering“ shader on Dancing Girl, Dissolve shader on black sphere &amp; red cube, “Glow“ effect shader on grey sphere:  Click here to test the scene above in your browser. ","version":"Next","tagName":"h2"},{"title":"URP Version Support List​","type":1,"pageTitle":"Universal Render Pipeline","url":"/docs/playable/getting-started/supported-features/urp#urp-version-support-list","content":"Versions supported: Unity Version\tURP Version\tSupported?2019.4\t7.6\tYes 2020.3\t10.4\tYes 2021.3\t12.1\tYes 2022.2\t14.0\tNo (Support for this version is coming soon) ","version":"Next","tagName":"h2"},{"title":"Supported features and known issues​","type":1,"pageTitle":"Universal Render Pipeline","url":"/docs/playable/getting-started/supported-features/urp#supported-features-and-known-issues","content":"A list of features detailing if we support them or not, if there will be noticeable differences between how the feature looks in Unity &amp; Luna, and if we have plans to implement a feature in the future. ","version":"Next","tagName":"h2"},{"title":"Shader Graph features​","type":1,"pageTitle":"Universal Render Pipeline","url":"/docs/playable/getting-started/supported-features/urp#shader-graph-features","content":"Feature name\tSupported?\tImmediate plans to implement?NormalFromTexture node\tNo\tNo, as WebGL doesn't support it. Dither node\tYes (With slight differences in Luna)\t ","version":"Next","tagName":"h3"},{"title":"Other URP features​","type":1,"pageTitle":"Universal Render Pipeline","url":"/docs/playable/getting-started/supported-features/urp#other-urp-features","content":"Feature name\tSupported?\tImmediate plans to implement?Shader Graph\tYes Color Mode - Gamma\tYes Color Mode - Linear\tNo\tNo Directional Light\tYes Point Light\tYes Spot Light support\tNo\tSupport planned for future releases. Area (Rectangle) Light (Baked only)\tYes 2D Lights\tNo\tNo Meshes\tYes Particles System\tYes VFX Graph\tNo\tNo Post Processing\tNo\tNo Additional Lights Limit\tYes (4, WebGL restriction) Physical Camera\tYes Camera stacking\tYes Depth Texture\tYes Opaque Texture\tYes Real Time shadows\tNo\tSupport planned for future releases. Baked shadows\tYes Lightmapping\tYes MSAA\tYes Reflection Probes (Baked)\tYes Light Probe\tYes Fog (Exp, ExpSquared, Linear)\tYes Skybox (Procedural, Cubemap, Panoramic)\tYes Terrain\tNo\tNo Batching\tNo\tSupport planned for future releases. HDR rendering\tNo\tNo Line/Trail Renderer\tYes\t ","version":"Next","tagName":"h3"},{"title":"Spine","type":0,"sectionRef":"#","url":"/docs/playable/code/unity-plugins/spine","content":"","keywords":"spine playable luna","version":"Next"},{"title":"Install Spine​","type":1,"pageTitle":"Spine","url":"/docs/playable/code/unity-plugins/spine#install-spine","content":"Since Playable 3.8.0, Spine can easily be added to your project: Download Spine from on their website.Move the Spine Unity package into your project directory in Unity. ","version":"Next","tagName":"h2"},{"title":"Native JS Spine Compilation​","type":1,"pageTitle":"Spine","url":"/docs/playable/code/unity-plugins/spine#native-js-spine-compilation","content":"With the latest version of Playable Plugin, we now offer support for Native JS Spine for versions 4.0 and 4.1. This feature grabs the original JavaScript Spine sources instead of transpiling them from C# code with Bridge. As a result, the performance of your creative is improved. This feature is active by default at runtime. ","version":"Next","tagName":"h2"},{"title":"Switching Back To Bridge Compilation​","type":1,"pageTitle":"Spine","url":"/docs/playable/code/unity-plugins/spine#switching-back-to-bridge-compilation","content":"If you wish to switch back to the Bridge compilation, follow these steps: Locate the luna.json file in your project directory.Find the forceSourcesBasedCompilation field.Set this field to true to force C# compilation. Please note that switching back to C# compilation is more stable, but less performant. ","version":"Next","tagName":"h3"},{"title":"Configure Spine with older versions of Playable​","type":1,"pageTitle":"Spine","url":"/docs/playable/code/unity-plugins/spine#configure-spine-with-older-versions-of-playable","content":"Prior to Playable Plugin 3.8.0, you were able to use spine animations in your projects, but some of the scripts necessary to generate the animations were not compatible with Luna. As a result, you had to make changes to the plugin scripts to accommodate this. Below you will find a guide specifically for developers who use Spine in their Unity projects with Playable versions older than 3.8.0. To save time and avoid complications, we recommend using the latest version of Playable Plugin. Click here for instruction on how to configure Spine with older versions of Playable Plugin Please use this guide only if you are using a Playable version prior to 3.8.0. This guide is for developers who are using Spine in their Unity projects as DLLs. Download Spine from on their website.Move the Spine Unity package into your project directory in Unity. If you try building with the Luna Plugin now, you will receive errors in the diagnostics box. Don't worry these can be fixed by following the rest of these steps: First remove the Spine Examples folder from your project or exclude from the Luna build. Next you will need to alter files in the Spine/Runtime/spine-csharp folder, specifically the ones highlighted in the image below: These changes are required to ensure the code is compatible and can be compiled with Luna. Animation.cs​ Inside the public class ScaleTimeline, cast to float all calculations starting with either bone.scaleX or bone.scaleY. // Before bone.scaleX = bx + (Math.Abs(x) * Math.Sign(bx) - bx) * alpha; // After bone.scaleX = (float)(bx + (Math.Abs(x) * Math.Sign(bx) - bx) * alpha); Also cast to float all lines starting bx = Math.Abs(... or starting by = Math.Abs(.... // Before bx = Math.Abs(bone.data.scaleX) * Math.Sign(x); // After bx = (float)(Math.Abs(bone.data.scaleX) * Math.Sign(x)); Atlas.cs​ Use the finder to locate all references to CultureInfo.InvariantCulture, and remove all them from the script. Bone.cs​ Find the line containing s = Math.Abs(pa * pd - pb * pc) / s; (will be within the case TransformMode.NoRotationOrReflection: block, around Line 191), and cast it to a float. //Before s = Math.Abs(pa * pd - pb * pc) / s; // After s = (float) (Math.Abs(pa * pd - pb * pc) / s); Json.cs​ Find the line containing builder.Append(stringBuffer, 0, idx); (will be within if (idx &gt;= stringBuffer.Length) block, around Line 203). Initialise the stringBuffer variable as a new string. // Before builder.Append(stringBuffer, 0, idx); // After builder.Append(new string(stringBuffer), 0, idx); Last thing to do in this script is to find all references to NumberStyles.Float, NumberStyles.Any and CultureInfo.InvariantCulture and wrap them in a #if !UNITY_LUNA. Add another #if UNITY_LUNA directly under the first one, and copy and paste the if statement within it but remove references to NumberStyles.Float &amp; CultureInfo.InvariantCulture this time. For example, your ParseFloatNumber() function should look like this after this process: public float ParseFloatNumber() { float number; var str = GetNumberString (); #if !UNITY_LUNA if (!float.TryParse (str, NumberStyles.Float,CultureInfo.InvariantCulture, out number)) return 0; #endif #if UNITY_LUNA if (!float.TryParse (str, out number)) return 0; #endif return number; } IkConstraint.cs​ Find the line containing float s = Math.Abs(pa * pd - pb * pc) / (pa * pa + pc * pc); (will be within the Apply function, around Line 173). Change the type of s from float to double. 3 lines below this there will be 2 calculations to set the values for variables pb and pd, these also need to be cast to a float. For example: // Before pb = -sc * s * bone.skeleton.ScaleX; // After pb = (float) (-sc * s * bone.skeleton.ScaleX); SkeletonBinary.cs &amp; SkeletonJson.cs​ Find and remove all references to FileAccess.Read and FileShare.Read. They will be located in FileStream constructors, but you won't need to replace them with anything. You can delete these references, or wrap them in a scripting define symbol as explained here. #if UNITY_LUNA using (var input = new FileStream(path, FileMode.Open)); #else using (var input = new FileStream(path, FileMode.Open, FileAccess.Read, FileShare.Read)); #endif Next you need to alter files in the Spine/Runtime/spine-unity/Utility folder, specifically the 2 highlighted in the image below: AtlasUtilities.cs, AttachmentRegionExtensions.cs &amp; AttachmentCloneExtensions.cs​ Exclude these scripts from being included in the Luna build. To do so go to the Luna Plugin, click on the Code section and then from within there go to the Exclusions tab. From here you can expand your hierarchy to locate the scripts to tick and therefore exclude. SkinUtilities.cs​ Wrap the following lines with the Luna defines symbol. #if !UNITY_LUNA Attachment clonedAttachment = e.Value.GetCopy(cloneMeshesAsLinked); destinationAttachments[new Skin.SkinEntry(e.Key.SlotIndex, e.Key.Name, clonedAttachment)] = clonedAttachment; #endif ... #if !UNITY_LUNA Attachment clonedAttachment = e.Value.GetCopy(cloneMeshesAsLinked); destinationAttachments.Add(new Skin.SkinEntry(e.Key.SlotIndex, e.Key.Name, clonedAttachment), clonedAttachment); #endif SkeletonExtensions.cs​ Find the line containing s = Math.Abs(pa * pd - pb * pc) / s; (will be within the case TransformMode.NoRotationOrReflection: block, around Line 353), and cast it to a float. // Before s = Math.Abs(pa * pd - pb * pc) / s; // After s = (float)(Math.Abs(pa * pd - pb * pc) / s); Next you need to alter files in the Spine/Runtime/spine-unity/Components folder, specifically the 2 highlighted in the image below: SkeletonMecanim.cs​ Find the line containing layerNames[i] = animator.GetLayerName(i); (will be within public string[] MecanimLayerNames, around Line 200) and wrap it with the Luna defines symbol. #if !UNITY_LUNA layerNames[i] = animator.GetLayerName(i); #endif SkeletonRenderer.cs​ Preprocess (wrap within a #if !UNITY_LUNA) the following lines: public SpriteMaskInteraction maskInteraction = SpriteMaskInteraction.None; (Should be around Line 140). AssignSpriteMaskMaterials(); (Should be around Line 490). The entirety of the private void AssignSpriteMaskMaterials() function (Should begin just after Line 572) SkeletonRenderSeparator.cs​ Second to last is to alter one script in the Spine/Runtime/spine-unity/Components/SkeletonRenderSeparator folder, specifically SkeletonRenderSeparator.cs Wrap the following lines with the Luna defines symbol. #if !UNITY_LUNA var motionVectorGenerationMode = mainMeshRenderer.motionVectorGenerationMode; #endif ... #if !UNITY_LUNA var probeAnchor = mainMeshRenderer.probeAnchor; #endif ... #if !UNITY_LUNA mr.motionVectorGenerationMode = motionVectorGenerationMode; #endif ... #if !UNITY_LUNA mr.probeAnchor = probeAnchor; #endif Lastly, exclude the following script from being included in the Luna build. SpineSpriteAtlasAsset.cs​ To do so go to the Luna Plugin, click on the Code tab and then from within there go to the Exclusions tab. From here you can expand your hierarchy to locate the script(s) to tick and therefore exclude. Having problems with Spine? Check our Plugins Common Issues. ","version":"Next","tagName":"h2"},{"title":"Luna Real Time Shadows","type":0,"sectionRef":"#","url":"/docs/playable/getting-started/supported-features/luna-rts","content":"","keywords":"luna real time shadows","version":"Next"},{"title":"Feature details​","type":1,"pageTitle":"Luna Real Time Shadows","url":"/docs/playable/getting-started/supported-features/luna-rts#feature-details","content":"Here are some examples of how Luna RTS can enhance your creative process. Day and Night​  No shadowsWith shadows  Tanks!​ Angle 1Angle 2  Viking Village​ Angle 1Angle 2Angle 3  ","version":"Next","tagName":"h2"},{"title":"Supported Features and Known Issues​","type":1,"pageTitle":"Luna Real Time Shadows","url":"/docs/playable/getting-started/supported-features/luna-rts#supported-features-and-known-issues","content":"The current RTS solution supports the following features: One light source per scene.Shadows from Directional Light are supported. Point and Spot lights are not supported yet. Stable Fit shadow projection is supported.Hard and Soft shadows are supported.Shadows are working only with the Built-in Rendering Pipeline.Shadows are working in all Unity versions supported by Luna.Luna RTS works with custom shadow-casting shader passes. The shader pass should have LightMode set to ShadowCaster. ","version":"Next","tagName":"h2"},{"title":"Supported settings​","type":1,"pageTitle":"Luna Real Time Shadows","url":"/docs/playable/getting-started/supported-features/luna-rts#supported-settings","content":"Lights​ Setting\tSupported\tDetailsDirectional Light\tYes Point Light\tNo Spot Light\tNo Multiple light sources\tNo\tOnly one light source is currently supported. ","version":"Next","tagName":"h3"},{"title":"Shadow Settings in Quality Settings​","type":1,"pageTitle":"Luna Real Time Shadows","url":"/docs/playable/getting-started/supported-features/luna-rts#shadow-settings-in-quality-settings","content":"Shadow Types​ Setting\tSupported\tDetailsNo shadows\tYes Hard and Soft shadows\tYes\t Shadowmask Mode​ Setting\tSupported\tDetailsShadowmask\tYes\tOnly Shadowmask mode is currently supported. Distance Shadowmask\tNo\t Shadow Resolution​ Setting\tSupported\tDetailsLow (512x512 px)\tYes Medium (1024x1024 px)\tYes High (2048x2048 px)\tYes Very High (4096x4096 px)\tYes\tVery High shadow resolution could not be supported on some devices due to the texture size used. Shadow Projection​ Setting\tSupported\tDetailsClose Fit\tNo Stable Fit\tYes\tOnly Stable Fit projection is currently supported. Shadow Distance​ Setting\tSupportedShadow Distance\tYes Shadow Near Plane Offset​ Setting\tSupported\tDetailsNear Plane No\tBoth global Near Plane setting (in Quality Settings) and individual Near Plane setting (in the Light component) are currently not supported. Shadow Cascades​ Setting\tSupportedNo Cascades\tYes 2 Cascades\tYes 4 Cascades\tYes Cascades Split\tYes ","version":"Next","tagName":"h3"},{"title":"Shadow Settings in Light Component​","type":1,"pageTitle":"Luna Real Time Shadows","url":"/docs/playable/getting-started/supported-features/luna-rts#shadow-settings-in-light-component","content":"Setting\tSupported\tDetailsNo shadows\tYes Hard shadows\tYes Soft shadows\tYes Strength\tYes Resolution\tYes Bias\tYes Normal Bias\tYes Near Plane\tNo\tBoth global Near Plane setting (in Quality Settings) and individual Near Plane setting (in the Light component) are currently not supported. ","version":"Next","tagName":"h3"},{"title":"Shadow Settings in Luna Window​","type":1,"pageTitle":"Luna Real Time Shadows","url":"/docs/playable/getting-started/supported-features/luna-rts#shadow-settings-in-luna-window","content":"Setting\tSupported\tDetailsRealtime Shadows\tYes\tThis setting is used to rapidly disable shadows for the whole project without editing existing shadow settings in Light components and Quality Settings. ","version":"Next","tagName":"h3"},{"title":"Shadow Settings in Mesh Renderer​","type":1,"pageTitle":"Luna Real Time Shadows","url":"/docs/playable/getting-started/supported-features/luna-rts#shadow-settings-in-mesh-renderer","content":"Setting\tSupportedCast Shadow\tYes Receive Shadows\tYes ","version":"Next","tagName":"h3"},{"title":"Unity versions support​","type":1,"pageTitle":"Luna Real Time Shadows","url":"/docs/playable/getting-started/supported-features/luna-rts#unity-versions-support","content":"All Unity versions supported by Luna plugin are compatible with Realtime Shadows. ","version":"Next","tagName":"h2"},{"title":"User Guide​","type":1,"pageTitle":"Luna Real Time Shadows","url":"/docs/playable/getting-started/supported-features/luna-rts#user-guide","content":"Follow these step to implement Shadows in any of your projects: Open your Unity project and import the Luna plugin.Create or open a scene.Add a Directional Light to the scene: Ensure that Shadows Casting is enabled in the Light component.Select Hard Shadows or Soft Shadows option in Shadow Type property. Add an a shadow casters (e.g. cube) to the scene: Ensure that Cast Shadows option is enabled in the Mesh Renderer component.Ensure that Receive Shadows option is enabled in the Mesh Renderer component. Open the projects Quality Settings (Edit → Project Settings → Quality) Select Shadowmask option in Shadowmask Mode field.Select Hard or Hard and Soft shadows mode in Shadows field.Select any option in Shadow Resolution.Select Stable Fit option in Shadow Projection field.Select the desired Shadow Distance.Select any option in Shadow Cascades field (it is best to try the No cascades option first since it has the least impact on performance).Select desirable Cascade split if youve selected at least 2 cascades. Play with the shadow settings until you the wanted result.Open the Luna window and enable shadows: Check the Realtime Shadows option in Settings → Advanced → Realtime Shadows (see screenshot). Export Luna project and inspect the results.  ","version":"Next","tagName":"h2"},{"title":"Limitations and Performance Characteristics​","type":1,"pageTitle":"Luna Real Time Shadows","url":"/docs/playable/getting-started/supported-features/luna-rts#limitations-and-performance-characteristics","content":"A project with shadows enabled will perform slower than one without. Thats because each shadow-casting object that affects the final shadow image is rendered at least twice: once for shadow casting, and once for regular rendering. The number of draw-calls per caster is depending on the shadow settings (e.g. cascades count) and the number of passes for the regular mesh rendering. Recommendations to lower hit on performance: Reduce the number of shadowcasters (shadows that are visible to the camera)Reduce the amount of cascades used (ideally No cascades).Use a smaller shadow distance.Lower the resolution of the shadows.Use only Hard shadows. Important Shadows may negatively impact performance on some devices, or they may not work at all. This could be related to the device specific limitations (e.g. GPU memory). In order to resolve this issue, try lowering the shadow settings, and ensure that Unity's WebGL1 build on the device is able to render shadows. ","version":"Next","tagName":"h2"},{"title":"Universal Render Pipeline Shadows​","type":1,"pageTitle":"Luna Real Time Shadows","url":"/docs/playable/getting-started/supported-features/luna-rts#universal-render-pipeline-shadows","content":"Universal Render Pipeline (URP) shadows are not currently supported. ","version":"Next","tagName":"h2"},{"title":"Events Settings","type":0,"sectionRef":"#","url":"/docs/playable/insights/events-settings","content":"","keywords":"insights settings events playable luna","version":"Next"},{"title":"Event name​","type":1,"pageTitle":"Events Settings","url":"/docs/playable/insights/events-settings#event-name","content":"Name of the event as it was set in your user code. ","version":"Next","tagName":"h2"},{"title":"Total Events​","type":1,"pageTitle":"Events Settings","url":"/docs/playable/insights/events-settings#total-events","content":"How many events, total, have been seen for this event. ","version":"Next","tagName":"h2"},{"title":"Category​","type":1,"pageTitle":"Events Settings","url":"/docs/playable/insights/events-settings#category","content":"Categories allow you to assign a number of predefined categories to each of your events, for example, you may have several unique events that may all represent a similar moment in the playable such as Game End. ","version":"Next","tagName":"h2"},{"title":"Single Event per Session​","type":1,"pageTitle":"Events Settings","url":"/docs/playable/insights/events-settings#single-event-per-session","content":"At times, you may have implementation issues which lead to an event being logged multiple times per playable sessions, which makes it difficult to interpret the data. By enabling this option, only the first event in the session of a given type will be counted and shown in Luna Insights. ","version":"Next","tagName":"h2"},{"title":"Description​","type":1,"pageTitle":"Events Settings","url":"/docs/playable/insights/events-settings#description","content":"You can leave a definition or description of the event for anyone on the team to understand how and where it is triggered.  ","version":"Next","tagName":"h2"},{"title":"Glossary of Insights Terms","type":0,"sectionRef":"#","url":"/docs/playable/insights/glossary","content":"","keywords":"insights glossary playable luna","version":"Next"},{"title":"C​","type":1,"pageTitle":"Glossary of Insights Terms","url":"/docs/playable/insights/glossary#c","content":"CTA Call-to-action i.e. any click on a button which leads to the App Store. Luna captures this event when the Luna.Unity.Playable.InstallFullGame() is triggered (see more). Creative A unique creative variant created in Creative Suite. ","version":"Next","tagName":"h2"},{"title":"F​","type":1,"pageTitle":"Glossary of Insights Terms","url":"/docs/playable/insights/glossary#f","content":"First Interaction The user has engaged with the ad for the first time by touching the screen. This does not include clicks on the X button to close the ad. ","version":"Next","tagName":"h2"},{"title":"I​","type":1,"pageTitle":"Glossary of Insights Terms","url":"/docs/playable/insights/glossary#i","content":"Impression The first frame has been rendered on screen. ","version":"Next","tagName":"h2"},{"title":"L​","type":1,"pageTitle":"Glossary of Insights Terms","url":"/docs/playable/insights/glossary#l","content":"Load The playable ad has started to load. This is similar to the request metric in some ad network reports. Loaded The playable ad has loaded all of the content and is ready to be shown ","version":"Next","tagName":"h2"},{"title":"S​","type":1,"pageTitle":"Glossary of Insights Terms","url":"/docs/playable/insights/glossary#s","content":"Session A unique instance where a playable ad is loaded by an ad network or browser. It is important to note that not all sessions will lead to an impression, as many ad networks pre-cache the playable ad before showing it. Starting The playable ad is loading its first scene. Started The playable ad has started. This is different to an impression as the ad may not be visible at this stage. ","version":"Next","tagName":"h2"},{"title":"User Journey","type":0,"sectionRef":"#","url":"/docs/playable/insights/user-experience/user-journey","content":"","keywords":"experience journey flow diagram playable luna","version":"Next"},{"title":"Generate a report​","type":1,"pageTitle":"User Journey","url":"/docs/playable/insights/user-experience/user-journey#generate-a-report","content":"The User Journey page allows you to generate custom reports using the report builder. The top level filters will be applied to any report that you generate. Events - be default, all events are selected. This menu item allows you to remove certain events or add a specific set of events to create a specific view of your users' journey. Starting with - where the user journey starts i.e. the first event. All session data presented in the funnel will be based on the starting event define in the report. As an example, by using &quot;Impression&quot; as the starting event, all data is therefor shown as a % of total impressions. Only show sessions with - filters the user journey so that only session that contain a specific event are displayed. For example you can filter to only see sessions that had install events to help identify any particular patterns in behaviour.   Events group - events groups allow you to group two or more events into a custom group in the user journey report. This feature allows you two quickly group similar events and can allow you to interpret the report more easily i.e. grouping two similar events causing an unnecessary fork in the flow. ","version":"Next","tagName":"h2"},{"title":"Event Tile Definitions​","type":1,"pageTitle":"User Journey","url":"/docs/playable/insights/user-experience/user-journey#event-tile-definitions","content":"  Note: Events of the same name but different number are variations of said event, not duplicates. An example of how this number can be used to distinguish events can be found here. Event Name - the name of the standard or custom event.Sessions - the total number and percentage of user sessions which include this event. In this case, sessions are filtered based on the starting event define in the report. As an example, by using &quot;Impression&quot; as the starting event, all data is therefore shown as a % of total impressions.Avg time - the average time (mean) spent in a given state i.e. time before the next event.Exits - the total number and percentage of sessions which continue after this event i.e. triggers one or more subsequent events.Drop off - the total number and percentage of sessions which exit after this event i.e. do not trigger any subsequent events. ","version":"Next","tagName":"h2"},{"title":"Advanced​","type":1,"pageTitle":"User Journey","url":"/docs/playable/insights/user-experience/user-journey#advanced","content":"Inbound events - the total number and percentage of the events which came directly prior this event.Outbound events - the total number and percentage of the events which cam directly after this event. ","version":"Next","tagName":"h3"},{"title":"Playable Insights - Overview","type":0,"sectionRef":"#","url":"/docs/playable/insights/overview","content":"","keywords":"insights overview playable luna","version":"Next"},{"title":"How does it work?​","type":1,"pageTitle":"Playable Insights - Overview","url":"/docs/playable/insights/overview#how-does-it-work","content":"When your playable ad goes live on one of the supported ad networks, Luna collects anonymised analytics events on the playable experience. Standard events - these events cover the basics of your playable are added automatically with no extra effort.Custom events - playable-specific events that allow you to understand more details about the user flow. They must be implemented using the custom events API. info All data is anonymous, meaning no user-level data (i.e. IDFA) is captured. These events are sent back to Luna and displayed in real time with the following dimensions: Playable AppPlayable CreativeAd NetworkUser Operating SystemUser Country ","version":"Next","tagName":"h2"},{"title":"Examples of Insights​","type":1,"pageTitle":"Playable Insights - Overview","url":"/docs/playable/insights/overview#examples-of-insights","content":"Here are a few examples of questions you can quickly answer using Insights: How long on average does it take users on iOS to engage with a playable?When a player wins level 1, are they more likely to visit the app store than if they had lost?Do users engage more what character 1 or character 2? ","version":"Next","tagName":"h3"},{"title":"Supported Ad Networks​","type":1,"pageTitle":"Playable Insights - Overview","url":"/docs/playable/insights/overview#supported-ad-networks","content":"Our in-ad analytics module tracks events for the following ad networks. AdColonyironSourceMraid AdsUnity AdsVungle ","version":"Next","tagName":"h2"},{"title":"Adding customizable assets","type":0,"sectionRef":"#","url":"/docs/playable/javascript-playables/playground-assets","content":"","keywords":"playable playground create hub luna javascript external externally setup step by step-by-step guide how to","version":"Next"},{"title":"Adding Playground fields to a playable​","type":1,"pageTitle":"Adding customizable assets","url":"/docs/playable/javascript-playables/playground-assets#adding-playground-fields-to-a-playable","content":"","version":"Next","tagName":"h2"},{"title":"1. Open playground.json configuration file and locate \"assets\" key.​","type":1,"pageTitle":"Adding customizable assets","url":"/docs/playable/javascript-playables/playground-assets#1-open-playgroundjson-configuration-file-and-locate-assets-key","content":"","version":"Next","tagName":"h3"},{"title":"2. Add as many assets as you like.​","type":1,"pageTitle":"Adding customizable assets","url":"/docs/playable/javascript-playables/playground-assets#2-add-as-many-assets-as-you-like","content":"Each asset is defined as a simple JSON object residing under specific asset key. Let's take this by example: consider the below playground.json: { &quot;title&quot;: &quot;Basic Playable&quot;, &quot;icon&quot;: &quot;&quot;, // Icon next to the playable in Creative Suite, takes a Data URL. &quot;fields&quot;: {}, &quot;assets&quot;: { &quot;my-sprite-001&quot;: { &quot;id&quot;: &quot;001&quot;, &quot;title&quot;: &quot;Custom Image&quot;, &quot;type&quot;: &quot;texture&quot;, &quot;section&quot;: &quot;&quot;, &quot;order&quot;: 0 } } }  The asset key (my-sprite-001 in the above example) can be chosen arbitrary - just like with Creative Suite Fields and their class/field names, this will be used by Creative Suite during playable updates to keep the mapping between previously stored settings and a new playable. The important keys in the asset JSON are: id - please set to some unique value for each asset, will be used down the roadtype - please choose between texture, videoclip and audioclip to hint Creative Suite on which file types to allow for upload. ","version":"Next","tagName":"h3"},{"title":"3. Make an inlined asset customizable​","type":1,"pageTitle":"Adding customizable assets","url":"/docs/playable/javascript-playables/playground-assets#3-make-an-inlined-asset-customizable","content":"To do so, please locale (or create new) &lt;img /&gt;, &lt;audio /&gt; or &lt;video /&gt; tag in your playable HTML file and make sure it meets the following requirements: id attribute is set to &quot;asset/ID&quot;, where ID stands for the id value you chose for each asset on step #2.src attribute is set to some Data URI value, can be faux, i.e. &lt;img src=&quot;data:image/png;base64,&quot; /&gt; In order to avoid errors, please make sure the id attribute in the tag is set before the src attribute. For the asset defined in the example on step #2, the following bit of HTML is expected to be present somewhere in the Playable: &lt;html&gt; &lt;!-- ... --&gt; &lt;body&gt; &lt;img id=&quot;asset/001&quot; src=&quot;data:image/png;base64,&quot; /&gt; &lt;/body&gt; &lt;/html&gt;  This is it! Uploading such a playable to Creative Suite will expose asset fields in the editor section, allowing you to replace images, audio clips and video clips within your playable. ","version":"Next","tagName":"h3"},{"title":"Ready-to-use example​","type":1,"pageTitle":"Adding customizable assets","url":"/docs/playable/javascript-playables/playground-assets#ready-to-use-example","content":"Feel free to check the example residing at https://github.com/LunaCommunity/Playable-Examples/tree/master/assets for a minimal setup of a playable using Playground Assets. ","version":"Next","tagName":"h2"},{"title":"Luna JS SDK Guide","type":0,"sectionRef":"#","url":"/docs/playable/javascript-playables/js-sdk","content":"","keywords":"playable Creative Suite create hub luna javascript external upload sdk overview","version":"Next"},{"title":"Setup​","type":1,"pageTitle":"Luna JS SDK Guide","url":"/docs/playable/javascript-playables/js-sdk#setup","content":"","version":"Next","tagName":"h2"},{"title":"1. Include the Script​","type":1,"pageTitle":"Luna JS SDK Guide","url":"/docs/playable/javascript-playables/js-sdk#1-include-the-script","content":"First you will need to add it as a script to your html file as: src=&quot;https://code.lunalabs.io/js-sdk/v0.0.10/index.js&quot;. Make sure to add the Luna SDK before any other scripts in your html file. You can also change the version number in the URL to match the latest version of the JS SDK available. Latest Version: v0.0.10 ","version":"Next","tagName":"h3"},{"title":"2. Implement setStartGame (If you don't have a similar global function)​","type":1,"pageTitle":"Luna JS SDK Guide","url":"/docs/playable/javascript-playables/js-sdk#2-implement-setstartgame-if-you-dont-have-a-similar-global-function","content":"Next you will need to make sure you have a global start game function in your game: window.startGame = () =&gt; { // your game initialization here };  ","version":"Next","tagName":"h3"},{"title":"3. (Optional) Add dynamic fields​","type":1,"pageTitle":"Luna JS SDK Guide","url":"/docs/playable/javascript-playables/js-sdk#3-optional-add-dynamic-fields","content":"Example: Luna.setFields({ fieldExample: { int: 2, // acceptable type names are: int, float, string, boolean, color, vector2, vector3, vector4, enum, &quot;float[]&quot;, &quot;int[]&quot;, &quot;string[]&quot;, &quot;boolean[]&quot;, &quot;color[]&quot;, &quot;vector2[]&quot;, &quot;vector3[]&quot;, &quot;vector4[]&quot;, &quot;enum[]&quot; title: 'Field Example', // title of field on Creative Suite section: 'Settings', // (Optional) The group in which to show on Creative Suite options: ['Hello', 'Hi'], // (Optional) Used only by enums to set the different values it can have min: 0, // (Optional) used for numbers to set the min value on Creative Suite max: 10, // (Optional) used for numbers to set the max value on Creative Suite step: 2, // (Optional) used for numbers to set the increment value on Creative Suite minLength: 2, // (Optional) used for arrays to set the min length of the array on Creative Suite maxLength: 2 // (Optional) used for arrays to set the max length of the array on Creative Suite }, secondExample: { enum: 2, options: ['Hello', 'Hi'] }, thirdExample: { 'boolean[]': [true, false] }, forthExample: { color: 'rgb(255,255,255)' } });  The value of a vector2, vector3 or vector4 needs to be an array with the x,y,z,w values as elements. Enum values can either be the string value or the index number. Color can be either an array with the following formats: [r,g,b,a], rgba(255,255,255,0.1), rgba(255,255,255). Alternatively you could use a hex code: #ff00ff55, or one without an alpha value: #ff00ff. You can then use these fields in your game by calling them, for example: Luna.getField('fieldExample', 2); Luna.getField('forthExample', '#ff00ff', 'hex');  The 1st parameter of the function is the field name, the 2nd is the default value, and the 3rd is the format. For now we only support formatting colors, so the following formats are acceptable: &quot;rgba&quot; | &quot;rgb&quot; | &quot;hex&quot; | &quot;hex6&quot; ","version":"Next","tagName":"h3"},{"title":"4. (Optional) Add Custom Events​","type":1,"pageTitle":"Luna JS SDK Guide","url":"/docs/playable/javascript-playables/js-sdk#4-optional-add-custom-events","content":"You can add custom events by using window.pi.logCustomEvent. E.g.: window.pi.logCustomEvent('LevelStarted'); window.pi.logCustomEvent('EnemyDestroyed', 4);  ","version":"Next","tagName":"h3"},{"title":"5. (Optional depending on Network) Call Luna.Unity.LifeCycle.GameEnded()​","type":1,"pageTitle":"Luna JS SDK Guide","url":"/docs/playable/javascript-playables/js-sdk#5-optional-depending-on-network-call-lunaunitylifecyclegameended","content":"Some Ad Networks require to know when a game has ended, so at the end of the game you need to call: Luna.Unity.LifeCycle.GameEnded(). ","version":"Next","tagName":"h3"},{"title":"6. Implement Luna.Unity.Playable.InstallFullGame()​","type":1,"pageTitle":"Luna JS SDK Guide","url":"/docs/playable/javascript-playables/js-sdk#6-implement-lunaunityplayableinstallfullgame","content":"Luna.Unity.Playable.InstallFullGame() needs to be called at the end of the gameplay cycle. You can also: Set the title of the game on Creative Suite by calling: Luna.setTitle(&quot;My Game&quot;);Set the icon of the game by calling: Luna.setIcon(&quot;./my_logo.png&quot;); (You can also use a link to an image online) ","version":"Next","tagName":"h3"},{"title":"7. Download your PG ready playable​","type":1,"pageTitle":"Luna JS SDK Guide","url":"/docs/playable/javascript-playables/js-sdk#7-download-your-pg-ready-playable","content":"Once all the necessary previous steps are done, you can click on the Luna button located in the bottom right of your game. (Circled in the image below)   This will export a zip for you that you can upload to Creative Suite. To upload: Login to Creative SuiteNavigate to the Playable Apps section under the Playable dropdown menuClick 'Browse' and select your zip (or drag and drop it in)   ","version":"Next","tagName":"h3"},{"title":"Asset Exportation​","type":1,"pageTitle":"Luna JS SDK Guide","url":"/docs/playable/javascript-playables/js-sdk#asset-exportation","content":"Playcanvas (Latest version): The Luna JS SDK patches most of the Playcanvas handlers. Meaning you should be able to load your assets normally, and when exporting the SDK will grab and include your assets inside the zip.Pixi (Latest version): The Luna JS SDK patches the Pixi loader and PIXI.Texture.from(). Meaning you should be able to load your assets normally, and when exporting the SDK will grab and include your assets inside the zip.ThreeJS (Latest version): The Luna JS SDK patches most of the Playcanvas loaders. Meaning you should be able to load your assets normally, and when exporting the SDK will grab and include your assets inside the zip.Custom loader At the moment there is only a basic loader implementation so you can do: Luna.addAssets(['./data/img.png', './jsons/data.json']);  To get the asset you can do: const asset = await Luna.geAsset('./data/img.png'); const arrayBuffer = await asset.arrayBuffer(); // to get the asset as an array buffer const blob = await asset.blob(); // to get the asset as a blob const text = await asset.text(); // to get the asset as text const json = await asset.json(); // to get the asset as a json  Alternatively you can cache all your assets as base 64 inside your js code, and get them from there. ","version":"Next","tagName":"h2"},{"title":"Using JavaScript Playables with Creative Suite","type":0,"sectionRef":"#","url":"/docs/playable/javascript-playables/overview","content":"","keywords":"playable Creative Suite create hub luna javascript external externally overview","version":"Next"},{"title":"Getting Started​","type":1,"pageTitle":"Using JavaScript Playables with Creative Suite","url":"/docs/playable/javascript-playables/overview#getting-started","content":"Download your HTML5 playable from your provider, or as an export from the game engine being used. You may export your playable as an ad network version - if this is the case, then you can simply take a single creative to use in the next steps. The playable now needs to be prepared for use with Luna. To do this, you can follow our setup guide which uses a sample playable from our community github. Once prepared, you can login to Creative Suite and upload the version.   Click to upload, or drag and drop the Creative Suite archive in the interface. The build will now be uploaded. When complete, your build will now be visible in the UI. External playables are marked with a purple outline.   You can now go ahead and use this playable as with any Playable Plugin! Check out our guides on creating a playable and using multi-variant ads. ","version":"Next","tagName":"h2"},{"title":"Excluding Assets From Build","type":0,"sectionRef":"#","url":"/docs/playable/optimise-your-builds/excluding-assets","content":"","keywords":"exclude include assets export type playable luna","version":"Next"},{"title":"How Luna exports using your game scene​","type":1,"pageTitle":"Excluding Assets From Build","url":"/docs/playable/optimise-your-builds/excluding-assets#how-luna-exports-using-your-game-scene","content":"By default Luna detects all assets in use by the scenes you have selected in the plugin window, this includes: all prefabs, textures, animations and other resources found in the project. Whilst this strategy often produces undesirably big builds, especially with games which have a lot of assets, it is a preferable starting point because it helps avoid issues caused by misconfiguration and eases debugging of first exports. If you wish to include additional resources you can: Select &quot;Resources&quot; to include the Resources folderSelect &quot;Streaming Assets&quot; to include the Streaming Assets folderManually include specific assets as documented here  If you want to start thinning down your build a good place to start is with excluding assets, which is explained below. ","version":"Next","tagName":"h2"},{"title":"Excluding or including individual assets​","type":1,"pageTitle":"Excluding Assets From Build","url":"/docs/playable/optimise-your-builds/excluding-assets#excluding-or-including-individual-assets","content":"There are instances when more fine control is needed: for instance, you might have 20 prefabs for different levels, but you know your playable ad will only load the first 3. Instead of reorganizing your project structure, you can force Luna to include specific assets or, otherwise, force to exclude specific ones. This can be done simply by navigating to the Assets section and the Assets tab, and marking an asset or even a whole folder in corresponding parts of the screen:  Force-include always wins Please note that &quot;Force Include&quot; section has the highest priority: assets selected there will get into the build along with their dependencies even if they are excluded by all other means. ","version":"Next","tagName":"h2"},{"title":"Luna Asset Hints in Project Browser​","type":1,"pageTitle":"Excluding Assets From Build","url":"/docs/playable/optimise-your-builds/excluding-assets#luna-asset-hints-in-project-browser","content":"Playable Plugin also provides a tool that highlights assets in your project window depending on if they have been marked for force-inclusion or force-exclusion. ","version":"Next","tagName":"h2"},{"title":"How to enable​","type":1,"pageTitle":"Excluding Assets From Build","url":"/docs/playable/optimise-your-builds/excluding-assets#how-to-enable","content":"To enable this tool click the button with the Luna logo along to the left of the project window search bar (circled in the image below).  ","version":"Next","tagName":"h3"},{"title":"Highlight key​","type":1,"pageTitle":"Excluding Assets From Build","url":"/docs/playable/optimise-your-builds/excluding-assets#highlight-key","content":"Opaque (solid) Green: Assets currently marked for force-inclusion.Opaque (solid) Red: Assets currently marked for force-exclusion.Transparent Red: Assets that were excluded in the last build.Transparent Green: Assets that were included in the last build.Yellow Outline: Assets that were referenced in the previous build, but were not included. ","version":"Next","tagName":"h3"},{"title":"Display settings cog for assets​","type":1,"pageTitle":"Excluding Assets From Build","url":"/docs/playable/optimise-your-builds/excluding-assets#display-settings-cog-for-assets","content":"Hitting the alt key (Windows) or the option key (Mac) will toggle showing a settings cog icon on all files in your project window, clicking on these cogs will show you the available Playable Plugin settings that you can configure for that asset (example in the image below).   ","version":"Next","tagName":"h3"},{"title":"Luna Assets Context Menu​","type":1,"pageTitle":"Excluding Assets From Build","url":"/docs/playable/optimise-your-builds/excluding-assets#luna-assets-context-menu","content":"You can also access options for you assets by the right click menu in Unity; simply right click on an asset and hover over the 'Luna' context menu to expand it and see the available options for that asset (example in the image below).   ","version":"Next","tagName":"h3"},{"title":"Next steps​","type":1,"pageTitle":"Excluding Assets From Build","url":"/docs/playable/optimise-your-builds/excluding-assets#next-steps","content":"The previously listed controls should be sufficient to configure any sort of membership of assets within a given project. Please note that Luna export will do its best to avoid broken references and otherwise invalid state: it will propagate inclusion status to any dependencies, i.e. include textures referenced by a material if the material gets it into the build. It is possible, however, to break that. For instance, one can accidentally force-exclude a texture used by a material on the scene that is not a member of &quot;Force Include&quot; section, so excluding the assets must be done with care. Nothing is irreversible, though: Luna will never delete anything from a Unity project and restoring any previous settings is as easy as checking out a previous version of luna.json file shall a developer accidentally break a Luna build by excluding too many assets. If all assets are excluded, but the build size is still undesirably big, it is a good time to try applying specific compression settings to individual items as described in the Optimising Assets section. ","version":"Next","tagName":"h2"},{"title":"Optimising Animations","type":0,"sectionRef":"#","url":"/docs/playable/optimise-your-builds/optimising-assets/optimising-animations","content":"","keywords":"animation optimise reduce size playable luna","version":"Next"},{"title":"Store animation in Half-precision floating-point format​","type":1,"pageTitle":"Optimising Animations","url":"/docs/playable/optimise-your-builds/optimising-assets/optimising-animations#store-animation-in-half-precision-floating-point-format","content":"This will instruct Luna to use half-precision floats for storing animation data, reducing the size taken by 50%. It is almost impossible to predict whether it is going to be noticeable in the final product, but in many cases the difference will be negligable. These floats still have 3 precision digits, which is enough for many cases. Startup time penalty! JavaScript doesn't support half-precision float number type, thus Luna has to unpack the data into double-precision float numbers before being able to use it in JavaScript. Depending on the overall animation size and device power, the lag can be noticeable, so please test carefully before enabling it for production builds. ","version":"Next","tagName":"h3"},{"title":"Per-animation settings​","type":1,"pageTitle":"Optimising Animations","url":"/docs/playable/optimise-your-builds/optimising-assets/optimising-animations#per-animation-settings","content":"All of the above settings are also available on a per-folder and per-animation level. Developers can choose a folder of a file by ticking a checkbox in &quot;Per-animation settings&quot; section of the window and use the same fields to tweak parameters of a specific animation(s):  ","version":"Next","tagName":"h2"},{"title":"Asset Size Breakdown","type":0,"sectionRef":"#","url":"/docs/playable/optimise-your-builds/asset-size-breakdown","content":"","keywords":"size breakdown playable luna","version":"Next"},{"title":"Size breakdown precision​","type":1,"pageTitle":"Asset Size Breakdown","url":"/docs/playable/optimise-your-builds/asset-size-breakdown#size-breakdown-precision","content":"Luna attempts to estimate the size breakdown as precisely as possible, but it is always going to be off by a few percent. The reason is that the final builds combine resource groups into chunks of text and binary data and compresses those chunks. Obviously, 10 meshes combined and compressed as one big blob might take slightly less (or more) that the sum of their compressed versions. The estimate is pretty accurate, though: it is never significantly off and can be trusted in all instances. Other category Within the size breakdown, you'll come across an Other category which comprises of necessary scripts and HTML code that must be incorporated into playable builds. ","version":"Next","tagName":"h2"},{"title":"Next steps​","type":1,"pageTitle":"Asset Size Breakdown","url":"/docs/playable/optimise-your-builds/asset-size-breakdown#next-steps","content":"As soon as you identified what takes space in your build, the next step would be to eliminate bits that are not needed completely. Although it's tempting to think that everything existing in the build actually makes sense, it is very easy to miss some assets, especially the ones residing in Resources folder somewhere, that are not in use by a playable and can be removed. For the assets that get included via references from scenes or prefabs it might be sufficient to remove the links, which, in its turn will make them be skipped by build process. Assets residing in Resources folder are trickier: you might still need some files from Resources folder and that is when Luna's Asset excludes come in handy. Learn how to eliminate specific assets from the build in Excluding Assets section of this manual. ","version":"Next","tagName":"h2"},{"title":"Optimising individual assets​","type":1,"pageTitle":"Asset Size Breakdown","url":"/docs/playable/optimise-your-builds/asset-size-breakdown#optimising-individual-assets","content":"It might well be the case when all the assets listed are actually needed, but they still take too much space. In many cases this can be worked around by setting up specific asset export rules, often with little to no quality degradation. Learn how to optimise specific assets in the build in Optimising Assets Overview section of this manual. ","version":"Next","tagName":"h2"},{"title":"Preview Assets in Size Breakdown​","type":1,"pageTitle":"Asset Size Breakdown","url":"/docs/playable/optimise-your-builds/asset-size-breakdown#preview-assets-in-size-breakdown","content":"Since Playable Plugin 3.0.0, assets can be previewed from the Size Breakdown tab.  By selecting an asset from the Size Breakdown list, a preview window will appear on the right side. You can find a preview of the selected asset at the bottom of this window, while the editable settings can be found at the top, allowing developers to modify their assets also within the Size Breakdown tab. ","version":"Next","tagName":"h3"},{"title":"Recalculate Asset Size​","type":1,"pageTitle":"Asset Size Breakdown","url":"/docs/playable/optimise-your-builds/asset-size-breakdown#recalculate-asset-size","content":"When an asset is selected in the Size Breakdown list, you can play with the editable settings and then recalculate the asset size with the new settings applied. Just clicking on the Recalculate Asset Size button (located underneath the preview of the asset) will update the current size.  ","version":"Next","tagName":"h3"},{"title":"Including and Excluding assets from Size Breakdown​","type":1,"pageTitle":"Asset Size Breakdown","url":"/docs/playable/optimise-your-builds/asset-size-breakdown#including-and-excluding-assets-from-size-breakdown","content":"Individual assets can be included and excluded from a project build directly from the Size Breakdown tab. Use the - button at the left of an asset to exclude it from the project.  Use the + button at the left of an asset to include it back into the project.  ","version":"Next","tagName":"h3"},{"title":"What is included in \"Other\"​","type":1,"pageTitle":"Asset Size Breakdown","url":"/docs/playable/optimise-your-builds/asset-size-breakdown#what-is-included-in-other","content":"The other section of the size breakdown does not include anything from your playable. It is consists of Playable Plugins's parts.  ","version":"Next","tagName":"h2"},{"title":"FPS Counter","type":0,"sectionRef":"#","url":"/docs/playable/optimise-your-builds/fps-counter","content":"","keywords":"fps counter graph time between frame frames ram size memory playable luna","version":"Next"},{"title":"How to enable​","type":1,"pageTitle":"FPS Counter","url":"/docs/playable/optimise-your-builds/fps-counter#how-to-enable","content":"In order to enable our FPS counter, first make sure you are opening a development build. (In order to build for develop you can navigate to the Develop tab in the plugin window, and hit 'Build project'. Once this finishes you can view your build in the browser by hitting 'Start server'.)  Once you have opened your develop build in the browser, you can enable the FPS counter by adding /?fps to the end of the url. Example of this below:  ","version":"Next","tagName":"h2"},{"title":"How to change Counter Modes/Graphs​","type":1,"pageTitle":"FPS Counter","url":"/docs/playable/optimise-your-builds/fps-counter#how-to-change-counter-modesgraphs","content":"Our FPS counter has 3 different modes you can switch between to view different kinds of data. You can cycle through each of them by clicking anywhere on the graph:  ","version":"Next","tagName":"h2"},{"title":"What data each counter/graph returns:​","type":1,"pageTitle":"FPS Counter","url":"/docs/playable/optimise-your-builds/fps-counter#what-data-each-countergraph-returns","content":"The first blue-tinted counter is the Frames Per Second counter.The second green-tinted counter tracks the time between the previous frame and the present in milliseconds.The third ruby/red-tinted counter tracks how much ram the playable is using up to run. (Depending on your device specifications this one may not show up) Though the third graph that indicates ram usage may not show up when you access your local host on your mobile device, you can still get an accurate reading by checking the output on your computer's browser. Most Mobile devices have built in frame limitations You will likely notice when testing on a mobile device that the framerate of your playable won't exceed 60fps (or in some cases 30fps on Android devices), this is because it is capped by the device's operating software. This is something that Luna has no control over. ","version":"Next","tagName":"h3"},{"title":"How to access your locally hosted develop build on your mobile device​","type":1,"pageTitle":"FPS Counter","url":"/docs/playable/optimise-your-builds/fps-counter#how-to-access-your-locally-hosted-develop-build-on-your-mobile-device","content":"","version":"Next","tagName":"h2"},{"title":"QR Code in Dev Environment​","type":1,"pageTitle":"FPS Counter","url":"/docs/playable/optimise-your-builds/fps-counter#qr-code-in-dev-environment","content":"info The latest version of Playable Plugin Plugin lets you run your development builds on other devices by simply scanning a QR code located in the Develop Environment. For more information click here. In the Dev Environment, you can access a QR code that will open the creative on another device when scanned. Please make sure that both devices are connected to the same network. ","version":"Next","tagName":"h3"},{"title":"Manual method​","type":1,"pageTitle":"FPS Counter","url":"/docs/playable/optimise-your-builds/fps-counter#manual-method","content":"To access your locally hosted build on your mobile device you will first need to check that the server for your playable is still running, to do so navigate to the develop tab in the Playable plugin window and check that it says 'stop server' rather than start:  You will also need to make sure that your phone and computer are both connected to the same local wireless network. (The easiest way to do so is to enable Wi-Fi hotspot on your mobile and connect your computer to it). After checking these 2 things, you will next need to find the IP address of your computer. Take your IP address and enter it into your phone's browser, but be sure to add the port you are using to host your playable on (by default it is 8000) and the argument for the FPS counter (/?fps). Done right it should look something like this: 192.168.x.y:8000/?fps. ","version":"Next","tagName":"h3"},{"title":"Possible Build Issues","type":0,"sectionRef":"#","url":"/docs/playable/optimise-your-builds/build-issues","content":"","keywords":"playable luna build error issue problem","version":"Next"},{"title":"Unity Export​","type":1,"pageTitle":"Possible Build Issues","url":"/docs/playable/optimise-your-builds/build-issues#unity-export","content":"","version":"Next","tagName":"h2"},{"title":"Assets Preprocess​","type":1,"pageTitle":"Possible Build Issues","url":"/docs/playable/optimise-your-builds/build-issues#assets-preprocess","content":"","version":"Next","tagName":"h2"},{"title":"Code Conversion​","type":1,"pageTitle":"Possible Build Issues","url":"/docs/playable/optimise-your-builds/build-issues#code-conversion","content":"","version":"Next","tagName":"h2"},{"title":"Compilation​","type":1,"pageTitle":"Possible Build Issues","url":"/docs/playable/optimise-your-builds/build-issues#compilation","content":"","version":"Next","tagName":"h2"},{"title":"Optimising Fonts","type":0,"sectionRef":"#","url":"/docs/playable/optimise-your-builds/optimising-assets/optimising-fonts","content":"","keywords":"font optimise reduce size playable luna","version":"Next"},{"title":"Alphabet​","type":1,"pageTitle":"Optimising Fonts","url":"/docs/playable/optimise-your-builds/optimising-assets/optimising-fonts#alphabet","content":"This controls which characters get rasterized into an atlas. It defaults to lower- and upper-case English characters, punctuation, digits and some other symbols like + and -. Each character listed here is going to end up in an atlas produced by Luna. Here you can remove characters that aren't being used in your playable. It wont impact size as much as Textures and Audio, but its worth doing if youre aiming for 2MB. No dynamic fonts Playable Plugin doesn't support dynamically adding characters to an atlas for performance reasons. It means developers should pre-configure the atlas with all the characters they might need in runtime, otherwise the glyph will not be rendered. ","version":"Next","tagName":"h3"},{"title":"Glyph Size​","type":1,"pageTitle":"Optimising Fonts","url":"/docs/playable/optimise-your-builds/optimising-assets/optimising-fonts#glyph-size","content":"This controls line height, measured in pixels, for the rasterization tool. Bigger sizes allow for crispier fonts, especially at bigger font sizes, but glyphs take more space in the atlas. The glyphs will also take a minimum amount of space required, and the whole atlas will be of a minimum Power Of Two size to hold all the characters requested. ","version":"Next","tagName":"h3"},{"title":"Font Texture Size​","type":1,"pageTitle":"Optimising Fonts","url":"/docs/playable/optimise-your-builds/optimising-assets/optimising-fonts#font-texture-size","content":"This controls the file size and thus the overall quality of your font: The lower the file size, the lower the quality. ","version":"Next","tagName":"h3"},{"title":"Per-font settings​","type":1,"pageTitle":"Optimising Fonts","url":"/docs/playable/optimise-your-builds/optimising-assets/optimising-fonts#per-font-settings","content":"All of the above settings are also available on a per-folder and per-font level. Developers can choose a folder of a file by ticking a checkbox in &quot;Per-font settings&quot; section of the window and use the same fields to tweak parameters of a specific fonts(s):  ","version":"Next","tagName":"h2"},{"title":"Dynamic Batching","type":0,"sectionRef":"#","url":"/docs/playable/optimise-your-builds/dynamic-batching","content":"","keywords":"luna dynamic batching playable luna","version":"Next"},{"title":"Draw Call Conditions​","type":1,"pageTitle":"Dynamic Batching","url":"/docs/playable/optimise-your-builds/dynamic-batching#draw-call-conditions","content":"A single draw call is batchable if the following conditions are met: The Dynamic Batching option is enabled in the Playable Plugin Window.The Mesh used by the draw call is indexed (uses Index Buffer).The draw call is not rendered using instanced rendering (e.g. particle systems are not batchable). caution Skinned meshes are not batchable. Two draw calls could be batched if the following conditions are met: The Material instance used by both draw calls is the same.The shader keywords used by both draw calls are the same. Both draw calls should use the same shader features (e.g. lightmaps, shadows). Mesh parameters/Uniforms used in rendering are the same for both draw calls.Sort keys are the same. The rendering order of the draw call could be changed without an effect on the rendered frame. The layout of the Vertex Buffer should be the same for both draw calls. Both meshes should have similar data (e.g. Position, Texture Coordinates, Color). caution Dynamic Batching cannot be applied to GameObjects that have mirroring within their Transform component. For example, if two GameObjects have different scales, with one having a scale of 1 and the other having a scale of -1, they cannot be batched together. See Unity Documentation for more details. ","version":"Next","tagName":"h2"},{"title":"How does Dynamic Batching work with Playable Plugin?​","type":1,"pageTitle":"Dynamic Batching","url":"/docs/playable/optimise-your-builds/dynamic-batching#how-does-dynamic-batching-work-with-playable-plugin","content":"Playable tries to lower pressure on both CPU and GPU by not calculating batches every frame, instead it caches previously allocated batches, and recalculates them only when there is a breaking change that makes some of the batch data incorrect. This could occur if any of the following conditions are met: The hierarchy of the scene has changed The affected batches will be recalculated. The vertex buffer of one or more of the instances has changed (typically happens during animations).The mesh parameters have changed. However, Playable will not recalculate batches if there was any other changes. A position change, for example, reuses previously allocated batches. Although data buffers that contain vertices and indices will remain unchanged, modifications to the transform (position, rotation, or scale) will result in changes to the Model matrix, which are then applied and updated. This approach saves rendering time while maintaining the visual integrity of the image. ","version":"Next","tagName":"h2"},{"title":"Examples​","type":1,"pageTitle":"Dynamic Batching","url":"/docs/playable/optimise-your-builds/dynamic-batching#examples","content":"Example 1Example 2Example 3  ","version":"Next","tagName":"h3"},{"title":"Supported Features​","type":1,"pageTitle":"Dynamic Batching","url":"/docs/playable/optimise-your-builds/dynamic-batching#supported-features","content":"Name\tSupported\tCommentUI\tYes\tSupports all types of Canvas UI (Overlay, Camera, World), and all built-in UI elements (Image, Text, Toggle, etc.) 2D\tYes 3D\tYes\tExcept: Particle Systems and Skinned Meshes Built-in Rendering Pipeline (BIRP)\tYes Universal Rendering Pipeline (URP)\tNo\tDynamic Batching works only in BIRP at the moment High Definition Rendering Pipeline (HDRP)\tNo\tDynamic Batching works only in BIRP at the moment ","version":"Next","tagName":"h2"},{"title":"Unity versions support​","type":1,"pageTitle":"Dynamic Batching","url":"/docs/playable/optimise-your-builds/dynamic-batching#unity-versions-support","content":"Dynamic Batching works on all versions of Unity that Playable can run. ","version":"Next","tagName":"h2"},{"title":"Limitations and Performance Characteristics​","type":1,"pageTitle":"Dynamic Batching","url":"/docs/playable/optimise-your-builds/dynamic-batching#limitations-and-performance-characteristics","content":"Dynamic Batching could increase performance in some scenes, especially if the scene contains many similar objects that are close to each other in the hierarchy. For other scenes, if there are many/all different objects or similar objects scattered across the hierarchy, it does not impact performance or make it inefficient for some devices. Please, measure performance on the target devices to see the performance changes for the scene while using Dynamic Batching. If there is a breaking change in the batch (see the previous section for details) the Playable Plugin will regenerate this batch by allocating new GPU buffers and merging meshes together. In cases where breaking changes occur frequently for many batches, performance can be worse than if Dynamic Batching wasn't used. The amount of draw calls that could be batched together and the time to make a batch depends on device capabilities. On some low-end devices if scene contains many complex objects (complex meshes or shaders), Dynamic Batching could perform worse than regular rendering without Dynamic Batching. ","version":"Next","tagName":"h2"},{"title":"Recommendations for using Dynamic Batching​","type":1,"pageTitle":"Dynamic Batching","url":"/docs/playable/optimise-your-builds/dynamic-batching#recommendations-for-using-dynamic-batching","content":"Use the same material for multiple objects.Keep similar objects close in the hierarchy.Animated objects should be separated from non-animated objects in the hierarchy.Try to group objects in the hierarchy the same way as described in the above. See conditions for when two draw calls could be batched. Measure the playable performance on the target device. important If Dynamic Batching is negatively impacting performance or resulting in distortions in the final image, it is recommended to turn it off. Please report any issues with Dynamic Batching to our support team via Creative Suite Intercom. ","version":"Next","tagName":"h3"},{"title":"User Guide​","type":1,"pageTitle":"Dynamic Batching","url":"/docs/playable/optimise-your-builds/dynamic-batching#user-guide","content":"Open a project of your choice.Import the Playable Plugin plugin.Create or open existing scene.Add batchable objects to your scene. see our supported features for Dynamic Batching to check what objects are batchable. Open the Playable Plugin Window and enable Dynamic Batching: Check Settings → Advanced → Dynamic Batching option Export the project and test the results: You can make sure batching is working by taking a look at the frame debugger (See the spector argument documentation). In the captured frame you could see that some of the draw calls are rendering several objects (use scene with disabled Dynamic Batching for comparison).You can also toggle Dynamic Batching in runtime, and measure performance, for that you could use built-in fps counter. See FPS Counter. ","version":"Next","tagName":"h2"},{"title":"Adding customizable fields","type":0,"sectionRef":"#","url":"/docs/playable/javascript-playables/playground-fields","content":"","keywords":"playable playground luna javascript external externally setup step by step-by-step guide how to","version":"Next"},{"title":"Adding Creative Suite fields to a playable​","type":1,"pageTitle":"Adding customizable fields","url":"/docs/playable/javascript-playables/playground-fields#adding-creative-suite-fields-to-a-playable","content":"","version":"Next","tagName":"h2"},{"title":"1. Open playground.json configuration file and locate \"fields\" key.​","type":1,"pageTitle":"Adding customizable fields","url":"/docs/playable/javascript-playables/playground-fields#1-open-playgroundjson-configuration-file-and-locate-fields-key","content":"","version":"Next","tagName":"h3"},{"title":"2. Add as many fields as you like.​","type":1,"pageTitle":"Adding customizable fields","url":"/docs/playable/javascript-playables/playground-fields#2-add-as-many-fields-as-you-like","content":"Each field is defined as a simple JSON object residing under specific class name and field name. Let's take this by example: consider the below playground.json: { &quot;title&quot;: &quot;Basic Playable&quot;, &quot;icon&quot;: &quot;&quot;, // Icon next to the playable in Creative Suite, takes a Data URL. &quot;fields&quot;: { &quot;MyClass&quot;: { &quot;MyField&quot;: { &quot;title&quot;: &quot;Field Title&quot;, &quot;type&quot;: &quot;string&quot;, &quot;defaultValue&quot;: &quot;hello, there!&quot;, &quot;section&quot;: &quot;&quot;, &quot;order&quot;: 0, &quot;localization&quot;: 0, &quot;options&quot;: {} } } } }  The name of the class (MyClass in the above example) and the field (MyField above) are arbitrary - feel free to use whatever makes sense in your setup. Multiple fields can share the same class name, but the pair class name + field name should be unique. Please keep in mind, however, that updating the playable (uploading a new archive in the place of the previously uploaded one) will take those in consideration trying to match the fields based on the combination of class and field name. For instance, if you keep names the same and do not change field type, it will be retained in all versions keeping the values previously set through the Creative Suite. Let us summarize all available field types: type\tDescription\tAdditional notesstring\tA string value, can be multi-line\t&quot;defaultValue&quot; should be a string, i.e. &quot;not set&quot; int32\tAn int32 value\t&quot;defaultValue&quot; should be an int32, i.e. 100 float\tA floating-point value\t&quot;defaultValue&quot; can be any number, i.e. 100.12 bool\tA boolean value\t&quot;defaultValue&quot; can be 0 or 1 enum\tAn integer value with preset list of options\t&quot;options&quot; key is expected to contain allowed entries, i.e. { &quot;0&quot;: &quot;Level 0&quot;, &quot;1&quot;: &quot;Level 1&quot; } color\tAn RGBA color value\t&quot;defaultValue&quot; should be an array of 4 values of RGBA components, in 0..1 range, i.e. [ 1, 0, 0, 1 ] vector2\tA 2 component vector\t&quot;defaultValue&quot; should be an array of 2 values, i.e. [ 100, 200 ] vector3\tA 3 component vector\t&quot;defaultValue&quot; should be an array of 3 values, i.e. [ 100, 200, 300 ] vector4\tA 4 component vector\t&quot;defaultValue&quot; should be an array of 4 values, i.e. [ 100, 200, 300, 400 ] ","version":"Next","tagName":"h3"},{"title":"Constraints​","type":1,"pageTitle":"Adding customizable fields","url":"/docs/playable/javascript-playables/playground-fields#constraints","content":"You can add a constraints object to a field to set limits for its values, this will stop values entered in Creative Suite going under/over the set min/max. An example of adding a constraints object to a field can be seen below. Setting int/float constraints If you make use of both the value_min &amp; value_max constraints, your field will appear as a range slider in Creative Suite. value_step can also be added in order to control at what value the slider increments at, though it is not required in order for a slider to function. By default sliders in Creative Suite will increment by 1 if the slider is affecting an int value, and for float values the default is the difference between the minimum and maximum slider values divided by 100 (max - min)/100. name\tDescription\tAdditional notesvalue_min\tint32/float value\tSet a minimum value for an int or float field value_max\tint32/float value\tSet a maximum value for an int or float field value_step\tint32/float value\tSet the increment value for an int or float field Example &quot;mySlider&quot;:{ &quot;title&quot;: &quot;mySlider&quot;, &quot;type&quot;: &quot;int32&quot;, &quot;defaultValue&quot;: 10, &quot;constraints&quot;: { &quot;value_min&quot;:1, &quot;value_max&quot;:15, &quot;value_step&quot;:1 } }  Setting array constraints If you have an array of Vectors or Colors, you can set the minimum and/or maximum length of said array using the constraints below. Arrays can function in Creative Suite without min or max lengths set, however they will not have limits on the amount of items allowed to be entered into them. name\tDescription\tAdditional notesarray_min_length\tint32/float value\tSet a minimum value for an int or float field array_max_length\tint32/float value\tSet a maximum value for an int or float field Example &quot;myVec3Array&quot;:{ &quot;title&quot;: &quot;myVec3Array&quot;, &quot;type&quot;: &quot;vector3[]&quot;, &quot;defaultValue&quot;: [ [2,4,6], [1,3,5] ], &quot;constraints&quot;: { &quot;array_min_length&quot;:0, &quot;array_max_length&quot;:3 } }  ","version":"Next","tagName":"h3"},{"title":"3. Add JavaScript code to use the values from your playable​","type":1,"pageTitle":"Adding customizable fields","url":"/docs/playable/javascript-playables/playground-fields#3-add-javascript-code-to-use-the-values-from-your-playable","content":"In order to grab the value of the Creative Suite Field, please use Luna.Unity.Playground.get. Since you might want to test your playable locally, don't forget to check for Luna API presence before calling the API, i.e. function startGame() { // initialize your game as normal // ... // check if Luna is defined meaning Creative Suite API is available if ('Luna' in window) { const myValue = Luna.Unity.Playground.get( 'MyClass', 'MyField', 'fallback value' ); // do something with myValue // ... } // continue to initialize your game as normal :) // ... }  The Luna.Unity.Playground.get will return a value of corresponding type: if the Creative Suite Field is defined to be a string, a string will be returned; if it's vector, an array will be returned and so on. Color fields allow you to pass an additional, 4th argument to Luna.Unity.Playground.get with the value set to rgba which will make it return a CSS-compatible string corresponding to the color, i.e. #ff00ffff. ","version":"Next","tagName":"h3"},{"title":"Ready-to-use example​","type":1,"pageTitle":"Adding customizable fields","url":"/docs/playable/javascript-playables/playground-fields#ready-to-use-example","content":"Feel free to check the example residing at https://github.com/LunaCommunity/Playable-Examples/tree/master/full for a minimal setup of a playable using Playground Fields. ","version":"Next","tagName":"h2"},{"title":"Localize your fields​","type":1,"pageTitle":"Adding customizable fields","url":"/docs/playable/javascript-playables/playground-fields#localize-your-fields","content":"Creative Suite fields can be localised by adding a new property to the playground.json file. This feature aims to help users increment the level of communication within teams. Here is a step-by-step process that will help you implement localisation for your Playground Fields: Extract zipped files - Open the zip file called playground.zip, then extract its content. Modify the playground.json file - The playground.json file can be found between the extracted files. In order to localize your Creative Suite Fields you will need to add the localized_field_title property to the field object. This will be an object too with a list of all possible translation the field can have. The example below shows a language code (ru-RU) followed by the translation for that Creative Suite field in Russian. &quot;fields&quot;: { &quot;Settings&quot;: { &quot;ButtonTitle&quot;: { &quot;title&quot;: &quot;Button Title&quot;, &quot;type&quot;: &quot;string&quot;, &quot;defaultValue&quot;: &quot;hello, there!&quot;, // The property below is responsible for the field localization &quot;localized_field_title&quot;: { &quot;ru-RU&quot;: &quot;Текст кнопки&quot;, } } } } You can also add multiple translation properties: &quot;localized_field_title&quot;: { &quot;ru-RU&quot;: &quot;Текст кнопки&quot;, &quot;zh-CN&quot;: &quot;按钮文本&quot;, &quot;ja-JP&quot;: &quot;ボタンテキスト&quot;, &quot;it-IT&quot;: &quot;Testo del pulsante&quot; // and more! } Zip the files again - Once you added your translations for your Luna fields, save the JSON file and zip all of the folder content again.  Upload the zip file to Creative Suite - Open Creative Suite, then select or create an app for your build. Press on + Concept and drag &amp; drop the new zip file into the pop up window.  Add language parameter to your Creative Suite URL - Finally - after Creative Suite completed the uploading of your build - open the creative and add ?lng= in your address bar, at the end of the existing URL. Your fields will translate according to what parameter you are passing through the query. In the example below we used ru-RU for Russian.  ","version":"Next","tagName":"h2"},{"title":"Adding hints to a field in Creative Suite​","type":1,"pageTitle":"Adding customizable fields","url":"/docs/playable/javascript-playables/playground-fields#adding-hints-to-a-field-in-creative-suite","content":"In the playground.json file you can add another attribute to your playable fields: localized_field_hint. By using this attribute, you can indicate what the field is used for, as well as add different translations to the hint. Here is an example of how to add this field to your playground.json file: { &quot;title&quot;: &quot;....&quot;, &quot;fields&quot;: { &quot;Settings&quot;: { &quot;ButtonTitle&quot;: { &quot;title&quot;: &quot;Button Title&quot;, &quot;type&quot;: &quot;string&quot;, &quot;defaultValue&quot;: &quot;hello, there!&quot;, &quot;localized_field_hint&quot;: { &quot;ru-RU&quot;: &quot;Этот текст будет виден на кнопке&quot;, &quot;en-US&quot;: &quot;This text will be visible on CTA button&quot; } } } } }  In Creative Suite, a tooltip will appear next to the field that contains the hint.  To achieve this, compress your build files with the updated playground.json and upload the build into Creative Suite. By using the ?lng= parameter in your address bar, it is possible to switch between the different localisations added to the hint attribute. This is exaplained in more details above. ","version":"Next","tagName":"h2"},{"title":"Incompatible Names","type":0,"sectionRef":"#","url":"/docs/playable/code/incompatible-names","content":"","keywords":"luna classes c# monobehaviour names","version":"Next"},{"title":"C# class names to avoid​","type":1,"pageTitle":"Incompatible Names","url":"/docs/playable/code/incompatible-names#c-class-names-to-avoid","content":"'Object', 'Function', 'Array', 'Number', 'Infinity', 'NaN', 'undefined', 'Boolean', 'String', 'Symbol', 'Date', 'Promise', 'RegExp', 'Error', 'AggregateError', 'EvalError', 'RangeError', 'ReferenceError', 'SyntaxError', 'TypeError', 'URIError', 'globalThis', 'JSON', 'Math', 'Intl', 'ArrayBuffer', 'Uint8Array', 'Int8Array', 'Uint16Array', 'Int16Array', 'Uint32Array', 'Int32Array', 'Float32Array', 'Float64Array', 'Uint8ClampedArray', 'BigUint64Array', 'BigInt64Array', 'DataView', 'Map', 'BigInt', 'Set', 'WeakMap', 'WeakSet', 'Proxy', 'Reflect', 'FinalizationRegistry', 'WeakRef', 'console', 'Option', 'Image', 'Audio', 'webkitURL', 'webkitRTCPeerConnection', 'webkitMediaStream', 'WebKitMutationObserver', 'WebKitCSSMatrix', 'XPathResult', 'XPathExpression', 'XPathEvaluator', 'XMLSerializer', 'XMLHttpRequestUpload', 'XMLHttpRequestEventTarget', 'XMLHttpRequest', 'XMLDocument', 'WritableStreamDefaultWriter', 'WritableStreamDefaultController', 'WritableStream', 'Worker', 'Window', 'WheelEvent', 'WebSocket', 'WebGLVertexArrayObject', 'WebGLUniformLocation', 'WebGLTransformFeedback', 'WebGLTexture', 'WebGLSync', 'WebGLShaderPrecisionFormat', 'WebGLShader', 'WebGLSampler', 'WebGLRenderingContext', 'WebGLRenderbuffer', 'WebGLQuery', 'WebGLProgram', 'WebGLFramebuffer', 'WebGLContextEvent', 'WebGLBuffer', 'WebGLActiveInfo', 'WebGL2RenderingContext', 'WaveShaperNode', 'VisualViewport', 'ValidityState', 'VTTCue', 'UserActivation', 'URLSearchParams', 'URL', 'UIEvent', 'TreeWalker', 'TransitionEvent', 'TransformStream', 'TrackEvent', 'TouchList', 'TouchEvent', 'Touch', 'TimeRanges', 'TextTrackList', 'TextTrackCueList', 'TextTrackCue', 'TextTrack', 'TextMetrics', 'TextEvent', 'TextEncoderStream', 'TextEncoder', 'TextDecoderStream', 'TextDecoder', 'Text', 'TaskAttributionTiming', 'SyncManager', 'SubmitEvent', 'StyleSheetList', 'StyleSheet', 'StylePropertyMapReadOnly', 'StylePropertyMap', 'StorageEvent', 'Storage', 'StereoPannerNode', 'StaticRange', 'ShadowRoot', 'Selection', 'SecurityPolicyViolationEvent', 'ScriptProcessorNode', 'ScreenOrientation', 'Screen', 'SVGViewElement', 'SVGUseElement', 'SVGUnitTypes', 'SVGTransformList', 'SVGTransform', 'SVGTitleElement', 'SVGTextPositioningElement', 'SVGTextPathElement', 'SVGTextElement', 'SVGTextContentElement', 'SVGTSpanElement', 'SVGSymbolElement', 'SVGSwitchElement', 'SVGStyleElement', 'SVGStringList', 'SVGStopElement', 'SVGSetElement', 'SVGScriptElement', 'SVGSVGElement', 'SVGRectElement', 'SVGRect', 'SVGRadialGradientElement', 'SVGPreserveAspectRatio', 'SVGPolylineElement', 'SVGPolygonElement', 'SVGPointList', 'SVGPoint', 'SVGPatternElement', 'SVGPathElement', 'SVGNumberList', 'SVGNumber', 'SVGMetadataElement', 'SVGMatrix', 'SVGMaskElement', 'SVGMarkerElement', 'SVGMPathElement', 'SVGLinearGradientElement', 'SVGLineElement', 'SVGLengthList', 'SVGLength', 'SVGImageElement', 'SVGGraphicsElement', 'SVGGradientElement', 'SVGGeometryElement', 'SVGGElement', 'SVGForeignObjectElement', 'SVGFilterElement', 'SVGFETurbulenceElement', 'SVGFETileElement', 'SVGFESpotLightElement', 'SVGFESpecularLightingElement', 'SVGFEPointLightElement', 'SVGFEOffsetElement', 'SVGFEMorphologyElement', 'SVGFEMergeNodeElement', 'SVGFEMergeElement', 'SVGFEImageElement', 'SVGFEGaussianBlurElement', 'SVGFEFuncRElement', 'SVGFEFuncGElement', 'SVGFEFuncBElement', 'SVGFEFuncAElement', 'SVGFEFloodElement', 'SVGFEDropShadowElement', 'SVGFEDistantLightElement', 'SVGFEDisplacementMapElement', 'SVGFEDiffuseLightingElement', 'SVGFEConvolveMatrixElement', 'SVGFECompositeElement', 'SVGFEComponentTransferElement', 'SVGFEColorMatrixElement', 'SVGFEBlendElement', 'SVGEllipseElement', 'SVGElement', 'SVGDescElement', 'SVGDefsElement', 'SVGComponentTransferFunctionElement', 'SVGClipPathElement', 'SVGCircleElement', 'SVGAnimationElement', 'SVGAnimatedTransformList', 'SVGAnimatedString', 'SVGAnimatedRect', 'SVGAnimatedPreserveAspectRatio', 'SVGAnimatedNumberList', 'SVGAnimatedNumber', 'SVGAnimatedLengthList', 'SVGAnimatedLength', 'SVGAnimatedInteger', 'SVGAnimatedEnumeration', 'SVGAnimatedBoolean', 'SVGAnimatedAngle', 'SVGAnimateTransformElement', 'SVGAnimateMotionElement', 'SVGAnimateElement', 'SVGAngle', 'SVGAElement', 'Response', 'ResizeObserverSize', 'ResizeObserverEntry', 'ResizeObserver', 'Request', 'ReportingObserver', 'ReadableStreamDefaultReader', 'ReadableStreamDefaultController', 'ReadableStreamBYOBRequest', 'ReadableStreamBYOBReader', 'ReadableStream', 'ReadableByteStreamController', 'Range', 'RadioNodeList', 'RTCTrackEvent', 'RTCStatsReport', 'RTCSessionDescription', 'RTCSctpTransport', 'RTCRtpTransceiver', 'RTCRtpSender', 'RTCRtpReceiver', 'RTCPeerConnectionIceEvent', 'RTCPeerConnectionIceErrorEvent', 'RTCPeerConnection', 'RTCIceCandidate', 'RTCErrorEvent', 'RTCError', 'RTCEncodedVideoFrame', 'RTCEncodedAudioFrame', 'RTCDtlsTransport', 'RTCDataChannelEvent', 'RTCDataChannel', 'RTCDTMFToneChangeEvent', 'RTCDTMFSender', 'RTCCertificate', 'PromiseRejectionEvent', 'ProgressEvent', 'ProcessingInstruction', 'PopStateEvent', 'PointerEvent', 'PluginArray', 'Plugin', 'PeriodicWave', 'PerformanceTiming', 'PerformanceServerTiming', 'PerformanceResourceTiming', 'PerformancePaintTiming', 'PerformanceObserverEntryList', 'PerformanceObserver', 'PerformanceNavigationTiming', 'PerformanceNavigation', 'PerformanceMeasure', 'PerformanceMark', 'PerformanceLongTaskTiming', 'PerformanceEventTiming', 'PerformanceEntry', 'PerformanceElementTiming', 'Performance', 'Path2D', 'PannerNode', 'PageTransitionEvent', 'OverconstrainedError', 'OscillatorNode', 'OffscreenCanvasRenderingContext2D', 'OffscreenCanvas', 'OfflineAudioContext', 'OfflineAudioCompletionEvent', 'NodeList', 'NodeIterator', 'NodeFilter', 'Node', 'NetworkInformation', 'Navigator', 'NamedNodeMap', 'MutationRecord', 'MutationObserver', 'MutationEvent', 'MouseEvent', 'MimeTypeArray', 'MimeType', 'MessagePort', 'MessageEvent', 'MessageChannel', 'MediaStreamTrackEvent', 'MediaStreamEvent', 'MediaStreamAudioSourceNode', 'MediaStreamAudioDestinationNode', 'MediaStream', 'MediaRecorder', 'MediaQueryListEvent', 'MediaQueryList', 'MediaList', 'MediaError', 'MediaEncryptedEvent', 'MediaElementAudioSourceNode', 'MediaCapabilities', 'Location', 'LayoutShiftAttribution', 'LayoutShift', 'LargestContentfulPaint', 'KeyframeEffect', 'KeyboardEvent', 'IntersectionObserverEntry', 'IntersectionObserver', 'InputEvent', 'InputDeviceInfo', 'InputDeviceCapabilities', 'ImageData', 'ImageCapture', 'ImageBitmapRenderingContext', 'ImageBitmap', 'IdleDeadline', 'IIRFilterNode', 'IDBVersionChangeEvent', 'IDBTransaction', 'IDBRequest', 'IDBOpenDBRequest', 'IDBObjectStore', 'IDBKeyRange', 'IDBIndex', 'IDBFactory', 'IDBDatabase', 'IDBCursorWithValue', 'IDBCursor', 'History', 'Headers', 'HashChangeEvent', 'HTMLVideoElement', 'HTMLUnknownElement', 'HTMLUListElement', 'HTMLTrackElement', 'HTMLTitleElement', 'HTMLTimeElement', 'HTMLTextAreaElement', 'HTMLTemplateElement', 'HTMLTableSectionElement', 'HTMLTableRowElement', 'HTMLTableElement', 'HTMLTableColElement', 'HTMLTableCellElement', 'HTMLTableCaptionElement', 'HTMLStyleElement', 'HTMLSpanElement', 'HTMLSourceElement', 'HTMLSlotElement', 'HTMLSelectElement', 'HTMLScriptElement', 'HTMLQuoteElement', 'HTMLProgressElement', 'HTMLPreElement', 'HTMLPictureElement', 'HTMLParamElement', 'HTMLParagraphElement', 'HTMLOutputElement', 'HTMLOptionsCollection', 'HTMLOptionElement', 'HTMLOptGroupElement', 'HTMLObjectElement', 'HTMLOListElement', 'HTMLModElement', 'HTMLMeterElement', 'HTMLMetaElement', 'HTMLMenuElement', 'HTMLMediaElement', 'HTMLMarqueeElement', 'HTMLMapElement', 'HTMLLinkElement', 'HTMLLegendElement', 'HTMLLabelElement', 'HTMLLIElement', 'HTMLInputElement', 'HTMLImageElement', 'HTMLIFrameElement', 'HTMLHtmlElement', 'HTMLHeadingElement', 'HTMLHeadElement', 'HTMLHRElement', 'HTMLFrameSetElement', 'HTMLFrameElement', 'HTMLFormElement', 'HTMLFormControlsCollection', 'HTMLFontElement', 'HTMLFieldSetElement', 'HTMLEmbedElement', 'HTMLElement', 'HTMLDocument', 'HTMLDivElement', 'HTMLDirectoryElement', 'HTMLDialogElement', 'HTMLDetailsElement', 'HTMLDataListElement', 'HTMLDataElement', 'HTMLDListElement', 'HTMLCollection', 'HTMLCanvasElement', 'HTMLButtonElement', 'HTMLBodyElement', 'HTMLBaseElement', 'HTMLBRElement', 'HTMLAudioElement', 'HTMLAreaElement', 'HTMLAnchorElement', 'HTMLAllCollection', 'GeolocationPositionError', 'GeolocationPosition', 'GeolocationCoordinates', 'Geolocation', 'GamepadHapticActuator', 'GamepadEvent', 'GamepadButton', 'Gamepad', 'GainNode', 'FormDataEvent', 'FormData', 'FontFaceSetLoadEvent', 'FontFace', 'FocusEvent', 'FileReader', 'FileList', 'File', 'FeaturePolicy', 'External', 'EventTarget', 'EventSource', 'EventCounts', 'Event', 'ErrorEvent', 'ElementInternals', 'Element', 'DynamicsCompressorNode', 'DragEvent', 'DocumentType', 'DocumentFragment', 'Document', 'DelayNode', 'DecompressionStream', 'DataTransferItemList', 'DataTransferItem', 'DataTransfer', 'DOMTokenList', 'DOMStringMap', 'DOMStringList', 'DOMRectReadOnly', 'DOMRectList', 'DOMRect', 'DOMQuad', 'DOMPointReadOnly', 'DOMPoint', 'DOMParser', 'DOMMatrixReadOnly', 'DOMMatrix', 'DOMImplementation', 'DOMException', 'DOMError', 'CustomEvent', 'CustomElementRegistry', 'Crypto', 'CountQueuingStrategy', 'ConvolverNode', 'ConstantSourceNode', 'CompressionStream', 'CompositionEvent', 'Comment', 'CloseEvent', 'ClipboardEvent', 'CharacterData', 'ChannelSplitterNode', 'ChannelMergerNode', 'CanvasRenderingContext2D', 'CanvasPattern', 'CanvasGradient', 'CanvasCaptureMediaStreamTrack', 'CSSVariableReferenceValue', 'CSSUnparsedValue', 'CSSUnitValue', 'CSSTranslate', 'CSSTransformValue', 'CSSTransformComponent', 'CSSSupportsRule', 'CSSStyleValue', 'CSSStyleSheet', 'CSSStyleRule', 'CSSStyleDeclaration', 'CSSSkewY', 'CSSSkewX', 'CSSSkew', 'CSSScale', 'CSSRuleList', 'CSSRule', 'CSSRotate', 'CSSPropertyRule', 'CSSPositionValue', 'CSSPerspective', 'CSSPageRule', 'CSSNumericValue', 'CSSNumericArray', 'CSSNamespaceRule', 'CSSMediaRule', 'CSSMatrixComponent', 'CSSMathValue', 'CSSMathSum', 'CSSMathProduct', 'CSSMathNegate', 'CSSMathMin', 'CSSMathMax', 'CSSMathInvert', 'CSSMathClamp', 'CSSKeywordValue', 'CSSKeyframesRule', 'CSSKeyframeRule', 'CSSImportRule', 'CSSImageValue', 'CSSGroupingRule', 'CSSFontFaceRule', 'CSSCounterStyleRule', 'CSSConditionRule', 'CSS', 'CDATASection', 'ByteLengthQueuingStrategy', 'BroadcastChannel', 'BlobEvent', 'Blob', 'BiquadFilterNode', 'BeforeUnloadEvent', 'BeforeInstallPromptEvent', 'BatteryManager', 'BaseAudioContext', 'BarProp', 'AudioWorkletNode', 'AudioScheduledSourceNode', 'AudioProcessingEvent', 'AudioParamMap', 'AudioParam', 'AudioNode', 'AudioListener', 'AudioDestinationNode', 'AudioContext', 'AudioBufferSourceNode', 'AudioBuffer', 'Attr', 'AnimationEvent', 'AnimationEffect', 'Animation', 'AnalyserNode', 'AbstractRange', 'AbortSignal', 'AbortController', 'window', 'self', 'document', 'name', 'location', 'customInteractive Templates', 'history', 'locationbar', 'menubar', 'personalbar', 'scrollbars', 'statusbar', 'toolbar', 'status', 'closed', 'frames', 'length', 'top', 'opener', 'parent', 'frameElement', 'navigator', 'origin', 'external', 'screen', 'innerWidth', 'innerHeight', 'scrollX', 'pageXOffset', 'scrollY', 'pageYOffset', 'visualViewport', 'screenX', 'screenY', 'outerWidth', 'outerHeight', 'devicePixelRatio', 'event', 'clientInformation', 'offscreenBuffering', 'screenLeft', 'screenTop', 'defaultStatus', 'defaultstatus', 'styleMedia', 'isSecureContext', 'performance', 'crypto', 'indexedDB', 'webkitStorageInfo', 'sessionStorage', 'localStorage', 'alert', 'atob', 'blur', 'btoa', 'focus', 'postMessage', 'queueMicrotask', 'requestAnimationFrame', 'requestIdleCallback', 'scroll', 'structuredClone', 'webkitCancelAnimationFrame', 'webkitRequestAnimationFrame', 'Atomics', 'chrome', 'WebAssembly', 'caches', 'cookieStore', 'AbsoluteOrientationSensor', 'Accelerometer', 'AudioWorklet', 'Cache', 'CacheStorage', 'Clipboard', 'ClipboardItem', 'CookieChangeEvent', 'CookieStore', 'CookieStoreManager', 'Credential', 'CredentialsContainer', 'CryptoKey', 'DeviceMotionEvent', 'DeviceMotionEventAcceleration', 'DeviceMotionEventRotationRate', 'DeviceOrientationEvent', 'FederatedCredential', 'Gyroscope', 'Keyboard', 'KeyboardLayoutMap', 'LinearAccelerationSensor', 'Lock', 'LockManager', 'MIDIAccess', 'MIDIConnectionEvent', 'MIDIInput', 'MIDIInputMap', 'MIDIMessageEvent', 'MIDIOutput', 'MIDIOutputMap', 'MIDIPort', 'MediaDeviceInfo', 'MediaDevices', 'MediaKeyMessageEvent', 'MediaKeySession', 'MediaKeyStatusMap', 'MediaKeySystemAccess', 'MediaKeys', 'NavigationPreloadManager', 'NavigatorManagedData', 'OrientationSensor', 'PasswordCredential', 'RTCIceTransport', 'RelativeOrientationSensor', 'Sensor', 'SensorErrorEvent', 'ServiceWorker', 'ServiceWorkerContainer', 'ServiceWorkerRegistration', 'StorageManager', 'SubtleCrypto', 'Worklet', 'XRDOMOverlayState', 'XRLayer', 'XRWebGLBinding', 'AudioData', 'EncodedAudioChunk', 'EncodedVideoChunk', 'ImageTrack', 'ImageTrackList', 'VideoColorSpace', 'VideoFrame', 'AudioDecoder', 'AudioEncoder', 'ImageDecoder', 'VideoDecoder', 'VideoEncoder', 'AuthenticatorAssertionResponse', 'AuthenticatorAttestationResponse', 'AuthenticatorResponse', 'PublicKeyCredential', 'BarcodeDetector', 'Bluetooth', 'BluetoothCharacteristicProperties', 'BluetoothDevice', 'BluetoothRemoteGATTCharacteristic', 'BluetoothRemoteGATTDescriptor', 'BluetoothRemoteGATTServer', 'BluetoothRemoteGATTService', 'CanvasFilter', 'EyeDropper', 'FileSystemDirectoryHandle', 'FileSystemFileHandle', 'FileSystemHandle', 'FileSystemWritableFileStream', 'FragmentDirective', 'GravitySensor', 'HID', 'HIDConnectionEvent', 'HIDDevice', 'HIDInputReportEvent', 'IdleDetector', 'MediaStreamTrackGenerator', 'MediaStreamTrackProcessor', 'OTPCredential', 'PaymentAddress', 'PaymentRequest', 'PaymentResponse', 'PaymentMethodChangeEvent', 'Presentation', 'PresentationAvailability', 'PresentationConnection', 'PresentationConnectionAvailableEvent', 'PresentationConnectionCloseEvent', 'PresentationConnectionList', 'PresentationReceiver', 'PresentationRequest', 'Profiler', 'Scheduling', 'ScreenDetailed', 'ScreenDetails', 'Serial', 'SerialPort', 'USB', 'USBAlternateInterface', 'USBConfiguration', 'USBConnectionEvent', 'USBDevice', 'USBEndpoint', 'USBInTransferResult', 'USBInterface', 'USBIsochronousInTransferPacket', 'USBIsochronousInTransferResult', 'USBIsochronousOutTransferPacket', 'USBIsochronousOutTransferResult', 'USBOutTransferResult', 'VirtualKeyboard', 'WakeLock', 'WakeLockSentinel', 'WebTransport', 'WebTransportBidirectionalStream', 'WebTransportDatagramDuplexStream', 'WebTransportError', 'XRAnchor', 'XRAnchorSet', 'XRBoundedReferenceSpace', 'XRFrame', 'XRInputSource', 'XRInputSourceArray', 'XRInputSourceEvent', 'XRInputSourcesChangeEvent', 'XRPose', 'XRReferenceSpace', 'XRReferenceSpaceEvent', 'XRRenderState', 'XRRigidTransform', 'XRSession', 'XRSessionEvent', 'XRSpace', 'XRSystem', 'XRView', 'XRViewerPose', 'XRViewport', 'XRWebGLLayer', 'XRCPUDepthInformation', 'XRDepthInformation', 'XRWebGLDepthInformation', 'XRHitTestResult', 'XRHitTestSource', 'XRRay', 'XRTransientInputHitTestResult', 'XRTransientInputHitTestSource', 'XRLightEstimate', 'XRLightProbe', 'originAgentCluster', 'trustedTypes', 'speechSynthesis', 'crossOriginIsolated', 'scheduler', 'AnimationPlaybackEvent', 'AnimationTimeline', 'CSSAnimation', 'CSSTransition', 'DocumentTimeline', 'BackgroundFetchManager', 'BackgroundFetchRecord', 'BackgroundFetchRegistration', 'BluetoothUUID', 'CSSLayerBlockRule', 'CSSLayerStatementRule', 'CustomStateSet', 'DelegatedInkTrailPresenter', 'Ink', 'MediaMetadata', 'MediaSession', 'MediaSource', 'SourceBuffer', 'SourceBufferList', 'MediaStreamTrack', 'NavigatorUAData', 'Notification', 'PaymentInstruments', 'PaymentManager', 'PaymentRequestUpdateEvent', 'PeriodicSyncManager', 'PermissionStatus', 'Permissions', 'PictureInPictureEvent', 'PictureInPictureWindow', 'PushManager', 'PushSubscription', 'PushSubscriptionOptions', 'RemotePlayback', 'Scheduler', 'TaskController', 'TaskPriorityChangeEvent', 'TaskSignal', 'SharedWorker', 'SpeechSynthesisErrorEvent', 'SpeechSynthesisEvent', 'SpeechSynthesisUtterance', 'TrustedHTML', 'TrustedScript', 'TrustedScriptURL', 'TrustedTypePolicy', 'TrustedTypePolicyFactory', 'URLPattern', 'VideoPlaybackQuality', 'VirtualKeyboardGeometryChangeEvent', 'XSLTProcessor', 'webkitSpeechGrammar', 'webkitSpeechGrammarList', 'webkitSpeechRecognition', 'webkitSpeechRecognitionError', 'webkitSpeechRecognitionEvent', 'webkitRequestFileSystem', 'webkitResolveLocalFileSystemURL', 'EmberENV', 'lunaStartup', 'pi', 'DEBUG', 'TRACE', 'DEVELOP', 'TESTS', 'FORCE_STABLE_RANDOM_SEED', 'TouchEmulator', 'ace', 'SPECTOR', 'audioVolumeToggle', 'spector', 'Deserializers', 'pc', 'traceResults', 'Bridge', 'shaderVariantsTraceResults', 'System', 'planck', 'Goblin', 'LunaUnity', 'utf8ArrayToStr', 'UnityEngine', 'Luna', 'Playcanvas', 'SelectionBase', 'UnityEditor', 'UnityTest', 'TMPro', 'app', 'ShaderProgramsLibrary', 'dir', 'dirxml', 'profile', 'profileEnd', 'table', 'keys', 'values', 'copy', 'queryObjects',  ","version":"Next","tagName":"h2"},{"title":"MonoBehaviour field names to avoid​","type":1,"pageTitle":"Incompatible Names","url":"/docs/playable/code/incompatible-names#monobehaviour-field-names-to-avoid","content":"'MonoHandle', 'timers', 'methodCoroutines', 'Handle', 'Attributes&lt;T&gt;', 'ConfigureForEntity', 'Entity', 'SystemName', 'RendererType', 'Code', 'IsScript', 'On', 'Off', 'EnqueueDestroy', 'MakePrimitiveTypeAliases', 'instanceId', 'instanceIdCounter', 'Destroyed', 'FromHandle&lt;T&gt;', 'SetHandle', 'InstantiateInternal&lt;T&gt;', 'CheckDestroyed',  ","version":"Next","tagName":"h2"},{"title":"Optimising Shaders","type":0,"sectionRef":"#","url":"/docs/playable/optimise-your-builds/optimising-assets/optimising-shaders","content":"","keywords":"shader optimise reduce size playable luna","version":"Next"},{"title":"Shaders Tab​","type":1,"pageTitle":"Optimising Shaders","url":"/docs/playable/optimise-your-builds/optimising-assets/optimising-shaders#shaders-tab","content":"In the Luna UI, select Runtime Analysis → Shaders to access the Runtime Analysis Shaders tab. In this view, you can find a list of any shaders or shader variants that have been activated while testing in a develop build. Use this tab to confirm that Luna is using only shaders that are relevant to your project.   After your first develop build you will be able to see your projects shaders and modify them.   If your project contains an excessive number of shaders, you will receive a warning (image below).   This is the total count of shaders that were exported to your develop build.   This is the total count of shaders that were actually used in develop build and will be exported to platform build (Creative Suite or any other ad network build). We recommend having 20 or less shaders for platform builds.  ","version":"Next","tagName":"h2"},{"title":"Search Bar​","type":1,"pageTitle":"Optimising Shaders","url":"/docs/playable/optimise-your-builds/optimising-assets/optimising-shaders#search-bar","content":"Users can utilize the search bar to find specific a Shader, Pass or Variant quickly.   caution The search bar is case-insensitive! Uppercase and lowercase letters are interpreted as the same. The following search query syntax is available: ShaderNameShaderName/PassNameShaderName/PassName/Keyword1/Keyword2/…/KeywordNShaderName/Keyword1/Keyword2/…/KeywordNPassName/Keyword1/Keyword2/…/KeywordNKeyword1/Keyword2/…/KeywordN For example:   ","version":"Next","tagName":"h3"},{"title":"Shaders List​","type":1,"pageTitle":"Optimising Shaders","url":"/docs/playable/optimise-your-builds/optimising-assets/optimising-shaders#shaders-list","content":"The shaders list allows an easy control over your project's shader variants.   Show/Hide excluded variants in the view. Exclude specific shader variants. This affects all build types ( e.g. develop, ads, runtime analysis ). Be careful! GameObjects using excluded or unsupported shader variants will have the error shader applied. Restoring the excluded variant will fix the problem. When a shader variant isn't found on Creative Suite builds, Luna will find and apply another that matches it most closely. Include shader variants to the active list or/and removes shaders from excluded list. ","version":"Next","tagName":"h3"},{"title":"Add Shader Variants​","type":1,"pageTitle":"Optimising Shaders","url":"/docs/playable/optimise-your-builds/optimising-assets/optimising-shaders#add-shader-variants","content":"Sometimes, if a shader is used/set via script - it cannot be found automatically on build time. However, it's not a problem as you can manually add any Shader/Pass/Variant to the build by using the Add Shader and Variants section in the Shaders Tab. Below you can find a description for each UI element and their functions.  Shader asset picker - Default Unity asset picker.  Shader pass type dropdown - Contains all shader passes supported by Luna.  Add button - Add selected shader variant to included variants.  Keywords search - Search for keywords using their names or parts of their names.  Keywords selector - Show and toggle all pass keywords supported by Luna.  ","version":"Next","tagName":"h3"},{"title":"Luna Shader Variant Collection​","type":1,"pageTitle":"Optimising Shaders","url":"/docs/playable/optimise-your-builds/optimising-assets/optimising-shaders#luna-shader-variant-collection","content":"Luna Shader Variant Collection - or SVC_Luna - contains all the information about the shader variants that are in the project (created automatically during build process). This file is used to share shader information among the team, and can reside in git. It provides different information to the users: Shader variant used on scenes: the count of shader variants that were detected on exported scenes (information collected/renewed at build time). This includes unsupported shader variants as well. Shader variants ( Runtime Analysis ): the number of shader variants detected by Runtime Analysis after build. Shader variants included by user: the number of shader variants that were manually included by the user. Shader variants excluded by user: the number of shader variants that were manually excluded by the user. Parsed shaders: the number of shaders that were processed and cached during the export stage. Your next export will use these shaders to accelerate the process. In order for them to be deleted, you must delete all shader variants listed above (1-4) because they are dependent on parsed shaders. By setting useShadersCache = false in luna.json, you can prevent Luna from using cached shaders.  ","version":"Next","tagName":"h2"},{"title":"Modified Shaders​","type":1,"pageTitle":"Optimising Shaders","url":"/docs/playable/optimise-your-builds/optimising-assets/optimising-shaders#modified-shaders","content":"When a shader detected by Runtime Analysis is modified, a warning message appears:  Shaders that have been modified will be removed from the list of shaders and the list of parsed shaders. This means that in the next export, auto-use of parsed shaders will be skipped in order to gather all updated changes and re-process the shaders. ","version":"Next","tagName":"h2"},{"title":"Shader Runtime Analysis​","type":1,"pageTitle":"Optimising Shaders","url":"/docs/playable/optimise-your-builds/optimising-assets/optimising-shaders#shader-runtime-analysis","content":"Runtime Analysis can help users to export only the necessary shader variants, reduce build size, and playable startup time. This feature will record all the shader variants that the engine uses during runtime. After this, the next build export will contain only shader variants grabbed from the Runtime Analysis data. Shader Runtime Analysis is part of the Runtime Analysis feature and works in parallel with existing code stripping logic.  ","version":"Next","tagName":"h2"},{"title":"Optimising Sounds","type":0,"sectionRef":"#","url":"/docs/playable/optimise-your-builds/optimising-assets/optimising-sounds","content":"","keywords":"sound optimise reduce size playable luna","version":"Next"},{"title":"Format​","type":1,"pageTitle":"Optimising Sounds","url":"/docs/playable/optimise-your-builds/optimising-assets/optimising-sounds#format","content":"This control allows you to set whether the sound should be original (Default option), forced to Stereo or to Mono format. MP3 is default In order to support as many browsers and OS versions as possible, Playable encodes sounds into MP3 format by default. ","version":"Next","tagName":"h3"},{"title":"Bitrate​","type":1,"pageTitle":"Optimising Sounds","url":"/docs/playable/optimise-your-builds/optimising-assets/optimising-sounds#bitrate","content":"This controls the bitrate of the sound, measured in Kb/s. ","version":"Next","tagName":"h3"},{"title":"Custom script & Custom script extension​","type":1,"pageTitle":"Optimising Sounds","url":"/docs/playable/optimise-your-builds/optimising-assets/optimising-sounds#custom-script--custom-script-extension","content":"Similar to corresponding control in textures settings, it allows a developer to supply an arbitrary shell script to convert sound files into desirable formats using custom tools available on developer's machine. {input} is replaced with full path to original WAV file (Luna always exports sounds as WAV files in the first place){output} is replaced with the full path to the destination{temp} is replaced with a temporary path the script might use as a scratch pad In order for Luna to properly compute the output path, developers should also supply the extension of the output file their custom script will write. ","version":"Next","tagName":"h3"},{"title":"Per-sound settings​","type":1,"pageTitle":"Optimising Sounds","url":"/docs/playable/optimise-your-builds/optimising-assets/optimising-sounds#per-sound-settings","content":"All of the above settings are also available on a per-folder and per-sound level. Developers can choose a folder of a file by ticking a checkbox in &quot;Per-sound settings&quot; section of the window and use the same fields to tweak parameters of a specific sound(s):  You can also further compress your sound files using external software, and then re-import them into your project. ","version":"Next","tagName":"h2"},{"title":"Optimising Assets - Overview","type":0,"sectionRef":"#","url":"/docs/playable/optimise-your-builds/optimising-assets/overview","content":"","keywords":"optimise size settings performance assets export parameters playable luna","version":"Next"},{"title":"Optimising various asset types​","type":1,"pageTitle":"Optimising Assets - Overview","url":"/docs/playable/optimise-your-builds/optimising-assets/overview#optimising-various-asset-types","content":"Please navigate to sections listed below to see how Luna can help reducing the build size in a quick and non-destructive manner. Optimising animations : Checking Half precision floating-point. Animations are stored as floats, reducing the size of the animation data taken by 50%. Optimising fonts : Control which characters get rasterized into an atlas by entering in your own custom alphabet contents, and removing characters that aren't being used in your playable. Optimising meshes : Checking Half precision floating-point. Meshes are stored as floats, reducing the size of the mesh data taken by 50%. Optimising particles : Baking particle systems and converting to animations of sprites, improves performance vastly with room to optimise the images. Optimising shaders : Unity can include an unnecessary big amount of shader variants as Unity cannot predict whether certain variants will be used or not. Check out our docs on Shaders for more details. Optimising sounds : Setting the audio assets bit rate will help to reduce its size. Bitrate 0 k means max size, changing this to specific size will help reduce its size, it may also lower the audio quality. Optimising textures : Reduce max size of a specific or all textures to reduce their size. This section allows for setting texture sizes for folders or files that can have parameters applied to exported textures by default. ","version":"Next","tagName":"h2"},{"title":"Optimisation - Overview","type":0,"sectionRef":"#","url":"/docs/playable/optimise-your-builds/overview","content":"","keywords":"optimise optimisation size reduction playable luna","version":"Next"},{"title":"Playable Size: Where to start​","type":1,"pageTitle":"Optimisation - Overview","url":"/docs/playable/optimise-your-builds/overview#playable-size-where-to-start","content":"Warning Developers should never fall for judging the build size by inspecting the development build it is not designed for production use of any sort as it lacks asset compression, serves each file individually and is meant purely for testing purposes on a local machine. A good starting point would be to inspecting the Size Breakdown in the Playable Plugin. This will give you a good idea of what is taking up the most space in your playable. You can also upload the build to Creative Suite and clicking Download or Publish button next to the creative that you're interested in.:  This opens the Publish page with all the available network options. Some networks options might have yellow of red warnings that indicate that the playable is too large for the network.  If the network you're interested in has a red warning, you need to optimise your playable size for that network. ","version":"Next","tagName":"h2"},{"title":"Preloader Images​","type":1,"pageTitle":"Optimisation - Overview","url":"/docs/playable/optimise-your-builds/overview#preloader-images","content":"Important Preloader images are never compressed in the Luna export process. If your playable has extra sizing that is seemingly unaccounted for, it could be your preloader images. ","version":"Next","tagName":"h2"},{"title":"Why we don't compress them​","type":1,"pageTitle":"Optimisation - Overview","url":"/docs/playable/optimise-your-builds/overview#why-we-dont-compress-them","content":"Preloader images are the first assets shown to the user whilst your playable loads. This means the images need to be raw in order to avoid unwanted decompression and read time. As such preloader images are put into the index.html file without any compression. On the up side this reduces load times, however the file's original size will be the same in the playable as it is in Unity. This can increase your playable's size dramatically depending on the image(s). ","version":"Next","tagName":"h3"},{"title":"How to reduce the size of Preloader Images​","type":1,"pageTitle":"Optimisation - Overview","url":"/docs/playable/optimise-your-builds/overview#how-to-reduce-the-size-of-preloader-images","content":"In order to reduce your preloader image file sizes, you will need to manually reduce their original size before exporting them with the Luna plugin. To do so you can use a raster graphics editor (like Microsoft Paint or Adobe Photoshop) and scale the image down, or change the image format to a more lossy type (e.g. PNG32 -&gt; PNG8, as Preloaders don't usually need an alpha value). Reducing your preloader images can in turn cut your playable's total size dramatically, keep this in mind if you're looking to save space anywhere you can! ","version":"Next","tagName":"h3"},{"title":"Optimising Meshes","type":0,"sectionRef":"#","url":"/docs/playable/optimise-your-builds/optimising-assets/optimising-meshes","content":"","keywords":"mesh optimise reduce size playable luna","version":"Next"},{"title":"Store mesh in Half-precision floating-point format​","type":1,"pageTitle":"Optimising Meshes","url":"/docs/playable/optimise-your-builds/optimising-assets/optimising-meshes#store-mesh-in-half-precision-floating-point-format","content":"This will instruct Luna to use half-precision floats for storing mesh data, reducing the size taken by 50%. It is almost impossible to predict whether it is going to be noticeable in the final product, but in many cases the difference will be negligable. These floats still have 3 precision digits, which is enough for many cases. The only parts of the mesh that get really affected are positions and blend weights; other parts like colors, normals, tangents, UVs and so on are usually represented well enough even with less precision. Startup time penalty! WebGL 1.0 doesn't support half-precision vertex format, thus Luna has to unpack the data into single-precision float numbers before sending the data onto video card. Depending on the overall mesh size and device power, the lag can be noticeable, so please test carefully before enabling it for production builds. ","version":"Next","tagName":"h3"},{"title":"Per-mesh settings​","type":1,"pageTitle":"Optimising Meshes","url":"/docs/playable/optimise-your-builds/optimising-assets/optimising-meshes#per-mesh-settings","content":"All of the above settings are also available on a per-folder and per-mesh level. Developers can choose a folder of a file by ticking a checkbox in &quot;Per-mesh settings&quot; section of the window and use the same fields to tweak parameters of a specific mesh(s):  ","version":"Next","tagName":"h2"},{"title":"Mesh Import Settings - Mesh Compression​","type":1,"pageTitle":"Optimising Meshes","url":"/docs/playable/optimise-your-builds/optimising-assets/optimising-meshes#mesh-import-settings---mesh-compression","content":"Under the Mesh Import Settings of you meshes in Unity, setting the Mesh Compression setting to 'High' can save large amounts of space. In most cases the impact to quality is not noticeable, but be sure to check after applying this setting in case it is in your case. If so, you may choose to lower the level of compression in the setting until it looks right.  ","version":"Next","tagName":"h2"},{"title":"Mesh Combiner Unity Plugin​","type":1,"pageTitle":"Optimising Meshes","url":"/docs/playable/optimise-your-builds/optimising-assets/optimising-meshes#mesh-combiner-unity-plugin","content":"Mesh Combiner is a free plugin, downloadable from the Unity asset store - click here to download. This tool allows you to combine meshes which can reduce draw calls (improve performance) and also reduce the size of your playable! For more information on how to use the Mesh Combiner plugin, checkout the description provided on the download page, or alternatively you can watch the tutorial video the creator has made on YouTube. (This video is also available for viewing on the download page) ","version":"Next","tagName":"h2"},{"title":"PHC (Playable Health Check)","type":0,"sectionRef":"#","url":"/docs/playable/optimise-your-builds/phc","content":"","keywords":"optimise optimisation size reduction playable luna phc health check","version":"Next"},{"title":"Traffic Light System​","type":1,"pageTitle":"PHC (Playable Health Check)","url":"/docs/playable/optimise-your-builds/phc#traffic-light-system","content":"The traffic light system is an easy overview to see the current readiness of the playable ad. It consists of 3 colors: Color\tDescription Red There are serious issues detected which could break the build, or the playable ad will be rejected by the ad network. Amber There are non breaking runtime issues detected, fixing these will greatly improve performance of the playable, and will decrease the chance of the playable ad being rejected by the ad network. Or you are not using all of our features which is proven to increase playable ad metrics, such as higher CTR. We highly recommend fixing these issues. Green There are no issues detected which could break, or have a negative impact on the playable ad.  ","version":"Next","tagName":"h2"},{"title":"Categories​","type":1,"pageTitle":"PHC (Playable Health Check)","url":"/docs/playable/optimise-your-builds/phc#categories","content":"Category\tDescriptionCore Functionality\tThis category checks for issues that can break the playable ad for unexpected behaviour. For that reason, it is extremely important to fix these issues. They may include compiler errors or usage of a reserved keyword which is known to break the playable ad during runtime. Ad Network\tThis category will give you an indication if the current project is compatible with all ad network requirements, such as the required API call are used. Fixing all of these issues mean your playable ad will be accepted by all of our supported ad networks. Technical Performance\tThis category checks for issues related to runtime performance, which might break the playable during runtime. Our data has shown that runtime performance is also related to a better performing playable ad, and in some cases, ad networks reject the playable if the runtime performance is too low. Best Practises\tThis category checks for our best practises, such as usage of LunaPlaygroundFields or Custom Events API's. Our data has shown that a playable implementing all of our best practises perform better on ad networks. Categories view with no errors and warnings  Categories view with errors and warnings  Selected error categories view  ","version":"Next","tagName":"h2"},{"title":"Optimising Textures","type":0,"sectionRef":"#","url":"/docs/playable/optimise-your-builds/optimising-assets/optimising-textures","content":"","keywords":"texture optimise reduce size playable luna","version":"Next"},{"title":"Max size​","type":1,"pageTitle":"Optimising Textures","url":"/docs/playable/optimise-your-builds/optimising-assets/optimising-textures#max-size","content":"This control allows to set maximum allowed size of a texture. If a texture exceeds the size in any dimension, it will be scaled down proportionally and its dimensions will be updated in metadata as well. That means that sprites, UV mappings and other elements working with a texture will remain valid, but will simply have less pixels. It's a developer's responsibility to not store pixel values for manipulating the textures (which is bad practice anyway) - the only bit that resizing can break is when someone attempts to read hard-coded region of an image (hard-coded in pixels, of course). info As a general rule, there is never any reason for a playable to have Textures or Sprites that are larger than 1024x1024. Querying the width and height properties of the texture object will return updated values as well. ","version":"Next","tagName":"h3"},{"title":"Format​","type":1,"pageTitle":"Optimising Textures","url":"/docs/playable/optimise-your-builds/optimising-assets/optimising-textures#format","content":"This controls the format of the texture. By default, Luna uses PNG32 format, which is a lossless compression format supporting RGB and Alpha channels. What about HDR? Luna re-encodes HDR textures, including HDR cubemaps, using RGBM encoding scheme. This is done to safely target all WebGL 1.0 installations avoiding the reliance upon availability of float-based texture formats usually used for storing HDR data. To determine the most suitable format, one could follow the below set of rules: High-fidelity elements with alpha channel, like crisp UI elements, are best to keep in PNG32 or PNG8 formats, depending on the amount of colors usedHigh-fidelity textures without alpha channel, like Normal Maps, are best to keep in PNG24 formatOpaque textures, less sensitive to compression artifacts, are good candidates for JPEG format Generally, JPEG format provides best compression ratios for many situations and is preferred if alpha channel is not required. This format, however, can introduce compression artifacts, which can be minimized by raising compression quality. However, some images are best compressed with PNG, especially the ones that have big continuous blocks of constant color. ","version":"Next","tagName":"h3"},{"title":"Apply PNG Compression types​","type":1,"pageTitle":"Optimising Textures","url":"/docs/playable/optimise-your-builds/optimising-assets/optimising-textures#apply-png-compression-types","content":"PNG is well-known for being able to be compressed to reduce size, whilst maintain quality images. There are instances where it can provide significant size reduction without affecting visual quality by brute-forcing compression algorithms available for PNG format and also removing optional metadata like graphics editor's tags. It can be quite slow for large images, though: processing a single PNG file can take several seconds, thus it is disabled by default in Luna. info Selecting your option will apply a PNG compression on PNG textures only. Compression types - to choose which type of compression you need, there are some brief explanations on each type to help choose size / image quality trade offs. PNGQuant Best quality - runs all the images through a compression algorithm that reduces size while not impacting visual quality. This helps to reduce size slightly but maintains a better quality of image. PNGQuant Smallsize - selecting this option will reduce the size of the PNG but it may also reduce image quality. Some of the visual changes may not be noticeable, but it is advisable to make sure all image quality trade offs are acceptable. PNG crush - very slightly reduces size but quality may or may not be affected. It's also possible that file size may not be altered at all. If the size of your playable is not an issue then selecting None will not alter or change the PNG files. If you don't require a compression of all PNG files, you also have the option to pick specific PNG files to be compressed from your project files. This will require permission access in build process please refer to PNGQuant Access Permission. ","version":"Next","tagName":"h3"},{"title":"Custom script & Custom script extension​","type":1,"pageTitle":"Optimising Textures","url":"/docs/playable/optimise-your-builds/optimising-assets/optimising-textures#custom-script--custom-script-extension","content":"There are instances when a developer can find their own combination of settings for pngcrush or even resort to a custom tool, like pngquat (which we highly recommend to consider for PNG files with limited colors). To provide an ability to use arbitrary custom tools, developers can specify custom script that is going to be executed by Luna against a texture. It accepts the following placeholders: {input} is replaced with full path to original PNG file (Luna always exports textures as PNG files in the first place){output} is replaced with the full path to the destination{temp} is replaced with a temporary path the script might use as a scratch pad In order for Luna to properly compute the output path, developers should also supply the extension of the output file their custom script will write. Resizing textures with custom scripts Luna will read the output texture file to identify its pixel size and update the metadata appropriately. It means that developers can do arbitrary resizing of the texture without having to worry how to account for that in the code that uses the texture. Users of this option, however, should be careful regarding preserving aspect ratio as Luna will not enforce it to stay the same. ","version":"Next","tagName":"h3"},{"title":"Per-texture settings​","type":1,"pageTitle":"Optimising Textures","url":"/docs/playable/optimise-your-builds/optimising-assets/optimising-textures#per-texture-settings","content":"All of the above settings are also available on a per-folder and per-texture level. Developers can choose a folder of a file by ticking a checkbox in &quot;Per-texture settings&quot; section of the window and use the same fields to tweak parameters of a specific texture(s):  ","version":"Next","tagName":"h2"},{"title":"Converting Textures to RGBA 32​","type":1,"pageTitle":"Optimising Textures","url":"/docs/playable/optimise-your-builds/optimising-assets/optimising-textures#converting-textures-to-rgba-32","content":"If you have encountered the following warning in your build log: Change its format from DXT5 to &quot;RGBA 32 bit&quot; to speed up export  Simply follow the steps below to make the necessary changes. Highlight all textures you want to convert in your project folder. In the inspector at the bottom there is a 'Format' option with a drop down field, open the drop down and select RGBA 32 bit, after doing so click apply. This will update their import settings.     To make sure the changes are applied, right click on the highlighted textures and select reimport.    After this process is complete you are good to go! ","version":"Next","tagName":"h2"},{"title":"Symmetrical Textures​","type":1,"pageTitle":"Optimising Textures","url":"/docs/playable/optimise-your-builds/optimising-assets/optimising-textures#symmetrical-textures","content":"If you have any roughly symmetrical textures that would produce a similar enough result if cut in half and mirrored, you can do just that to reduce your playable's size further. For example here we have a mostly symmetrical texture:  Split down the centre:  And in the scene adjust it to make it look like one image:  ","version":"Next","tagName":"h2"},{"title":"What is Playable Plugin?","type":0,"sectionRef":"#","url":"/docs/playable/overview","content":"","keywords":"overview playable luna","version":"Next"},{"title":"Technical Limitations​","type":1,"pageTitle":"What is Playable Plugin?","url":"/docs/playable/overview#technical-limitations","content":"Providing all the features necessary for creating amazing playables is what we are all about. Across all platforms, we aim to support all devices, including the lowest-end ones (Android 4.0, iOS 9) but to accomplish this, we are limited in some aspects. For more information about Luna's features and capabilities click here. ","version":"Next","tagName":"h2"},{"title":"Get Started​","type":1,"pageTitle":"What is Playable Plugin?","url":"/docs/playable/overview#get-started","content":"To begin, let's create our first playable! For a comprehensive understanding of each stage, please refer to our step-by-step guide guide. If you're looking to get up and running quickly, we also have a quickstart guide available. ","version":"Next","tagName":"h2"},{"title":"Standard Events","type":0,"sectionRef":"#","url":"/docs/playable/playable-setup/analytics/standard-events","content":"","keywords":"standard events playable luna","version":"Next"},{"title":"Ad Loading​","type":1,"pageTitle":"Standard Events","url":"/docs/playable/playable-setup/analytics/standard-events#ad-loading","content":"The ad network has loaded the ad HTML and started evaluating it internally. ","version":"Next","tagName":"h3"},{"title":"Ad Ready​","type":1,"pageTitle":"Standard Events","url":"/docs/playable/playable-setup/analytics/standard-events#ad-ready","content":"Ad content has been loaded, uncompressed and is ready to be shown. ","version":"Next","tagName":"h3"},{"title":"Ad Starting​","type":1,"pageTitle":"Standard Events","url":"/docs/playable/playable-setup/analytics/standard-events#ad-starting","content":"Ad is loading its first scene. ","version":"Next","tagName":"h3"},{"title":"Ad Impression​","type":1,"pageTitle":"Standard Events","url":"/docs/playable/playable-setup/analytics/standard-events#ad-impression","content":"Ad has loaded and initialised all the content, and the first frame has rendered. ","version":"Next","tagName":"h3"},{"title":"Ad Engagement​","type":1,"pageTitle":"Standard Events","url":"/docs/playable/playable-setup/analytics/standard-events#ad-engagement","content":"The user touched the ad for the first time. ","version":"Next","tagName":"h3"},{"title":"Ad Click​","type":1,"pageTitle":"Standard Events","url":"/docs/playable/playable-setup/analytics/standard-events#ad-click","content":"The user has clicked the &quot;Install&quot; button. ","version":"Next","tagName":"h3"},{"title":"Performance Indicator","type":0,"sectionRef":"#","url":"/docs/playable/optimise-your-builds/performance-indicator","content":"","keywords":"indicator performance tips optimise playable Luna","version":"Next"},{"title":"General Section​","type":1,"pageTitle":"Performance Indicator","url":"/docs/playable/optimise-your-builds/performance-indicator#general-section","content":"Contains basic information about playable performance. CPU Contains summary information about CPU usage by playable. The tool gives you an overall view of CPU usage. For more detailed information use built-in browser profiling tools.Calculates the sum of all CPU load by modules of playable like user code, physics, particles etc.High CPU usage may cause a low frame rate on mobile devices, especially on the low end. Use the Frame Breakdown section for more detailed CPU usage info. RAM Usage Total memory usage of playable. Shows how much memory the playable uses while running. Represents the sum of allocated memory by code, loaded textures, loaded meshes etc. Not all browsers are supported! Check the supported browsers list here: Performance.memory - Web APIs | MDNHigh memory allocations will cause garbage collector spikes and as a result frame rate drops or even crashes.We recommend a RAM value not higher than 256 MB to support low-end devices. The tool gives you an overall view of memory usage. For more detailed information use the browser profiler.To decrease RAM usage: Simplify your meshes, animations, and other assets.Decrease the number of particles.Check code for memory leaks and frequent allocations. Performance guides: Performance recommendations for Unity - Mixed RealityUnity - Manual: General OptimizationsUnity - Manual: Special optimizations Average frame time Shows how much time (average) was spent to render one frame of playable. This is an approximate value. For more detailed information use the browser profiler.Represents summary execution time of all playable modules (physics, particles, user code, rendering etc)The higher the values - the lower the frame rate ","version":"Next","tagName":"h2"},{"title":"Expected playable performance​","type":1,"pageTitle":"Performance Indicator","url":"/docs/playable/optimise-your-builds/performance-indicator#expected-playable-performance","content":"Possible values: Good, Fair, and Poor. Predicted performance of playable on mobile devices. Playables with expected FPS &lt; 15 get a “Poor“ score. 15 &lt; FPS &lt; 30 will lead to a “Fair“ score and anything greater will result in a “Good“ score. Calculation process: Measure the average frame time of the device you use to test playable.Calculate the coefficient using skybox loading times from the actual device and reference device. We determined that the average time to load skybox on Samsung Galaxy S10+ is 2.5 ms. This device is chosen as an “average“ reference device. The same operation takes 0.5 ms on iPhone XS and 15 ms on Xiaomi Redmi 6. Dividing average skybox load time (2.5ms) by measured skybox load time gives a coefficient which says how faster your device is compared to Galaxy S10+Then we multiply our average frame time with the previously calculated coefficient and get the approximate expected frame time on Galaxy S10+, which we convert to FPS. Rembember: Performance on PC != performance on mobile device. This value is estimated for low end device. You can easily run local builds on your test devices (in one LAN network). More information about this can be found here. ","version":"Next","tagName":"h2"},{"title":"Callbacks​","type":1,"pageTitle":"Performance Indicator","url":"/docs/playable/optimise-your-builds/performance-indicator#callbacks","content":" ","version":"Next","tagName":"h2"},{"title":"List of SubSections​","type":1,"pageTitle":"Performance Indicator","url":"/docs/playable/optimise-your-builds/performance-indicator#list-of-subsections","content":"Awake, Start Awake/Start callback execution time for all scripts.Summary execution time of Awake/Start methods in playable code.High Awake/Start execution times may cause spikes and fps drops.To optimise: Try to reduce the number of objects executing in Awake or Start.If you instantiate many objects at the same time try to reduce their number.Check your code for heavy operations in Awake and optimise or completely remove awakes from your code. Update, FixedUpdate, LateUpdate Update\\FixedUpdate\\LateUpdate callback execution time for all scripts.Summary execution time of Update\\FixedUpdate\\LateUpdate methods in playable code.Update\\LateUpdate is called every frame if the MonoBehaviour is enabled. High Update execution times may cause low fps.FixedUpdate has the frequency of the physics system. It is called every fixed frame-rate frame. For scenes with huge physics calculations, FixedUpdate may be called multiple times per frame.Make sure that there are no allocations inside the Update method ('new' keyword, operations with strings) and other heavy operations. If you use unity API like GetComponent, Find, GetComponentInChildren etc in Update - remove it and use caching. Check other performance-heavy code inside these callbacks and optimise it.Performance guides: Performance recommendations for Unity - Mixed RealityUnity - Manual: General OptimizationsUnity - Manual: Special optimizations List of Counters &quot;FixedUpdate&quot;, &quot;Update&quot;, &quot;LateUpdate&quot; callbacks total number of active objects with FixedUpdate callback.more objects - more calculations - lower frame rate.Try to reduce the number of objects using FixedUpdate. ","version":"Next","tagName":"h3"},{"title":"Physics 2D/Physics 3D​","type":1,"pageTitle":"Performance Indicator","url":"/docs/playable/optimise-your-builds/performance-indicator#physics-2dphysics-3d","content":" OnCollisionEnter2D/OnCollisionEnter/OnCollisionStay2D/OnCollisionStay/OnCollisionExit2D/OnCollisionExit Callback execution time for all scripts.Summary execution time of callback methods in playable code.Physics is already a huge module on its own.To optimise: Remove heavy operations like GetComponent or Find from this callback.Check methods for allocations and remove them.Reduce the count of callbacks.Disable rigidbody components when you don't need collision detection.Don't use physics at all. OnTriggerEnter2D/OnTriggerEnter/OnTriggerStay2D/OnTriggerStay/OnTriggerExit2D/OnTriggerExit Callback execution time for all scripts.Summary execution time of callbacks in playable code.Triggers are more simple that colliders, but non-optimized code inside callbacks may affect performance. Simulation if this section has a huge execution time, think about removing physics from playable at all. Joints The average time spent on joints calculations.A Joint component connects a Rigidbody to another Rigidbody or a fixed point in space. Joints apply forces that move rigid bodies and limits restrict that movement. Joints simulation is complex and a large amount of joints will cause a performance drop.To optimise: Reduce number of joints. Disable rigidbodies when you doesnt need joints. List of Counters​ Rigidbodies: total number of active Rigidbodies2D total count of active Rigidbodies2D on scene.Rigidbodies are simulated objects and their simulation process (especially with continuous collision detection) might influence performance.To optimise: Reduce the number of rigidbodies.Enable rigidbody component only when you need this.Switch collision detection to discrete.Try not to use physics at all. Colliders: total number active of Colliders2D.huge number of active colliders (especially mesh and convex) results in heavier physics calculations.To optimise: Simplify colliders.Try to avoid using mesh colliders: Based on Mesh, the Mesh Collider creates a collider for the GameObject. The more complex the mesh is, the slower will the collision detection calculations be. Also, if you modify mesh geometry that is used for colliders, the physics engine has to rebuild the collider every time you change the mesh. In most cases, primitive colliders like a box collider or a sphere collider are enough and there is no need to use mesh colliders. Joints The total number of active joints.A Joint component connects a Rigidbody to another Rigidbody or a fixed point in space. Joints apply forces that move rigid bodies and limits restrict that movement. Joints simulation is complex and a large amount of joints will cause a performance drop.To optimise: Reduce number of joints.Try not to use joints at all.Disable joints and Rigidbodies that you don't need. ","version":"Next","tagName":"h2"},{"title":"Particles​","type":1,"pageTitle":"Performance Indicator","url":"/docs/playable/optimise-your-builds/performance-indicator#particles","content":" Renderer The time spent by the active particle systems to prepare particles for rendering. This module also create instances and do all essential calculations for this on CPU. It then transfer data to GPU.Huge number of particles will increase startup time.To optimise: The most simple way is to reduce particles or particle systems count. ColorBySpeed, ColorOverLifetime This module uses color gradient and do calculations for every particle.A big number of gradient colors may increase calculation complexity. ForceOverLifetime, InheritVelocity, LimitVelocityOverLifetime, RotationBySpeed, RotationOverLifetime, SizeBySpeed, SizeOverLifetime, VelocityOverLifetime This module uses MinMaxCurves and do calculations for every particle.Complex curves may increase calculation complexity.To optimise: Use constant values instead of curves or simplify curve.Decrease number of particles. Noise Uses MinMaxCurves and the perlin noise function.Does calculations for every particle.To optimise: Use constant values instead of curves or simplify curve.Decrease number of particles. TextureSheetAnimation Caclulates the particle sheet animation or sprites array for every particle.May use MinMaxCurves which also increases calculation complexity.To optimise: Do not use complex animation sheets, decrease the number of sprites in case you use Sprites mode.Decrease number of particles.Use constant values instead of curves or simplify the curves. Shape Generates translation, rotation and direction for a particle basing on selected shape.executes for every particle.To optimise: decrease particles count. Emitter Calculates the number of particles that should be spawned. Also may spawn particles according to MinMaxCurve.Spawning many particles will increase the calculation times of all particle system modules.To optimise: Control particles spawning using ParticleSystem.main.maxParticles.decrease burst values. if you use curves, try to simplify them or use constant vlues Simulation Most of the modules uses MinMaxCurve. For complex curves evaluation process may be slow. Try to avoid curves and use constant values instead. List of Counters​ Active particle systems: Total count of active particle systems.Number of active particle systems in scene.To optimise: Try to reduce the number of particle systems.Try to disable particle systems when they unneeded. Active particles: Total count of alive particles.Number of alive particles in scene.To optimise: reduce cont of alive particles. ","version":"Next","tagName":"h2"},{"title":"Animator​","type":1,"pageTitle":"Performance Indicator","url":"/docs/playable/optimise-your-builds/performance-indicator#animator","content":" Animation Total execution time of all active animation components on scene.Complex animations with big count o keyframes may affect performance. Animation\\Animator Events Execution time of code that is subscribed to animation clip events.Huge operations inside callbacks may cause performance spikes.To optimise: Remove allocations and huge operations from callback.Unity - Manual: Performance and optimization. Animator Total execution time of all active animators.Animator is complex system. It contains logic that blends animations between each other, blends layers, interpolates animation keys. Every animation clip consists of animated parameters of a component which contains animation keys. The keys are interpolated between each other by a configurable curve. A high number of keys will create a more complex curve and subsequently, calculating interpolation gets more expensive. List of Counters​ Active animators: Number of total active animators.A huge number of animators working at the same time may affect performance.To optimise: Remove unneeded animators, animation assets or make animations more simple. Active animator layers: Total number of layers of active animators.Blending animation layers inside animator is quite complex and may affect performance.To optimise: avoid using animators with more than one layer. Active blend states: Total number of bend states currently performing.Blending animations together is a complex process. Blending a lot of animations at the same time may affect performance.To optimise: Merge animations (if possible).Decrase number of keyframes.Remove or deactivate unneeded animators. Active components: The total number of active animation components ( not animation assets ).A huge amount of animation components working at the same time may affect performance.To optimise: Try remove unneeded animation components and make the animations more simple. Animated parameters: The total number of parameters used current playing animations.When the parameters changes, the more time it needs.To optimise: Try and remove unneeded parameters from the animation. Keyframes: The total count of animation curve keys of the current animated parameters.Interpolation between keys may affect performance.To optimise: Try to reduce the number of keys inside the animation assets. ","version":"Next","tagName":"h2"},{"title":"Rendering​","type":1,"pageTitle":"Performance Indicator","url":"/docs/playable/optimise-your-builds/performance-indicator#rendering","content":" Unity - Manual: Graphics performance fundamentals Depth Total depth rendering time: this consists of the time that Luna spends when rendering all depth passes.Depth rendering is an additional pass. A high number of passes may affect performance.To optimise: Reduce the number of shaders that are using depth.Reduce the number of cameras that have depth only clear flags. UI The total UI rendering time: this consists of time that Luna spends on rendering UI canvases.A huge number of UI elements will affect performance.To optimise: Try to reduce the number of UI elements. Skin And Morph The totals skinned meshes and blend shapes rendering time: this is the time that Luna took on rendering skinned meshes and blend shapes.Skinned mesh preparation contains calculations for every bone.To optimise: Simplify skinned mesh or remove unneeded bones.Reduce number of skinned meshes (blend shapes). Shadows The total real-time shadows rendering time: this consists of the time that Luna takes when rendering real time shadow cascades.Rendering shadows is complex operation: the more objects cast shadows, the more time will be spent on shadows calculations.To optimise: Do not use real time shadows with static objects, bake it.Do not use real time shadows at all.Decrease shadows quality.Reduce number of objects that cast shadows. List of Counters​ UI Interactive Templates: The total count of rendered UI elements (like buttons, text, etc).This increases amount of total vertices and triangles that affects rendering performance.To optmise: Make UI more simple.Remove unneeded elements.Combine UI elements where possible. Draw Calls: The number of calls to the GPU to draw objects. This consists of how many objects are drawn to the screen.A huge the number may affect performance.To optimise: Try to reduce the geometry count.Bake static geometry into one mesh manually.Reduce number of passes in shaders. Vertices: The total number of visible vertices rendered this frame. This is the number of vertices uploaded to GPU.Mobile devices have GPU memory restrictions, so geometry with huge amount of vertices may not be rendered at all. Also, the GPU performs operations with vertices in vertex shader. A high number of vertices may cause low performance.To optmise: Simplify the geometry or remove unneeded geometry from scene. Triangles: The total visible triangles rendered this frame. This is the number of triangles uploaded to the GPU.Mobile devices have GPU memory restrictions, so geometry with an high amount of triangles may be rendered incorrectly and cause low performance.To optimise: Simplify the geometry or remove unneeded geometry from scene. Visible skinned meshes: The number of skinned meshes and blend shapes visible by any camera.Many skinned meshes with a high bones number will affect performance.To optimise: Try to reduce the number of skinned meshes and blend shapes.Make skeleton simpler. Material switches: The number of material switches while rendering current frame. Changing render state on GPU is an additional operation that also takes time. A high number of geometry that switch to a different materials may affect frame rate.To optimise: Render as many geometry as you can using one material.Use material palettes or bake textures into atlases. Shadow casters: The total number of rendered shadow casters.A high number of shadow caster can affect the performance.To optimise: Reduce the number of geometry that casts shadows.Decrease shadows quality. ","version":"Next","tagName":"h2"},{"title":"Measuring Startup Time","type":0,"sectionRef":"#","url":"/docs/playable/optimise-your-builds/startup-time/measuring-startup","content":"","keywords":"startup time argument measure optimise playable luna","version":"Next"},{"title":"How to measure your startup time​","type":1,"pageTitle":"Measuring Startup Time","url":"/docs/playable/optimise-your-builds/startup-time/measuring-startup#how-to-measure-your-startup-time","content":"The startup time of your creative can be measured for development builds and ad networks builds.  The startup measurement result will look like this:  This consist of different fields which provide you with different details about the startup time. For testing purposes, check out how to test your creative on a mobile device. ","version":"Next","tagName":"h2"},{"title":"How to interpret the results​","type":1,"pageTitle":"Measuring Startup Time","url":"/docs/playable/optimise-your-builds/startup-time/measuring-startup#how-to-interpret-the-results","content":"The following table discusses how the different fields in the measurement result work, along with how they can be improved. For more information on optimisations for startup time, visit this page. Field\tDescription\tHow to improveAverage Total\tThis field will gather and recalculate the average time collected from several ad launches. This will reset every time a user re-builds a project. Loading from network\tHere you will find how long it took to download your playable from the network (can vary depending on network conditions).\tTry to improve the overall size of your playable. Smaller size → faster downloading. Decompressions\tThis Field displays the time it took to decompress your game: zipping, unbrotli, base64 and 122 decompressions.\tCompressions allows to make your playable small and match ad network requirements. For now, users can switch from base64 (bigger size but faster decompression) to base122 (smaller size but longer decompressions). Performance may vary depending on the browser version. Load Textures, shaders, meshes, sounds, animations\tThis Field shows the time needed to load simple assets in memory. Performance may vary depending on the browser version (for textures, sounds, shaders - as browser can load them natively).\tRemove all unused assets. Meshes half precision optimisation also increases loading time. Opmitise AnimationClips to use as few keyframes as possible. Shaders compilation\tIt is important to keep this Field well optimised or it might eat up a lot of time. Be careful to use as few shader variants in the build as possible.\tFirst step is trying to use as few materials/shaders as possible. Use Shaders Runtime Analysis - part of Runtime Analysis which can collect only used variants in scene and strip all the other variants - in the Assets → Shader section in the Luna UI, to exclude all not needed shaders and variants. Load: Cubemaps, Materials, Sprites, Fonts, animators\tThis Field deals with the loading of more complex assets.\tRemove all unused assets. For optimising sprites, it can be useful to use FullRect mesh mode instead of Tight. For optimising fonts, keep the font texture size down by only using symbols with the appropriate resolution per glyph by using the Luna UI. Load: Prefabs\tThis Field shows the duration of time it took to load a project prefab.\tTry to use as few GameObjects as possible - as huge hierarchies take more time to load. Load: Scene Data\tThis Field shows the scene asset loading time.\tTry to use as few GameObjects as possible - as huge hierarchies take more time to load. Scene loading and Awake\tThis Field shows the time needed to load the scene into memory, awake all components, and render the first frame of the game.\tMake sure your scripts in awake are as performant as possible, and try to use as few GameObjects as possible. Warning As measuring performance is a tricky task, it may change dramatically depending on the workload of the current machine. If you have a lot of devices/applications opened in the background, it will affect the performance. ","version":"Next","tagName":"h2"},{"title":"Setting up a JavaScript Playable for Creative Suite","type":0,"sectionRef":"#","url":"/docs/playable/javascript-playables/setup","content":"","keywords":"playable playground create hub luna external externally setup step by step-by-step guide how to","version":"Next"},{"title":"Step by step​","type":1,"pageTitle":"Setting up a JavaScript Playable for Creative Suite","url":"/docs/playable/javascript-playables/setup#step-by-step","content":"","version":"Next","tagName":"h2"},{"title":"1. Make sure your html file is named \"source.html\"​","type":1,"pageTitle":"Setting up a JavaScript Playable for Creative Suite","url":"/docs/playable/javascript-playables/setup#1-make-sure-your-html-file-is-named-sourcehtml","content":"WARNING! Luna will not apply further compression or obfuscation once you have uploaded your files. Please minify and obfuscate your playables prior to uploading. ","version":"Next","tagName":"h3"},{"title":"2. Make sure all the startup functionality is performed in the startGame() function​","type":1,"pageTitle":"Setting up a JavaScript Playable for Creative Suite","url":"/docs/playable/javascript-playables/setup#2-make-sure-all-the-startup-functionality-is-performed-in-the-startgame-function","content":"","version":"Next","tagName":"h3"},{"title":"3. Create 2 json files​","type":1,"pageTitle":"Setting up a JavaScript Playable for Creative Suite","url":"/docs/playable/javascript-playables/setup#3-create-2-json-files","content":"The name of these files needs to be luna.json and the other playground.json, these will be necessary for uploading to Creative Suite. ","version":"Next","tagName":"h3"},{"title":"4. Populate your playground.json​","type":1,"pageTitle":"Setting up a JavaScript Playable for Creative Suite","url":"/docs/playable/javascript-playables/setup#4-populate-your-playgroundjson","content":"Within your playground.json you will need to create a new object with 2 fields; &quot;title&quot; &amp; &quot;icon&quot;, and another object within it called &quot;fields&quot;. Example of how this should look below: { &quot;title&quot;: &quot;Basic Playable&quot;, &quot;icon&quot;: &quot;&quot;, // Icon next to the playable in Creative Suite, takes a Data URL. &quot;fields&quot;: {} // You can populate this with any settings you wish to be editable in Creative Suite }  If you would like an example of how to populate the fields object for Creative Suite click here. ","version":"Next","tagName":"h3"},{"title":"5. Within your luna.json add the following:​","type":1,"pageTitle":"Setting up a JavaScript Playable for Creative Suite","url":"/docs/playable/javascript-playables/setup#5-within-your-lunajson-add-the-following","content":"{ &quot;unity&quot;: { &quot;packages&quot;: { &quot;default&quot;: { &quot;applicationName&quot;: &quot;&quot;, &quot;iosLink&quot;: &quot;&quot;, &quot;androidLink&quot;: &quot;&quot;, &quot;orientation&quot;: &quot;unspecified&quot;, &quot;supportedLanguages&quot;: [&quot;en&quot;] }, &quot;ironsource&quot;: { &quot;appID&quot;: &quot;&quot;, &quot;assetID&quot;: &quot;&quot;, &quot;applicationGenre&quot;: &quot;&quot;, &quot;versionName&quot;: &quot;&quot;, &quot;apiType&quot;: 0, &quot;playableMode&quot;: 0, &quot;packageType&quot;: 0 }, &quot;facebook&quot;: { &quot;assetID&quot;: &quot;&quot;, &quot;packageType&quot;: 0 }, &quot;tiktok&quot;: { &quot;orientation&quot;: 0 } } } }  To learn about what should be entered in each field in your luna.json click here. ","version":"Next","tagName":"h3"},{"title":"6. Add callback events to your playable​","type":1,"pageTitle":"Setting up a JavaScript Playable for Creative Suite","url":"/docs/playable/javascript-playables/setup#6-add-callback-events-to-your-playable","content":"To diplay the events when they are triggered, we can create a log function that will show the messages directly in the window. Let's add some style to the logs by adding the following code in a &lt;style&gt; tag in the &lt;head&gt; of our project. #log { position: absolute; background: black; display: block; color: white; bottom: 0; height: 30%; width: 90%; font-size: 2%; padding: 5%; }  Create a container for the debug messages in the &lt;body&gt; of our playable: &lt;!-- container element for debug messages --&gt; &lt;label id=&quot;log&quot;&gt;&lt;/label&gt;  Add a &lt;script&gt; tag with the following function: function log(text) { document.getElementById('log').innerHTML += text + '&lt;br /&gt;'; }  Finally, we can subscribe to the event and have a debug message on our window every time the events is triggered. For example: // Subscribe to luna:build event – will be fired right after 'load' event of the window. window.addEventListener('luna:build', function () { log('Playable is about to start'); });  You can see a list of our callback events by clicking here. You can find an example of this in our repository. ","version":"Next","tagName":"h3"},{"title":"7. Use the Luna API to direct the user to the app store​","type":1,"pageTitle":"Setting up a JavaScript Playable for Creative Suite","url":"/docs/playable/javascript-playables/setup#7-use-the-luna-api-to-direct-the-user-to-the-app-store","content":"The API call needed: Luna.Unity.Playable.InstallFullGame() ","version":"Next","tagName":"h3"},{"title":"8. Extra step if you wish to run on Mintegral or Vungle​","type":1,"pageTitle":"Setting up a JavaScript Playable for Creative Suite","url":"/docs/playable/javascript-playables/setup#8-extra-step-if-you-wish-to-run-on-mintegral-or-vungle","content":"If you wish to run on Mintegral or Vungle, please also call the Luna.Unity.LifeCycle.GameEnded() event when the game is complete. ","version":"Next","tagName":"h3"},{"title":"9. Zip your playable & json files​","type":1,"pageTitle":"Setting up a JavaScript Playable for Creative Suite","url":"/docs/playable/javascript-playables/setup#9-zip-your-playable--json-files","content":"The last step is to zip your 3 files (source.html, luna.json, playground.json). Then drag and drop the resulting zip at the bottom of the playground.lunalabs.io/apps page. (You can also click on the browse text at the bottom of the page, navigate to where the zip is in the opened window and hit open).   ","version":"Next","tagName":"h3"},{"title":"Optional Extra Steps​","type":1,"pageTitle":"Setting up a JavaScript Playable for Creative Suite","url":"/docs/playable/javascript-playables/setup#optional-extra-steps","content":"Update your luna.json file with your app store URLs. (Click here to learn about what to put in each field)Update your playground.json file with parameters in your game, for quick editing in Creative Suite.Use Luna Custom Events. (see below) ","version":"Next","tagName":"h2"},{"title":"Custom Events​","type":1,"pageTitle":"Setting up a JavaScript Playable for Creative Suite","url":"/docs/playable/javascript-playables/setup#custom-events","content":"It is possible to use the Luna Analytics events API for custom events in your playable. Please see here for full documentation of the API, and here for information on Events Settings. Implementation Example: window.pi.logCustomEvent('LevelFailed', 1); window.pi.logCustomEvent('EndCardShown');  ","version":"Next","tagName":"h2"},{"title":"luna.json guide​","type":1,"pageTitle":"Setting up a JavaScript Playable for Creative Suite","url":"/docs/playable/javascript-playables/setup#lunajson-guide","content":"Click the arrow below to see a table comprising all you need to know regarding each field in the luna.json file. CLICK ME Section\tField Name\tData Type\tDescriptiondefault\tapplicationName\tString\tYour playable's name default\tiosLink\tString\tYour iOS App Store link default\tandroidLink\tString\tYour Android App Store link default\torientation\tString\tCan be one of: &quot;unspecified&quot;, &quot;portrait&quot; or &quot;landscape&quot; default\tsupportedLanguages\tArray of Strings\tList the languages your playable supports via listing the corresponding language codes (formatted like this: &quot;en&quot;, &quot;fr&quot;, ...) ironsource\tappID\tString\tOptional ironsource\tassetID\tString\tOptional ironsource\tapplicationGenre\tString\tOptional ironsource\tversionName\tString\tOptional ironsource\tapiType\tint\tEnter either 0 or 1: 0 for DAPI, 1 for NUCLEO ironsource\tplayableMode\tint\tEnter either 0 or 1: 0 for PA, 1 for IEC ironsource\tpackageType\tint\tEnter either 0 or 1: 0 for Inline, 1 for CDN facebook\tassetID\tString\tOptional facebook\tpackageType\tint\tEnter either 0 or 1: 0 if your are submitting using a ZIP file (5Mb limit), or 1 for a single inlined HTML file (2Mb limit) tiktok\torientation\tint\tEnter 0, 1 or 2: 0 for &quot;responsive&quot;, 1 for &quot;portrait&quot; or 2 for &quot;landscape&quot; ","version":"Next","tagName":"h2"},{"title":"Fields example​","type":1,"pageTitle":"Setting up a JavaScript Playable for Creative Suite","url":"/docs/playable/javascript-playables/setup#fields-example","content":"Click the arrow below to view an example of how to populate the fields object for Creative Suite. CLICK ME &quot;fields&quot;: { &quot;ShapeController&quot;: { &quot;shapeColor&quot;: { &quot;title&quot;: &quot;shapeColor&quot;, &quot;type&quot;: &quot;color&quot;, &quot;defaultValue&quot;: [ 1, 0, 0, 1 ], &quot;section&quot;: &quot;&quot;, &quot;order&quot;: 1, &quot;localization&quot;: 0, &quot;options&quot;: {} }, &quot;shape&quot;: { &quot;title&quot;: &quot;shape&quot;, &quot;type&quot;: &quot;enum&quot;, &quot;defaultValue&quot;: 1, &quot;section&quot;: &quot;&quot;, &quot;order&quot;: 2, &quot;localization&quot;: 0, &quot;options&quot;: { &quot;0&quot;: &quot;CUBE&quot;, &quot;1&quot;: &quot;SPHERE&quot;, &quot;2&quot;: &quot;CYLINDER&quot; } }, &quot;someBoolean&quot;: { &quot;title&quot;: &quot;someBoolean&quot;, &quot;type&quot;: &quot;boolean&quot;, &quot;defaultValue&quot;: 1, &quot;section&quot;: &quot;&quot;, &quot;order&quot;: 3, &quot;localization&quot;: 0, &quot;options&quot;: {} }, &quot;someInt&quot;: { &quot;title&quot;: &quot;someInt&quot;, &quot;type&quot;: &quot;int32&quot;, &quot;defaultValue&quot;: 100, &quot;section&quot;: &quot;&quot;, &quot;order&quot;: 4, &quot;localization&quot;: 0, &quot;options&quot;: {} }, &quot;someVector3&quot;: { &quot;title&quot;: &quot;someVector3&quot;, &quot;type&quot;: &quot;vector3&quot;, &quot;defaultValue&quot;: [ 0, 1, 0 ], &quot;section&quot;: &quot;&quot;, &quot;order&quot;: 5, &quot;localization&quot;: 0, &quot;options&quot;: {} }, &quot;someString&quot;: { &quot;title&quot;: &quot;someString&quot;, &quot;type&quot;: &quot;string&quot;, &quot;defaultValue&quot;: [ &quot;This is a string&quot; ], &quot;section&quot;: &quot;&quot;, &quot;order&quot;: 6, &quot;localization&quot;: 0, &quot;options&quot;: {} }, &quot;mySlider&quot;:{ &quot;title&quot;: &quot;mySlider&quot;, &quot;type&quot;: &quot;int32&quot;, &quot;defaultValue&quot;: 10, &quot;constraints&quot;: { &quot;value_min&quot;:1, &quot;value_max&quot;:15, &quot;value_step&quot;:1 } }, &quot;myVec3Array&quot;:{ &quot;title&quot;: &quot;myVec3Array&quot;, &quot;type&quot;: &quot;vector3[]&quot;, &quot;defaultValue&quot;: [ [2,4,6], [1,3,5] ], &quot;constraints&quot;: { &quot;array_min_length&quot;:0, &quot;array_max_length&quot;:3 } } } }, }  ","version":"Next","tagName":"h2"},{"title":"Callback Events​","type":1,"pageTitle":"Setting up a JavaScript Playable for Creative Suite","url":"/docs/playable/javascript-playables/setup#callback-events","content":"A list of the callback events available // Subscribing to luna:build event – it is going to be fired right after 'load' event of the window. window.addEventListener('luna:build', function () { log('Playable is about to start'); }); // Subscribing to luna:unmute event – the playable can play sounds once it is fired. window.addEventListener('luna:unmute', function () { log('Playable needs to be unmuted'); }); // Subscribing to luna:mute event – the playable must mute all the sounds once it is fired. window.addEventListener('luna:mute', function () { log('Playable needs to be muted'); }); // Subscribing to luna:pause event – the playable must pause rendering and sound playaback. window.addEventListener('luna:pause', function () { log('Playable needs to be paused'); }); // Subscribing to luna:pause event – the playable must resume rendering and sound playaback. window.addEventListener('luna:resume', function () { log('Playable needs to be resumed'); }); // check if Luna is defined in global namespace if ('Luna' in window) { // it is - nothing to do, the startGame() will be invoked when needed log('window.Luna is set - startGame() will be called automatically'); } else { // it is not - probably a development build, invoke startGame() manually startGame(); }  ","version":"Next","tagName":"h2"},{"title":"Runtime Analysis","type":0,"sectionRef":"#","url":"/docs/playable/optimise-your-builds/runtime-analysis","content":"","keywords":"runtime analysis stripping excludes exclude automatic","version":"Next"},{"title":"What is Runtime Analysis?​","type":1,"pageTitle":"Runtime Analysis","url":"/docs/playable/optimise-your-builds/runtime-analysis#what-is-runtime-analysis","content":"Runtime Analysis is a feature of Playable Plugin that excludes unused classes, methods or shaders from your playable build in order to save space, whilst also eliminating the time needed to manually exclude these yourself. In addition to user methods, classes and shaders, Runtime Analysis also excludes code within the engine that is not being used. To achieve this, upon running Runtime Analysis we detect all c# classes, their methods and properties. We mark each of them as “unused” and place a hook inside. Each time a class, method or property is used, our hook is fired and and we mark this component as “used”. Were constantly updating this exclusion list as the game is played, and this list will become smaller and smaller as new shaders, classes and methods are used during playthroughs. This exclusion list is shown in the Runtime Analysis tab. Runtime Analysis uses this procedure to detect what shaders are actively performing in the playable. It runs the same process that is used for classes, methods and properties and the shader data is stored in the Luna Shader Variant Collection asset. In this way, Runtime Analysis can help users to export only the necessary shader variants. Scripts exclusions and Runtime Analysis are not connected with each other. Excluded scripts will not be included in the playable build used during Runtime Analysis. You will need to playthrough your game enough times that you go through most possible interactions. This will allow Runtime Analysis to have a comprehensive idea of what methods/classes/shaders are needed, and in doing so will avoid errors in your build. From testing this feature on a number of projects, we have found that Runtime Analysis reduces the size of the playable code by ~30%! This means you have more space for features and improved game art, which can drive engagement and experience. Warning! As this process is automated you may encounter build issues if the wrong script is marked for exclusion. If so, you can check the list of excluded code in the Runtime Analysis tab and untick any methods/classes/shaders that are needed. ","version":"Next","tagName":"h2"},{"title":"Where to find Runtime Analysis​","type":1,"pageTitle":"Runtime Analysis","url":"/docs/playable/optimise-your-builds/runtime-analysis#where-to-find-runtime-analysis","content":"Runtime Analysis can be found by navigating to the Runtime Analysis section of the Playable Plugin window.  You can also navigate to this tab from within the Size Optimisation tab, by clicking on the &quot;Optimize Scripts&quot; button.  ","version":"Next","tagName":"h2"},{"title":"How to use Runtime Analysis​","type":1,"pageTitle":"Runtime Analysis","url":"/docs/playable/optimise-your-builds/runtime-analysis#how-to-use-runtime-analysis","content":"Currently, Runtime Analysis runs continuously in background for any develop build. This allows developers not to have to rebuild the project just to execute Runtime Analysis, and this also help to strip unnecessary modules from the beginning of testing. In order to create an accurate exclusion list, you will need to refresh and playthrough as many aspects/interactions of your game as possible. This will allow Runtime Analysis to build a comprehensive list of methods/classes/shaders to not exclude from the build, and will avoid errors occurring. ","version":"Next","tagName":"h2"},{"title":"How to integrate Runtime Analysis into your Playable Creation process​","type":1,"pageTitle":"Runtime Analysis","url":"/docs/playable/optimise-your-builds/runtime-analysis#how-to-integrate-runtime-analysis-into-your-playable-creation-process","content":"remember Runtime Analysis records all used code and its final goal is to make sure you have checked all your work while you are building your playable. Here is an example of how Runtime Analysis should be integrated into your Playable Creation process: Take your project and import the latest version of Playable Plugin.Create a develop build and check that it works properly in the browser. Runtime Analysis will record the used code for this build.You might decide to implement a new feature: test it in Unity first, then test it in the develop build. Runtime analysis will record the code used for your feature.You might want to implement Orientation handling logic: firstly, you can test it in your Luna develop build and Runtime analysis will record the used code.You might implement Playground fields: firstly, test it in Luna develop build (dont forget to test all expected values), and Runtime analysis will record the used code. As a result, all functionalities youve worked on have been recorded by Runtime Analysis. Even if you rearranged your code and some of it is no longer needed, it will be included in the build anyway but it will not take much space. Warning! If you do not test your code in a Luna build, you cannot be sure it works properly. Please test every code change in develop mode. CLICK HERE for Runtime Analysis before Playable v3.4.1 Starting Runtime Analysis In order to start Runtime Analysis, first navigate to it within Playable Plugin Plugin. After doing so click on the &quot;Start Analysis&quot; button. This will go about building the game and checking the selected scene(s). When this process has completed, a pop-up window will appear asking you to run the playable in the browser. This is an important step in the analysis, as your playthrough will highlight any methods/classes that were missed out as 'needed' when the initial scan of your scene(s) was done. In order to create an accurate exclusion list, you will need to refresh and playthrough as many aspects/interactions of your game as possible. This will allow Runtime Analysis to build a comprehensive list of methods/classes/shaders to not exclude from the build, and will avoid errors occurring. The build that opens at the end of Runtime Analysis is a unique build that detects unused methods/classes. Future develop builds will allow Playable to re-include methods/classes that were previously marked as unused if their use is detected in future builds, but will not add more methods/classes to the exclusion list. To do so you will need to run Runtime Analysis again. Pausing Runtime Analysis With Playable Plugin 3.1.0, whenever a creative is tested in develop mode, Runtime Analysis will be automatically performed. This allows developers not to have to rebuild the project just to execute the Runtime Analysis process. Additionally, by activating the Pause Runtime Analysis checkbox, Runtime Analysis can be paused. By doing so, users can temporarily stop the feature from running so they do not have to go through every possible interaction every time a playable is tested. If you would like to undo all exclusions made by Runtime Analysis you can simply click on the 'Reset' button: Try resetting Runtime Analysis if any of your ad functionalities previously working in Unity suddenly do not work in Luna. Execute Runtime Analysis and play your playable again, but make sure that every app functionality is being called. ","version":"Next","tagName":"h3"},{"title":"Code Tab​","type":1,"pageTitle":"Runtime Analysis","url":"/docs/playable/optimise-your-builds/runtime-analysis#code-tab","content":"Once you tested your develop build, the exclusion list will update and the scripts will be organised in a hierarchical order that follows the structure below: Namespace └── Class Name └── Method Name  ","version":"Next","tagName":"h2"},{"title":"Disable Code Stripping​","type":1,"pageTitle":"Runtime Analysis","url":"/docs/playable/optimise-your-builds/runtime-analysis#disable-code-stripping","content":"When in you are in the Code Tab of Runtime Analysis, you will be presented with a Disable Code Stripping checkbox. By activating this checkbox, you will prevent Runtime Analysis from removing any code, regardless of the content of excluded code or excluded modules.  ","version":"Next","tagName":"h3"},{"title":"Undoing Exclusions​","type":1,"pageTitle":"Runtime Analysis","url":"/docs/playable/optimise-your-builds/runtime-analysis#undoing-exclusions","content":"If you have found that Runtime Analysis has marked a script you need for exclusion, you can untick said script from with the Excluded Code list:  ","version":"Next","tagName":"h3"},{"title":"Excluded Modules​","type":1,"pageTitle":"Runtime Analysis","url":"/docs/playable/optimise-your-builds/runtime-analysis#excluded-modules","content":"In this section, you can specify if your project does not use any of the following modules: Physics 3DPhysics 2DParticle SystemReflectionPrefabMecanim Activating the checkbox will make Runtime Analysis exclude the selected module, resulting in an additional size reduction. ","version":"Next","tagName":"h3"},{"title":"Shader Tab​","type":1,"pageTitle":"Runtime Analysis","url":"/docs/playable/optimise-your-builds/runtime-analysis#shader-tab","content":"","version":"Next","tagName":"h2"},{"title":"Disable Shader Stripping​","type":1,"pageTitle":"Runtime Analysis","url":"/docs/playable/optimise-your-builds/runtime-analysis#disable-shader-stripping","content":"While in the Shader Tab of Runtime Analysis, you will be presented with a Disable Shader Stripping checkbox. By activating this checkbox, you will prevent Runtime Analysis from from removing any shader.  ","version":"Next","tagName":"h3"},{"title":"Undoing Shader Variants Exclusions​","type":1,"pageTitle":"Runtime Analysis","url":"/docs/playable/optimise-your-builds/runtime-analysis#undoing-shader-variants-exclusions","content":"If you have found that Runtime Analysis has excluded a shader variant that is needed for the build, you can re-include it by using the Shader Tab in the Assets section of the plugin. Have a look a this document to see how the Shader Tab works. ","version":"Next","tagName":"h3"},{"title":"Playable API","type":0,"sectionRef":"#","url":"/docs/playable/playable-setup/playable-api","content":"","keywords":"network global functions playable luna","version":"Next"},{"title":"Handling screen orientation​","type":1,"pageTitle":"Playable API","url":"/docs/playable/playable-setup/playable-api#handling-screen-orientation","content":"We recommend that you build a responsive playable ad, and ensure that the UI and other elements scale or adapt accordingly. In a playable ad context, you will not have access to Unity APIs such as Input.deviceOrientation. Therefore we recommend using Screen.width and Screen.height to handle this. float screenRatio = (Screen.width/Screen.height); if (screenRatio &gt;= 1) { // Landscape Layout } else if (screenRatio &lt; 1) { // Portrait Layout }  ","version":"Next","tagName":"h2"},{"title":"App Store Clicks (CTAs)​","type":1,"pageTitle":"Playable API","url":"/docs/playable/playable-setup/playable-api#app-store-clicks-ctas","content":"When you wish to direct a user to the app store in your playable ad i.e. after clicking the in-game CTA button, or end card, then you need to call the following API from your game code: Luna.Unity.Playable.InstallFullGame();  ","version":"Next","tagName":"h2"},{"title":"Pausing and Resuming Gameplay​","type":1,"pageTitle":"Playable API","url":"/docs/playable/playable-setup/playable-api#pausing-and-resuming-gameplay","content":"In order to pause the gameplay when the app is sent to the background or the app store link is clicked, Luna provides lifecycle events to which you can subscribe. For example, it is recommended to pause the gameplay when the user leaves the app, or you may wish to present the end card after the user has returned. Please use the Luna.Unity.LifeCycle.OnResume and Luna.Unity.LifeCycle.OnPause events. For example: Luna.Unity.LifeCycle.OnPause += PauseGameplay; Luna.Unity.LifeCycle.OnResume += ResumeGameplay; ... ... private void PauseGameplay() { // Pause the game } private void ResumeGameplay() { // Resume the game }  ","version":"Next","tagName":"h2"},{"title":"Game Ended lifecycle event​","type":1,"pageTitle":"Playable API","url":"/docs/playable/playable-setup/playable-api#game-ended-lifecycle-event","content":"Some networks require that you notify them when the end of the playable ad is reached. This event must be called when the experience is complete, for example, when the end card is presented. Luna.Unity.LifeCycle.GameEnded();  Warning The current networks which require this are: MintegralVungle ","version":"Next","tagName":"h2"},{"title":"Testing your builds​","type":1,"pageTitle":"Playable API","url":"/docs/playable/playable-setup/playable-api#testing-your-builds","content":"Every ad network has their own specification and toolset for testing playables. See the following guides for how to test for each ad network. ","version":"Next","tagName":"h2"},{"title":"Playable Localisation","type":0,"sectionRef":"#","url":"/docs/playable/playable-setup/playable-localisation","content":"","keywords":"localise localisation language playable luna","version":"Next"},{"title":"Supporting one language per creative​","type":1,"pageTitle":"Playable Localisation","url":"/docs/playable/playable-setup/playable-localisation#supporting-one-language-per-creative","content":"","version":"Next","tagName":"h2"},{"title":"Changing fonts in Creative Suite​","type":1,"pageTitle":"Playable Localisation","url":"/docs/playable/playable-setup/playable-localisation#changing-fonts-in-creative-suite","content":"You may use the LunaPlaygroundAsset Attribute to change your playable font (.ttf) via the Creative Suite interface. This allows you to reduce the overall size of the playable, as only one font will be included in any given creative. After you have uploaded your build to Creative Suite, navigate to the playable editor.Find the font object in the left hand side menu.Click the empty asset space (grey bar) to open the Font upload dialogue.  The Font upload dialogue will now be presented. From here you can upload a .ttf file, and also set a custom alphabet for the given language.   The default alphabet is English, including additional characters. The default font size is 64 (this is related to the glyph size of the font atlas, not the text size). ","version":"Next","tagName":"h3"},{"title":"Including multiple fonts in your Unity Project​","type":1,"pageTitle":"Playable Localisation","url":"/docs/playable/playable-setup/playable-localisation#including-multiple-fonts-in-your-unity-project","content":"If you would like to manage your fonts and localisation in Unity, then you can include multiple fonts in the project and implement logic to switch between them as needed. note Please note that including multiple fonts can increase the final size of the playable. In your game, you should implement logic which allows you to change between fonts/languages in Creative Suite. For example: An enum which is used to control the font/alphabet in use.An integer which controls a number of languages.A boolean which turns on/off a specific font override. You will need to make sure that your font propagates through all Text components in your game. Once you have implemented your logic and included the necessary font files, you will need to set the alphabet for each font. Navigate to the Font tab (Playable Plugin Window &gt; Assets &gt; Fonts) and select the font, inputting the alphabet of your choice.   note As textures will be created from these characters, it is recommended that you only include the letters/symbols which will be used in the playable. Test your implementation, and upload to Creative Suite. ","version":"Next","tagName":"h3"},{"title":"Changing Playable text based on device language​","type":1,"pageTitle":"Playable Localisation","url":"/docs/playable/playable-setup/playable-localisation#changing-playable-text-based-on-device-language","content":"","version":"Next","tagName":"h2"},{"title":"GetPreferredLanguage API​","type":1,"pageTitle":"Playable Localisation","url":"/docs/playable/playable-setup/playable-localisation#getpreferredlanguage-api","content":"In order to make use of this API you will need to make use of the GetPreferredLanguage() API, which returns a string language code (e.g. &quot;en-GB&quot; for UK English) based on the device settings. Once you have read this value, you can use a Scriptable Object (SO) to manage the strings which are used for each text item in your playable. Note: This API works in Luna, not in Unity. To avoid errors in Unity be sure to preprocess the line where you are using it. #if UNITY_LUNA lang = Luna.Unity.Playable.GetPreferredLanguage(); #endif  This will return a code in a string format e.g.: &quot;en-gb&quot; for UK English, &quot;fr-fr&quot; for French, &quot;it-it&quot; for Italian. note Language code casing can differ depending upon the device being used. To avoid problems with this convert the string code to lower case. You can use a simple switch statement to determine the language..   Once you know the language of the device where your playable is running, you can use this to load the correct content into your text objects. info We also have an example project on our Luna Community Github showcasing the previously described method of implementing localisation using this API. ","version":"Next","tagName":"h3"},{"title":"Custom Events","type":0,"sectionRef":"#","url":"/docs/playable/playable-setup/analytics/custom-events","content":"","keywords":"custom events playable luna","version":"Next"},{"title":"Custom event limits​","type":1,"pageTitle":"Custom Events","url":"/docs/playable/playable-setup/analytics/custom-events#custom-event-limits","content":"In order to avoid misuse or user-code errors, Luna enforces two limits on custom events. 256 events logged per playable session You can log up to 256 events in a given playable session (per user). After 256 logged events, any subsequent events will be dropped by the server. 32 events per unique event name You can log up to 32 events per unique event in a given playable session (per user). After 32 logged events, any subsequent events will be dropped by the server. ","version":"Next","tagName":"h2"},{"title":"Pre-defined custom events​","type":1,"pageTitle":"Custom Events","url":"/docs/playable/playable-setup/analytics/custom-events#pre-defined-custom-events","content":"Luna provides a number of commonly used and useful custom events to be used in your playable. These events will also have pre-built reporting template in Creative Suite's Insights pages. Each event has a name and optional integer parameter. note The optional integer parameter is NOT optional when passing a string as the first parameter to the LogEvent function instead of an EventType. TutorialStarted - the user interacted with the tutorial.TutorialComplete - the user has completed the tutorial.LevelStart - a level was started.LevelWon - the user won a level.LevelFailed - the user failed a level.LevelRetry - a user retried a level.Score - submit a score to Luna Insights.EndCardShown - the end card was shown. ","version":"Next","tagName":"h2"},{"title":"Implementation Example​","type":1,"pageTitle":"Custom Events","url":"/docs/playable/playable-setup/analytics/custom-events#implementation-example","content":"public void GameEnded() { int levelReached = // level number reached by player, 0 if they failed on the first // if( levelReached &gt; 0 ) { Luna.Unity.Analytics.LogEvent(Luna.Unity.Analytics.EventType.LevelWon, levelReached); } else { // The integer value bares no meaning here, so any value will do. Luna.Unity.Analytics.LogEvent(Luna.Unity.Analytics.EventType.LevelFailed, 0); } // Log the game ended event Luna.Unity.LifeCycle.GameEnded(); ShowEndCard(); } public void ShowEndCard() { // Show the end card Luna.Unity.Analytics.LogEvent(Luna.Unity.Analytics.EventType.EndCardShown); }  ","version":"Next","tagName":"h3"},{"title":"Open custom events​","type":1,"pageTitle":"Custom Events","url":"/docs/playable/playable-setup/analytics/custom-events#open-custom-events","content":"If your game has specific experiences which you want to measure, and the needs aren't met via one of the pre-defined events detailed above, you can also use your own custom events. This API allows you to pass in any string, which will be logged and available for reporting in Luna Insights. ","version":"Next","tagName":"h2"},{"title":"Implementation Example​","type":1,"pageTitle":"Custom Events","url":"/docs/playable/playable-setup/analytics/custom-events#implementation-example-1","content":"For example, you could log an event with different values based on what threshold the user's score reached:  public void LevelOver() { int PlayerScore = // Score calculation // if( PlayerScore &lt; 500 ){ // In this example the value will not denote the exact score, but will be a representation of the threshold. Luna.Unity.Analytics.LogEvent(&quot;score_achieved&quot;, 0); } if( PlayerScore &lt; 1000 &amp;&amp; PlayerScore &gt; 500){ Luna.Unity.Analytics.LogEvent(&quot;score_achieved&quot;, 500); } if( PlayerScore &lt; 1500 &amp;&amp; PlayerScore &gt; 1000){ Luna.Unity.Analytics.LogEvent(&quot;score_achieved&quot;, 1000); } // etc. }  We recommend not passing in values that can widely vary like a player's score, as each unique value will create its own unique event. So if a score can vary between all values in between 0 - 1000, you could potentially end up with 1000 different events. ","version":"Next","tagName":"h3"},{"title":"Testing Custom Events in Creative Suite​","type":1,"pageTitle":"Custom Events","url":"/docs/playable/playable-setup/analytics/custom-events#testing-custom-events-in-creative-suite","content":"You can find out more on this here. ","version":"Next","tagName":"h2"},{"title":"Events Settings​","type":1,"pageTitle":"Custom Events","url":"/docs/playable/playable-setup/analytics/custom-events#events-settings","content":"You can find out more about these settings here. ","version":"Next","tagName":"h2"},{"title":"Ad Network Settings","type":0,"sectionRef":"#","url":"/docs/playable/playable-setup/settings/ad-network-settings","content":"","keywords":"ad network settings playable luna","version":"Next"},{"title":"Global Settings​","type":1,"pageTitle":"Ad Network Settings","url":"/docs/playable/playable-setup/settings/ad-network-settings#global-settings","content":"important The App store links previously available in the Ad Network Settings have been removed. You can now configure them within the Application Settings in the Creative Suite front-end. ","version":"Next","tagName":"h2"},{"title":"Application Name​","type":1,"pageTitle":"Ad Network Settings","url":"/docs/playable/playable-setup/settings/ad-network-settings#application-name","content":"The name of your application, which will be used in the Preloader displayed before the ad has loaded. ","version":"Next","tagName":"h3"},{"title":"Orientation​","type":1,"pageTitle":"Ad Network Settings","url":"/docs/playable/playable-setup/settings/ad-network-settings#orientation","content":"Some ad networks (TikTok and Tencent) require that you define whether your playable supports responsive or fixed orientation. ","version":"Next","tagName":"h3"},{"title":"Facebook​","type":1,"pageTitle":"Ad Network Settings","url":"/docs/playable/playable-setup/settings/ad-network-settings#facebook","content":"","version":"Next","tagName":"h2"},{"title":"Asset ID (optional)​","type":1,"pageTitle":"Ad Network Settings","url":"/docs/playable/playable-setup/settings/ad-network-settings#asset-id-optional","content":"The unique ID of your asset. ","version":"Next","tagName":"h3"},{"title":"Package type (ZIP / Inline)​","type":1,"pageTitle":"Ad Network Settings","url":"/docs/playable/playable-setup/settings/ad-network-settings#package-type-zip--inline","content":"Whether the build for Facebook is provided as a ZIP (5Mb limit) or a single inlined HTML file (2Mb limit). ","version":"Next","tagName":"h3"},{"title":"ironSource​","type":1,"pageTitle":"Ad Network Settings","url":"/docs/playable/playable-setup/settings/ad-network-settings#ironsource","content":"","version":"Next","tagName":"h2"},{"title":"API type​","type":1,"pageTitle":"Ad Network Settings","url":"/docs/playable/playable-setup/settings/ad-network-settings#api-type","content":"As outlined here, the API which will be used in the playable ad. It is recommended to leave this setting as Legacy (DAPI). Changing the API type expands to include additional options.  API mode: pa (playable) or iec (interactive end card)Version code (please consult ironSource documentation)Application Genre ","version":"Next","tagName":"h3"},{"title":"Package type (Inline / CDN)​","type":1,"pageTitle":"Ad Network Settings","url":"/docs/playable/playable-setup/settings/ad-network-settings#package-type-inline--cdn","content":"Whether the build for ironSource is provided as a single inlined HTML file, or used a CDN to deliver the assets. ","version":"Next","tagName":"h3"},{"title":"TikTok & Tencent​","type":1,"pageTitle":"Ad Network Settings","url":"/docs/playable/playable-setup/settings/ad-network-settings#tiktok--tencent","content":"","version":"Next","tagName":"h2"},{"title":"Orientation​","type":1,"pageTitle":"Ad Network Settings","url":"/docs/playable/playable-setup/settings/ad-network-settings#orientation-1","content":"Both TikTok and Tencent require that you define whether your playable supports responsive or fixed orientation. ","version":"Next","tagName":"h3"},{"title":"TikTok​","type":1,"pageTitle":"Ad Network Settings","url":"/docs/playable/playable-setup/settings/ad-network-settings#tiktok","content":"","version":"Next","tagName":"h2"},{"title":"Supported Languages​","type":1,"pageTitle":"Ad Network Settings","url":"/docs/playable/playable-setup/settings/ad-network-settings#supported-languages","content":"TikTok requires that you specify which languages your playable will support. ","version":"Next","tagName":"h3"},{"title":"Optimising Particles","type":0,"sectionRef":"#","url":"/docs/playable/optimise-your-builds/optimising-assets/optimising-particles","content":"","keywords":"particles optimise reduce size playable luna","version":"Next"},{"title":"Baking Particles​","type":1,"pageTitle":"Optimising Particles","url":"/docs/playable/optimise-your-builds/optimising-assets/optimising-particles#baking-particles","content":"Let's start with the method that causes the least loss in quality, baking your particles into a series of pngs that can be used to create an animation. There are a few factors to consider when deciding whether or not to go with this approach: Are the effects using regular shapes and quite small in size (width/height)?Are the effects not making use of physics? i.e. Are the particles not interacting with one another?Does the particle effect look similar between multiple simulations? If the answer is yes to these questions this is likely the best approach for you. If not we have other methods towards the end of this page. For this process we will be making use of a public script that takes screenshots of our scene and adds them to a folder at our project's root folder. You can find this script by clicking here, or alternatively by copying the code below. CLICK HERE FOR SCRIPT using UnityEngine; using System.Collections; using System.IO; /* Usage: 1. Attach this script to your chosen camera's game object. 2. Set that camera's Clear Flags field to Solid Color. 3. Use the inspector to set frameRate and framesToCapture 4. Choose your desired resolution in Unity's Game window (must be less than or equal to your screen resolution) 5. Turn on &quot;Maximise on Play&quot; 6. Play your scene. Screenshots will be saved to YourUnityProject/Screenshots by default. */ public class TransparentBackgroundScreenshotRecorder : MonoBehaviour { #region public fields [Tooltip(&quot;A folder will be created with this base name in your project root&quot;)] public string folderBaseName = &quot;Screenshots&quot;; [Tooltip(&quot;How many frames should be captured per second of game time&quot;)] public int frameRate = 24; [Tooltip(&quot;How many frames should be captured before quitting&quot;)] public int framesToCapture = 24; #endregion #region private fields private string folderName = &quot;&quot;; private GameObject whiteCamGameObject; private Camera whiteCam; private GameObject blackCamGameObject; private Camera blackCam; private Camera mainCam; private int videoFrame = 0; // how many frames we've rendered private float originalTimescaleTime; private bool done=false; private int screenWidth; private int screenHeight; private Texture2D textureBlack; private Texture2D textureWhite; private Texture2D textureTransparentBackground; #endregion void Awake () { mainCam = gameObject.GetComponent&lt;Camera&gt;(); CreateBlackAndWhiteCameras (); CreateNewFolderForScreenshots (); CacheAndInitialiseFields (); Time.captureFramerate = frameRate; } void LateUpdate () { if(!done){ StartCoroutine(CaptureFrame()); } else { Debug.Log(&quot;Complete! &quot;+videoFrame+&quot; videoframes rendered. File names are 0 indexed)&quot;); Debug.Break(); } } IEnumerator CaptureFrame (){ yield return new WaitForEndOfFrame(); if(videoFrame &lt; framesToCapture) { RenderCamToTexture(blackCam,textureBlack); RenderCamToTexture(whiteCam,textureWhite); CalculateOutputTexture (); SavePng (); videoFrame++; Debug.Log(&quot;Rendered frame &quot; +videoFrame); videoFrame++; } else { done=true; StopCoroutine(&quot;CaptureFrame&quot;); } } void RenderCamToTexture (Camera cam, Texture2D tex){ cam.enabled=true; cam.Render(); WriteScreenImageToTexture(tex); cam.enabled=false; } void CreateBlackAndWhiteCameras (){ whiteCamGameObject = (GameObject) new GameObject(); whiteCamGameObject.name=&quot;White Background Camera&quot;; whiteCam=whiteCamGameObject.AddComponent&lt;Camera&gt;(); whiteCam.CopyFrom(mainCam); whiteCam.backgroundColor=Color.white; whiteCamGameObject.transform.SetParent(gameObject.transform, true); blackCamGameObject = (GameObject) new GameObject(); blackCamGameObject.name=&quot;Black Background Camera&quot;; blackCam=blackCamGameObject.AddComponent&lt;Camera&gt;(); blackCam.CopyFrom(mainCam); blackCam.backgroundColor=Color.black; blackCamGameObject.transform.SetParent(gameObject.transform, true); } void CreateNewFolderForScreenshots (){ // Find a folder name that doesn't exist yet. Append number if necessary. folderName = folderBaseName; int count = 1; while (System.IO.Directory.Exists (folderName)) { folderName = folderBaseName + count; count++; } System.IO.Directory.CreateDirectory (folderName); // Create the folder } void WriteScreenImageToTexture (Texture2D tex){ tex.ReadPixels (new Rect (0, 0, screenWidth, screenHeight), 0, 0); tex.Apply (); } void CalculateOutputTexture (){ Color color; for (int y = 0; y &lt; textureTransparentBackground.height; ++y) { // each row for (int x = 0; x &lt; textureTransparentBackground.width; ++x) { // each column float alpha = textureWhite.GetPixel (x, y).r - textureBlack.GetPixel (x, y).r; alpha = 1.0f - alpha; if (alpha == 0) { color = Color.clear; } else { color = textureBlack.GetPixel (x, y) / alpha; } color.a = alpha; textureTransparentBackground.SetPixel (x, y, color); } } } void SavePng (){ string name = string.Format (&quot;{0}/{1:D04} shot.png&quot;, folderName, videoFrame); var pngShot = textureTransparentBackground.EncodeToPNG (); File.WriteAllBytes (name, pngShot); } void CacheAndInitialiseFields (){ originalTimescaleTime = Time.timeScale; screenWidth = Screen.width; screenHeight = Screen.height; textureBlack = new Texture2D (screenWidth, screenHeight, TextureFormat.RGB24, false); textureWhite = new Texture2D (screenWidth, screenHeight, TextureFormat.RGB24, false); textureTransparentBackground = new Texture2D (screenWidth, screenHeight, TextureFormat.ARGB32, false); } }  Once you have imported this script into your Unity project we are ready to begin. NOTE This script is likely to cause compilation issues when building for Luna, once you have finished baking your particles be sure to either exclude it from the build or remove it from your project folder. ","version":"Next","tagName":"h2"},{"title":"Baking your Particle System(s)​","type":1,"pageTitle":"Optimising Particles","url":"/docs/playable/optimise-your-builds/optimising-assets/optimising-particles#baking-your-particle-systems","content":"One thing to note before we begin, you can layer multiple particle systems within the same scene to create one animation containing all of them. Create a fresh Unity scene containing a camera, and the particle system(s) you wish to bake.Add the TransparentBackgroundScreenshotRecorder script onto the scene's camera, and set the camera's Clear Flags field to Solid Color.Within the inspector you can set your desired frameRate and total number of frames to screenshot. tip The higher the values set here will increase the screenshots and thusly the space taken up by the animation. 24 FPS is a good target, as playables usually average 30 FPS, but keep in mind how long your particle takes to finish when deciding for yourself. Position your particle system(s) so that they will be rendered by the camera, and set a resolution for your camera that fits.Turn on &quot;Maximise on Play&quot; within the game window in Unity. 6. Play your scene, screenshots will be saved to YourUnityProject/Screenshots by default. caution If you plan to work within the same scene going forward, be sure to disable or remove the script from the camera otherwise the capture process will begin again next time you hit play! ","version":"Next","tagName":"h3"},{"title":"Converting to an animation​","type":1,"pageTitle":"Optimising Particles","url":"/docs/playable/optimise-your-builds/optimising-assets/optimising-particles#converting-to-an-animation","content":"Before starting this process, be sure to check the screenshots taken to see if they are to your liking. If not you can always delete the folder, go back to the previous process, tweak the FPS / Frames to Capture / Resolution and try again. Import the screenshots taken into your Unity project folder.Convert these images into Sprites via the Import Settings.Select all the sprites you wish to include in the animation, and drag them into the scene all at once.An animation will be generated and you will be asked to assign a name. And done! You have successfully converted your particle system into an animation! You can now go about replacing the existing particle system in your playable scene with this animation, as well as make any tweaks you'd like to the animation itself. ","version":"Next","tagName":"h3"},{"title":"Pros and cons​","type":1,"pageTitle":"Optimising Particles","url":"/docs/playable/optimise-your-builds/optimising-assets/optimising-particles#pros-and-cons","content":"Pros\tConsFaster performance.\tTypically larger file-size and thus more memory usage. The original particles can be high quality, and still end up looking the same in Luna as it did in Unity.\tThe baked animation is always the same, to get variety you would need to have a couple of different renders. ","version":"Next","tagName":"h3"},{"title":"Solving the file size increase​","type":1,"pageTitle":"Optimising Particles","url":"/docs/playable/optimise-your-builds/optimising-assets/optimising-particles#solving-the-file-size-increase","content":"With the increased file size we need to make sure we also optimise these new assets. The quick fix is to use the PNG format. We can start with these settings as we can still optimise the PNG size by up-to 50% while keeping the quality of the images:   ","version":"Next","tagName":"h3"},{"title":"Reducing Particle Complexity​","type":1,"pageTitle":"Optimising Particles","url":"/docs/playable/optimise-your-builds/optimising-assets/optimising-particles#reducing-particle-complexity","content":"Some particle systems may contain effects that wouldn't work if baked due to how they function, like a trailing smoke effect. In these cases it may instead be better to reduce the complexity of the effects that cannot be baked, whilst baking the parts of the particle that can be. To reduce particle complexity you can cut the amount of emitted particles by however much you deem to be visually viable. ","version":"Next","tagName":"h2"},{"title":"Removing Small Particle Details​","type":1,"pageTitle":"Optimising Particles","url":"/docs/playable/optimise-your-builds/optimising-assets/optimising-particles#removing-small-particle-details","content":"If your particle systems contain small details, like slight changes to color and size over time, it may be an idea to cut these features from the particle system entirely. Many users will likely not notice small details during their 15-20 seconds of playtime, but they can however affect performance, which is something a player is much more likely to notice. ","version":"Next","tagName":"h2"},{"title":"Advanced Settings","type":0,"sectionRef":"#","url":"/docs/playable/playable-setup/settings/advanced-settings","content":"","keywords":"advanced settings playerprefs base64 code minification preloader anti aliasing compress resources background playable luna","version":"Next"},{"title":"Use PlayerPrefs​","type":1,"pageTitle":"Advanced Settings","url":"/docs/playable/playable-setup/settings/advanced-settings#use-playerprefs","content":"If your game uses PlayerPrefs, then you may use this checkbox to test the playable behaviour as some ad networks may not facilitate the storing/retrieving of local data. ","version":"Next","tagName":"h2"},{"title":"Code Minification​","type":1,"pageTitle":"Advanced Settings","url":"/docs/playable/playable-setup/settings/advanced-settings#code-minification","content":"Recommended Code minification removes unnecessary or redundant data without affecting how the code is executed in the browser. This should be used to reduce the overall size of your playable. ","version":"Next","tagName":"h2"},{"title":"Force Disable Anti Aliasing​","type":1,"pageTitle":"Advanced Settings","url":"/docs/playable/playable-setup/settings/advanced-settings#force-disable-anti-aliasing","content":"By default, anti aliasing will be used if supported by the device which is running the playable. Use this option if you want to disable anti alias for all devices. ","version":"Next","tagName":"h2"},{"title":"Use Base64 encoding​","type":1,"pageTitle":"Advanced Settings","url":"/docs/playable/playable-setup/settings/advanced-settings#use-base64-encoding","content":"Luna now encodes assets such as images and videos in Base122. By switching to Base122, we can now represent assets using 122 characters instead of 64, saving up to ~30% space in comparison to Base64. The only downside is that browsers only support Base64 encoding, but this is handled by a javascript library on our end while the ad is loading. However, this slightly adds to the startup time. Base122 will be the default setting, however, users can revert to Base64 by using this setting.  ","version":"Next","tagName":"h2"},{"title":"Project Settings​","type":1,"pageTitle":"Advanced Settings","url":"/docs/playable/playable-setup/settings/advanced-settings#project-settings","content":" ","version":"Next","tagName":"h2"},{"title":"Auto-instantiate prefabs​","type":1,"pageTitle":"Advanced Settings","url":"/docs/playable/playable-setup/settings/advanced-settings#auto-instantiate-prefabs","content":"info This toggle is not be present in Playable Plugin 4.4.0 and newer versions as it has been reworked and is automatically enabled. The Auto-instantiate Prefabs option instantiates prefabs during playable startup when enabled. This can lead to longer loading time but reduce frame rate drops during gameplay. ","version":"Next","tagName":"h3"},{"title":"Realtime Shadows​","type":1,"pageTitle":"Advanced Settings","url":"/docs/playable/playable-setup/settings/advanced-settings#realtime-shadows","content":"You can enable/disable Realtime Shadows in your project by using this option. ","version":"Next","tagName":"h3"},{"title":"Bake Reference Ambient Probe​","type":1,"pageTitle":"Advanced Settings","url":"/docs/playable/playable-setup/settings/advanced-settings#bake-reference-ambient-probe","content":"For more information on this, click here. ","version":"Next","tagName":"h3"},{"title":"Luna Compiler V2 (from Unity 2020.2 and newer versions)​","type":1,"pageTitle":"Advanced Settings","url":"/docs/playable/playable-setup/settings/advanced-settings#luna-compiler-v2-from-unity-20202-and-newer-versions","content":"The new pipeline compiles C# 9.0 / 8.0 and downgrades the C# version of code. Then, the pipeline compiles the lowered C# version code and converts it into JavaScript. Check this option to activate it. For more information about the new scripting pipiline: click here. ","version":"Next","tagName":"h3"},{"title":"Preloader​","type":1,"pageTitle":"Advanced Settings","url":"/docs/playable/playable-setup/settings/advanced-settings#preloader","content":"The preloader is displayed while the playable ad is initialising, to ensure users aren't left waiting with a blank screen.  ","version":"Next","tagName":"h2"},{"title":"Active​","type":1,"pageTitle":"Advanced Settings","url":"/docs/playable/playable-setup/settings/advanced-settings#active","content":"This checkbox enables or disables the preloader. ","version":"Next","tagName":"h3"},{"title":"Icon​","type":1,"pageTitle":"Advanced Settings","url":"/docs/playable/playable-setup/settings/advanced-settings#icon","content":"The icon will be displayed in the centre of the screen. Recommended size: 50x50 pixels. ","version":"Next","tagName":"h3"},{"title":"Background Color​","type":1,"pageTitle":"Advanced Settings","url":"/docs/playable/playable-setup/settings/advanced-settings#background-color","content":"Use this field to change the background color of the preloader. ","version":"Next","tagName":"h3"},{"title":"Configure Game Variables","type":0,"sectionRef":"#","url":"/docs/playable/playable-setup/configure-game-variables","content":"","keywords":"configure game variable create hub playable luna","version":"Next"},{"title":"Attribute Types​","type":1,"pageTitle":"Configure Game Variables","url":"/docs/playable/playable-setup/configure-game-variables#attribute-types","content":"","version":"Next","tagName":"h2"},{"title":"LunaPlaygroundField​","type":1,"pageTitle":"Configure Game Variables","url":"/docs/playable/playable-setup/configure-game-variables#lunaplaygroundfield","content":"This is the most common Luna attribute, and should be used for the scriptable game objects you wish to edit from Creative Suite. For example, you will want to use this for all text and colors for the end card. Supported Types StringIntegerFloatColorVector2Vector3Vector4EnumsBoolRange slider (see below for how to implement)Arrays of the above types (e.g. String[], Int[] etc.) To see how to set the maximum and minimum length for an array field, click here. ","version":"Next","tagName":"h3"},{"title":"LunaPlaygroundAsset​","type":1,"pageTitle":"Configure Game Variables","url":"/docs/playable/playable-setup/configure-game-variables#lunaplaygroundasset","content":"This should be used when you want to create multiple variations of your ads with different textures or videos, but don't want to increase the overall build size. When using this attribute, you will be able to upload images or videos directly in Creative Suite. For example, you may wish to change the game icon for your end card. caution LunaPlaygroundAssets must be assigned a default value in Unity. Assets without a default value will not be shown in Creative Suite. Testing assets fields in the Dev Environment with a Develop build will not work. This field can only be tested in Luna Create Hub. Supported Types Image or texture (.png, .jpg, .jpeg) In Unity, please use Texture or Texture2D Audio (.mp3) - This type is supported only after version 3.3.0. In Unity, please use UnityEngine.AudioClip Video (.mp4) In Unity, please use Video.VideoClip Font (.ttf) In Unity, please use UnityEngine.Font info Please keep in mind that due to technical specifics of implementation, all instances of a class with variation-controlled fields will receive an updated value. That is fine for Scriptable Objects (because those normally exist as a single instance anyway), but might be a surprise for Mono Behaviours. For example; referencing the same texture as a LunaPlaygroundAsset in two separate scripts will result in one combined field in Creative Suite. ","version":"Next","tagName":"h3"},{"title":"LunaPlaygroundFieldStep (Range Slider)​","type":1,"pageTitle":"Configure Game Variables","url":"/docs/playable/playable-setup/configure-game-variables#lunaplaygroundfieldstep-range-slider","content":"This attribute allows you to define a range of values (min and max) that can be applied to an int or float value, as well as the cardinality of this range (i.e the number of increments). In Creative Suite, this will be represented as a slider. For example: [LunaPlaygroundFieldStep(0.5f)] [LunaPlaygroundField(&quot;Amount of lives&quot;, 1, &quot;Game Settings&quot;)] [Range(0, 10)] public float someFloat  This will add a range slider to Creative Suite that allows values inclusively between 0 &amp; 10, and will increment between them by 0.5 at a time. ","version":"Next","tagName":"h3"},{"title":"LunaPlaygroundFieldArrayLength​","type":1,"pageTitle":"Configure Game Variables","url":"/docs/playable/playable-setup/configure-game-variables#lunaplaygroundfieldarraylength","content":"This attribute allows you to create an array and add/remove values in Creative Suite, for example, adding new characters to a scene. You must define the the minimum and maximum objects for the array. For example: [LunaPlaygroundFieldArrayLength(1, 5)] [LunaPlaygroundField(&quot;Character Names&quot;, 1, &quot;Game Settings&quot;)] public string[] characterNames;  This will add an array of strings to Creative Suite that allows at minimum 1 string, and a maximum of 5. ","version":"Next","tagName":"h3"},{"title":"Implementation​","type":1,"pageTitle":"Configure Game Variables","url":"/docs/playable/playable-setup/configure-game-variables#implementation","content":"For each LunaPlaygroundField, you can specify the title, group and field order. [LunaPlaygroundField(&quot;Field title&quot;, 0, &quot;Group title&quot;)] Field title: The name of the field in Creative Suite i.e. &quot;End card title&quot;Field order: The order of the field in Creative SuiteField section: The name of the group to which the field belongs i.e. &quot;End Card&quot; ","version":"Next","tagName":"h2"},{"title":"Example​","type":1,"pageTitle":"Configure Game Variables","url":"/docs/playable/playable-setup/configure-game-variables#example","content":"[Header(&quot;Playable Ad Settings&quot;)] [SerializeField] [LunaPlaygroundField(&quot;Color of the player&quot;, 1, &quot;Player Controls&quot;)] private Color playerColor = Color.blue; [SerializeField] [LunaPlaygroundField(&quot;Speed of the player&quot;, 2, &quot;Player Controls&quot;)] private float playerSpeed = 1f; [SerializeField] [LunaPlaygroundField(&quot;Number of levels&quot;, 3, &quot;Game Controls&quot;)] private int gameLevels = 1; [SerializeField] [LunaPlaygroundField(&quot;Relative game difficulty&quot;, 4, &quot;Game Controls&quot;)] private int gameDifficulty = 3; [SerializeField] [LunaPlaygroundAsset(&quot;Game Icon&quot;, 5, &quot;End Card&quot;)] private Texture gameIconTexture; [SerializeField] [LunaPlaygroundAsset(&quot;Video Clip&quot;, 6, &quot;End Card&quot;)] private VideoClip videoClip;  ","version":"Next","tagName":"h2"},{"title":"Playground Sections​","type":1,"pageTitle":"Configure Game Variables","url":"/docs/playable/playable-setup/configure-game-variables#playground-sections","content":"The LunaPlaygroundSection attribute can be applied to a class in order to add all Luna Fields and Assets into the same Creative Suite section, making it easier to organise your fields in Creative Suite. info The Playground section will be overridden by the optional parameter, &quot;FieldSection&quot;, of a LunaPlaygroundField or LunaPlaygroundAsset attribute. For example: [LunaPlaygroundSection(&quot;Player Controls&quot;, 1)] public class Player : MonoBehaviour { [SerializeField] [LunaPlaygroundField(&quot;Color of the player&quot;, 1)] private Color playerColor = Color.blue; [SerializeField] [LunaPlaygroundField(&quot;Speed of the player&quot;, 2) private float playerSpeed = 1f; }  ","version":"Next","tagName":"h2"},{"title":"Recommended variables​","type":1,"pageTitle":"Configure Game Variables","url":"/docs/playable/playable-setup/configure-game-variables#recommended-variables","content":"We recommend at a minimum, to use the LunaPlaygroundField attribute for: Call to action colorsCall to action text values.In-ad messages such as those found in end cards or tutorials. ","version":"Next","tagName":"h2"},{"title":"Runtime Performance","type":0,"sectionRef":"#","url":"/docs/playable/optimise-your-builds/runtime-performance","content":"","keywords":"runtime performance tips optimise playable luna","version":"Next"},{"title":"Accessing Data​","type":1,"pageTitle":"Runtime Performance","url":"/docs/playable/optimise-your-builds/runtime-performance#accessing-data","content":"tip Use Arrays instead of lists. When translating lists in C# to JavaScript, there are a number of additional check (such as methods to check whether the data is out of range) which add unnecessary overhead. Therefore, we recommend that you use arrays instead of lists where possible. An example is using LINQ in your game to loop through lists, as this can result in performance issues if this process is repetitive. Generally avoid using LINQ loops during the gameplay to iterate through lists. Although this operation is usually fine on start, it can be expensive during the gameplay. Functions like List&lt;&gt;.FindAll() methods are really expensive, we have seen these used and can cause performance lags, especially when comparing enums as this adds additional overhead. Where ever possible try to cache references, reducing these calls eliminates the need to: • Search the list. • Compare the elements multiple times. Thus improving performance. On top of caching using a regular for loop to iterate an array is much more efficient method than using LINQ to loop through lists. So if you have to iterate through, use arrays and use regular for loops where possible. Don't do: public List&lt;int&gt; Values;  Do: public int[] Values;  ","version":"Next","tagName":"h2"},{"title":"Caching​","type":1,"pageTitle":"Runtime Performance","url":"/docs/playable/optimise-your-builds/runtime-performance#caching","content":"tip Store and reuse structures as much as possible. When your C# is transpiled to JavaScript, every call (especially for a structure) will lead to duplication in memory. Therefore you should try to store and reuse as much as possible. ","version":"Next","tagName":"h2"},{"title":"Storing structures​","type":1,"pageTitle":"Runtime Performance","url":"/docs/playable/optimise-your-builds/runtime-performance#storing-structures","content":"Don't do: for (int index = 0; index &lt; Triangles.Count; index++) { var tri = Triangles[index]; // grab local variables for easier access var vA = new Vertex(tri.idA, tri.posA, tri.uvA, tri.normalA /*, tri.tangentA, tri.colorA*/); /* Do something with vA, having it as a temp value */ }  Do: var count = Triangles.Length; Triangle tri = new Triangle(); var vA = new Vertex(); for (int index = 0; index &lt; count; index++) { tri.Set( Triangles[index]); // grab local variables for easier access vA.Set(tri.idA, tri.posA, tri.uvA, tri.normalA /*, tri.tangentA, tri.colorA*/); /* Note here Triangle and Vertex are Structures and Set method reuses them */ }  ","version":"Next","tagName":"h3"},{"title":"Storing vectors​","type":1,"pageTitle":"Runtime Performance","url":"/docs/playable/optimise-your-builds/runtime-performance#storing-vectors","content":"Using vector.x is very common, yet add minor overhead in JavaScript since .x is a property which must be accessed. Don't do: var n = plane.normal;  Do: var normalX = plane.normal.x; var normalY = plane.normal.y; var normalZ = plane.normal.z;  ","version":"Next","tagName":"h3"},{"title":"Allocation reduction​","type":1,"pageTitle":"Runtime Performance","url":"/docs/playable/optimise-your-builds/runtime-performance#allocation-reduction","content":"tip Pass structures into methods as a reference to avoid cloning. One of the most common use cases for allocations is passing structs in/out of methods. To improve this in JavaScript, you can make use of the specific Bridge attribute, [Ref]. For example, a heavy Triangle structure being passed into a method: Don't Do: public void Set( Triangle triangle){**} /* This will lead to it being cloned at the moment it is called. */  Do: public void Set( [Ref] Triangle triangle){**} /* This way the structure is passed as a reference and no cloning will happen.{**} Note: To get rid of missing attribute, wrap usage and method in defines: */ #if UNITY_LUNA using Bridge; #endif #if UNITY_LUNA public void Set( [Ref] Triangle triangle); #else public void Set( Triangle triangle); #endif  ","version":"Next","tagName":"h2"},{"title":"Set Optimal Settings Button","type":0,"sectionRef":"#","url":"/docs/playable/playable-setup/settings/set-optimal-settings","content":"","keywords":"ad network settings playable luna set optimal button","version":"Next"},{"title":"Where the button is located​","type":1,"pageTitle":"Set Optimal Settings Button","url":"/docs/playable/playable-setup/settings/set-optimal-settings#where-the-button-is-located","content":"This button can be located in each individual tab of the Assets section of the Playable plugin window.  ","version":"Next","tagName":"h2"},{"title":"What settings does this apply?​","type":1,"pageTitle":"Set Optimal Settings Button","url":"/docs/playable/playable-setup/settings/set-optimal-settings#what-settings-does-this-apply","content":"Setting Name\tSetting Description\tValue(s) Set by this buttonSet textures default (maxHeight &amp; maxWidth)\tThe width/height for textures in pixels.\t512 Textures default format\tThe default format to use for textures, unless otherwise changed for individual textures.\tPNG32 Textures default compression\tThe default compression method to use for textures, unless otherwise changed for individual textures.\tPNGQuant small size Textures default quality for JPEG\tThe default quality for JPEG textures, unless otherwise changed for individuals.\t65 Sounds default format\tSet sounds to be either Stereo, Mono or their original state (default).\tmono Sounds default bitrate\tSet the maximum bitrate for sound files.\t128 Sounds default duration\tSet the maximum duration for sound files.\t30 Store Meshes in Half-precision floating-point format\tReduces Mesh size by storing values in half-precision.\tEnabled Store Animations in Half-precision floating-point format\tReduces Animation size by storing values in half-precision.\tEnabled Code minification\tRemoves unnecessary or redundant data without affecting how the code is executed in the browser.\tEnabled Compress resources\tApplies compression to all resources in the playable ad to reduce size.\tEnabled Force disable Anti Aliasing\tDisable Anti Aliasing for all devices.\tEnabled ","version":"Next","tagName":"h2"},{"title":"Optimising Startup Time","type":0,"sectionRef":"#","url":"/docs/playable/optimise-your-builds/startup-time/optimising-startup","content":"","keywords":"startup time optimise playable luna","version":"Next"},{"title":"How to optimise your startup time​","type":1,"pageTitle":"Optimising Startup Time","url":"/docs/playable/optimise-your-builds/startup-time/optimising-startup#how-to-optimise-your-startup-time","content":"By optimising the startup time of your Unity scene, you will also improve the start up time of your playable. We recommend that you start by optimising by using the inbuilt Profiler in Unity.You may also use Chrome Dev Tools for more advanced optimisation.Smaller playables typically have shorter startup times - check out the guide for optimising assets.If youre storing prefabs of entire levels, its a good idea to remove any objects not seen in the playable, this helps to reduce initial load times. Also, remove any prefabs that arent going to be used in the playable. ","version":"Next","tagName":"h2"},{"title":"Here are some common techniques which may help you achieve a lower startup time.​","type":1,"pageTitle":"Optimising Startup Time","url":"/docs/playable/optimise-your-builds/startup-time/optimising-startup#here-are-some-common-techniques-which-may-help-you-achieve-a-lower-startup-time","content":"Remove/reduce heavy Awake/Start methods.Avoid using GetComponent / FindObject calls which are slow and resource consuming, especially in update and fixed update methods only use them unless absolutely necessary.Cache your references instead of dynamically finding them to avoid looking up objects as much as possible.Avoid unnecessary physics collisions in your scene use the Physics Matrix - Edit &gt; Project Settings, then select checkboxes to adjust the settings.Physics - avoid unnecessary use of components like Continuous collision detection (CCD).Avoid using particles systems with high amounts of particles (Unity has 1000 by default, whereas 50-100 is typically suitable for a playable ad).Keep your project hierarchy tidy - avoid unnecessary nesting of objects, avoid deep nests.Use ShaderVariantCollections with as few shaders as possible - refer to the guide for optimising shaders.If your scene requires many static objects, then consider baking them.Consider using batching or baking for a large number of objects that remain still or move together, although be careful as this can result in increased size. Baking may be advantageous, particularly for static meshes that are not entirely reliant on batching. Although batching does offer a performance increase, there are certain computations handled during runtime that can be avoided by baking.Unity Text is which is more optimal during gameplay than TMP_Text - use TMP for end cards, and Unity text for in game text.Avoid using TMP_Text autosize if possible. info Playable can help you measuring the startup time of your projects. Click here to learn how. ","version":"Next","tagName":"h3"},{"title":"Creating and Managing Apps in Creative Suite","type":0,"sectionRef":"#","url":"/docs/playable/playground/create-apps","content":"","keywords":"create hub creating managing apps playable luna","version":"Next"},{"title":"How builds are sorted when uploading from the Playable Plugin​","type":1,"pageTitle":"Creating and Managing Apps in Creative Suite","url":"/docs/playable/playground/create-apps#how-builds-are-sorted-when-uploading-from-the-playable-plugin","content":"When you upload a playable from within the Playable Plugin plugin using the Build and upload button, we check if there is already an app in Creative Suite that contains builds from the same game. If there is, the build will be placed in that existing app. If not, a new app will be created in order to house it. ","version":"Next","tagName":"h2"},{"title":"Creating Apps Manually​","type":1,"pageTitle":"Creating and Managing Apps in Creative Suite","url":"/docs/playable/playground/create-apps#creating-apps-manually","content":"You can also create apps yourself within Creative Suite: First navigate to the Creative Library page, and click on the + New App button in the top right.   This will open a modal menu where you can insert your playable store URL.   By inserting the store URL, Creative Suite will automatically fetch the needed information about your game and set up the Application Settings for you. If you don't have an application URL, just select I don't have an application URL. This will extend the modal menu allowing you to set your Application Settings manually. You will need to set up the application name (only required field), icon, and the app visibility.   After naming the app, hit Create App to finish the process. Your app will now be part of your Creative Library in Creative Suite. You can click on it to begin adding builds. ","version":"Next","tagName":"h2"},{"title":"Application Settings​","type":1,"pageTitle":"Creating and Managing Apps in Creative Suite","url":"/docs/playable/playground/create-apps#application-settings","content":"Below you can find info on each of the fields/options that are displayed when creating an App. You can also access and edit these settings for existing apps by selecting the kebab menu (3 dots) at the end of the app's row or by accessing the application and clicking on the Edit Application button at the top-right of the page. Application RowEdit Application Button Within this same menu is the option to delete the app as well. danger Careful! This will delete all concepts housed inside of the app as well! ","version":"Next","tagName":"h2"},{"title":"Fields​","type":1,"pageTitle":"Creating and Managing Apps in Creative Suite","url":"/docs/playable/playground/create-apps#fields","content":"Field\tOptional\tDescriptionApplication Name\tNo\tThis will be the name displayed in Creative Suite, and will be the main way of distinguishing an app from the rest (other than the app icon). Icon\tYes\tThe icon used in Creative Suite shown to distinguish your app. Apple URL\tYes\tThe Apple App Store link for your game. Whilst these URLs are not yet used in any specific functionality, we recommend to include the URLs so that uploaded concepts can be easily mapped, and as future updates to the platform will utilise these. Google Play URL\tYes\tThe Google Play Store link for your game. Whilst these URLs are not yet used in any specific functionality, we recommend to include the URLs so that uploaded concepts can be easily mapped, and as future updates to the platform will utilise these. ","version":"Next","tagName":"h3"},{"title":"Visibility​","type":1,"pageTitle":"Creating and Managing Apps in Creative Suite","url":"/docs/playable/playground/create-apps#visibility","content":"This field allows you to choose 1 of 2 options: All Users: This will allow everyone on your team access to this app in Creative Suite.Specific Users: Selecting this option will display a drop-down menu to its right. From this menu you can select which users you wish to have access to the app by selecting them from the list. Clicking again on a user will remove them from the selection.    ","version":"Next","tagName":"h3"},{"title":"Dynamic Playable Ads - Overview","type":0,"sectionRef":"#","url":"/docs/playable/playground/dynamic-playables/overview","content":"","keywords":"dynamic ads playable luna ai","version":"Next"},{"title":"Optimisation Metric​","type":1,"pageTitle":"Dynamic Playable Ads - Overview","url":"/docs/playable/playground/dynamic-playables/overview#optimisation-metric","content":"Depending on your creative goals, Luna allows you to choose how to optimise your dynamic playable ads. IPM - optimise for installs (only available for the ironSource ad network)CTR - optimise for clicks Learn how to change your optimisation metric here. Please ensure you have enabled attribution for your playable before using IPM as an optimisation metric. Full instructions can be found here. ","version":"Next","tagName":"h2"},{"title":"How does it work?​","type":1,"pageTitle":"Dynamic Playable Ads - Overview","url":"/docs/playable/playground/dynamic-playables/overview#how-does-it-work","content":"When creating playables with Luna, you are able to tag various elements within your game to use as playable variables. For example, you could tag the colour of your main character, or the level you want you user to play; these can then be edited to created unlimited variations of your playable in Creative Suite. When creating a Dynamic playable, instead of selecting unique values for each of your in-game elements, you are able to input multiple values. Once created you can download the dynamic playable, you will deliver that to the ad network as a single file. When the ad goes live, Luna connects to the playable via client-to-server communication and notifies the playable with the permutation to be served for this specific ad impression based on historical performance metrics.  Create a dynamic playable.Select the variable values you want to test, which will create a number of possible permutations (256 max).Select your optimisation metric and sample size.Download the file and upload this to the network of choice.Once live, the ad communicates with Luna and will be notified of the permutation to be served for each ad impression.Luna monitors the performance of each permutation being tested, and updates the delivery algorithm to ensure the best performing ad receives the most traffic. To do this, Luna uses your optimisation metric.Each permutation is tested.The final winning permutation will now serve 100% of traffic. ","version":"Next","tagName":"h2"},{"title":"Example​","type":1,"pageTitle":"Dynamic Playable Ads - Overview","url":"/docs/playable/playground/dynamic-playables/overview#example","content":"Single playable Here we see the a playable ad, with single values of each of the in-game variables.   When this ad is set live, the background colours will be black and navy blue. Dynamic playable   In the above example, we have chosen a selection of values for the background colours, which equate to 9 possible permutations. When this ad is set live, Luna will test all 9 permutations until the test is concluded and a winner is found. Linked Variables There may be a situation where you want to define a select group of combinations, and not have unwanted overlaps. In this case, you may add these variables into a new Creative Suite Group, and enable Linking. In doing this, every variation will be explicitly linked to a single variation of the other variables in the group.   Dynamic playable status   When dynamic playable ads go live, you can view the status of each permutation that's being tested. Each permutation can have one of the these three statuses: Default - is the version Luna shows if a configuration of a playable failed to load.Completed - means it has been tested and not currently being shown.Live - is still being tested or is the current wining configurations of the ad. ","version":"Next","tagName":"h3"},{"title":"When to use dynamic playable ads​","type":1,"pageTitle":"Dynamic Playable Ads - Overview","url":"/docs/playable/playground/dynamic-playables/overview#when-to-use-dynamic-playable-ads","content":"Dynamic Playable ads allow you to test a large number of creative variations in a short period of time, whilst automating the performance optimisation. Therefore, we recommend using this format if your playable ad contains a large number of creative options such as, but not limited to: BackgroundCharactersColoursTexts (i.e. tutorial text)End card styles ","version":"Next","tagName":"h2"},{"title":"When not to use dynamic playable ads​","type":1,"pageTitle":"Dynamic Playable Ads - Overview","url":"/docs/playable/playground/dynamic-playables/overview#when-not-to-use-dynamic-playable-ads","content":"","version":"Next","tagName":"h2"},{"title":"CTR Optimisation​","type":1,"pageTitle":"Dynamic Playable Ads - Overview","url":"/docs/playable/playground/dynamic-playables/overview#ctr-optimisation","content":"We recommend that you do not use dynamic playable ads to control the click behaviour of your ad i.e. testing whether the playable has 3-clicks or 4-clicks. Such changes drastically impact the experience in the ad, will draw unreliable conclusions from a dynamic playable test and may affect the network's delivery algorithm. ","version":"Next","tagName":"h3"},{"title":"Network Support​","type":1,"pageTitle":"Dynamic Playable Ads - Overview","url":"/docs/playable/playground/dynamic-playables/overview#network-support","content":"Currently, dynamic playables are supported on the following ad networks: AdColonyironSourceMraid AdsUnity AdsVungleApplovin (You will need to contact them for permission, see below) If you wish to use dynamic playables in conjunction with Applovin, you will need to contact Applovin prior to uploading to get the functionality enabled. Otherwise the playable will be rejected. ","version":"Next","tagName":"h2"},{"title":"Best Practices​","type":1,"pageTitle":"Dynamic Playable Ads - Overview","url":"/docs/playable/playground/dynamic-playables/overview#best-practices","content":"Here are some best practices we have collected when using dynamic playables: Use one dynamic playable per Network and Operating System for best results i.e. Unity Ads - iOS, Unity Ads - Android.Keep your playable ads and interactive end cards (IEC) as separate dynamic playable creatives. ","version":"Next","tagName":"h2"},{"title":"Creative Suite - Media Library","type":0,"sectionRef":"#","url":"/docs/playable/playground/media-library","content":"","keywords":"create hub luna playable playables media library asset","version":"Next"},{"title":"How to navigate to your Media Library​","type":1,"pageTitle":"Creative Suite - Media Library","url":"/docs/playable/playground/media-library#how-to-navigate-to-your-media-library","content":"To navigate your Media Library you can click on the Media link located at the left side of the Creative Library page (where all your apps or concepts are available).  After that, you will be presented with a new webpage which allows you to manage all of your files. Here you can add new media files for your playables, but you can also view or edit any of your already uploaded assets.  Your assets will be organised in a folder according to their format: VideosAudio FilesImagesFontsOther ","version":"Next","tagName":"h2"},{"title":"Navigating to Media Library from playables​","type":1,"pageTitle":"Creative Suite - Media Library","url":"/docs/playable/playground/media-library#navigating-to-media-library-from-playables","content":"You can access the Media Library also whilst viewing any of your playables inside of Creative Suite. Navigate to a field that allows you to choose an asset (such as an image, audio file, video or font). This will open the Media Library view. In order to setup a field that allows you to select an asset, you will need to make use of the LunaPlaygroundAssets attribute in your Unity project or JavaScript playable and then update your build in Creative Suite.  ","version":"Next","tagName":"h3"},{"title":"How to upload to your Media Library​","type":1,"pageTitle":"Creative Suite - Media Library","url":"/docs/playable/playground/media-library#how-to-upload-to-your-media-library","content":"In the Media Library, users can upload new files by clicking on the + Add Media button, located at the top-right of the page.  This will open a new window.  Click the upload window to open your file explorer and navigate to your file locations, or you can simply drag and drop the wanted files into the window. Finally, press the Upload button to upload the file into Creative Suite. ","version":"Next","tagName":"h2"},{"title":"Uploading files to Media Library from playables​","type":1,"pageTitle":"Creative Suite - Media Library","url":"/docs/playable/playground/media-library#uploading-files-to-media-library-from-playables","content":"When uploading a media from a playable, the Media Library is split into 2 sections, one for uploading and one for selecting assets to use. Let's first look at the upload tab and what options are available within it. To begin uploading simply drag an image, video or audio file into into the upload window. You can alternatively click within the upload window to open your file explorer and select a file that way. (Note: if when using the file explorer method your assets are not showing up, you may need to change the shown file types from 'Image Files' to 'All Files', this option is located just above the open &amp; cancel buttons on windows)  Once the file has been dragged/selected configurable options will appear to the right hand side of the preview, these will differ depending on the file type chosen. ","version":"Next","tagName":"h3"},{"title":"Upload Media Options​","type":1,"pageTitle":"Creative Suite - Media Library","url":"/docs/playable/playground/media-library#upload-media-options","content":"","version":"Next","tagName":"h2"},{"title":"Universal options​","type":1,"pageTitle":"Creative Suite - Media Library","url":"/docs/playable/playground/media-library#universal-options","content":"Name: This will be what your asset will be labelled as in your library (it does not need to include the file extension)  ","version":"Next","tagName":"h3"},{"title":"Image Upload options​","type":1,"pageTitle":"Creative Suite - Media Library","url":"/docs/playable/playground/media-library#image-upload-options","content":"Crop media: Changing these values will begin cropping the image (You can also crop by dragging the dotted outlines)Max resolution: This sets the upper limit for image resolutionImage format: Choose between keeping the original format, JPEG (Medium Quality), PNG (Lossless), PNG (Lossless, Optimised) &amp; PNG (Lossy, Optimised)  ","version":"Next","tagName":"h3"},{"title":"Video Upload options​","type":1,"pageTitle":"Creative Suite - Media Library","url":"/docs/playable/playground/media-library#video-upload-options","content":"Crop media: Changing these values will begin cropping the video dimensions (You can also crop by dragging the dotted outlines)Max resolution: This sets the upper limit for video resolutionTrim media: Set the desired start and end point of the videoAudio, kbps: Set the audio bit rate in kilobits per secondVideo, CRF: Set the constant rate factorVideo FPS: Set the frames per second valueVideo format: Choose between keeping the original format, H.264 Mobile Ready &amp; Convert to Animated PNG  ","version":"Next","tagName":"h3"},{"title":"Audio Upload options​","type":1,"pageTitle":"Creative Suite - Media Library","url":"/docs/playable/playground/media-library#audio-upload-options","content":"Trim media: Set the desired start and end point of the videoAudio bitrate, kbps: Set the audio bit rate in kilobits per second  ","version":"Next","tagName":"h3"},{"title":"Font Upload options:​","type":1,"pageTitle":"Creative Suite - Media Library","url":"/docs/playable/playground/media-library#font-upload-options","content":"Preview Phrase: Set a phrase to preview your fontFont Size (Playable Plugin only): Bigger sizes allow for crispier fonts, but it uses space when the playable is builtFont alphabet (Playable Plugin only): Control which character can be included (remove those character that are not going to be used in the playable) ","version":"Next","tagName":"h3"},{"title":"Using assets in your Media Library​","type":1,"pageTitle":"Creative Suite - Media Library","url":"/docs/playable/playground/media-library#using-assets-in-your-media-library","content":"Within the 'Browse files' section you can navigate to and choose assets to use in your playables. Assets you upload are automatically sorted into one of 5 folders based on their type: Audios, Images, Videos, Fonts &amp; Other.  Simply click on the asset you wish to use for the field you opened the library from, and then hit the 'Choose' button in the bottom right of the window. ","version":"Next","tagName":"h2"},{"title":"Creative Suite - Overview","type":0,"sectionRef":"#","url":"/docs/playable/playground/overview","content":"","keywords":"create hub luna","version":"Next"},{"title":"How it works​","type":1,"pageTitle":"Creative Suite - Overview","url":"/docs/playable/playground/overview#how-it-works","content":"Within the Playable Plugin plugin, use the Creative Suite build target. This prepares a build with the necessary structure and data files, ready to be added to Creative Suite. To add your build to Creative Suite, do one of the following: Build and upload all from within the playable plugin using one button, details on which can be found here.Login to your Creative Suite account directly from the Playable Plugin plugin, generate a Creative Suite build and then add it manually to your account. ","version":"Next","tagName":"h2"},{"title":"Creative Suite - Playable Settings","type":0,"sectionRef":"#","url":"/docs/playable/playground/playable-settings","content":"","keywords":"create hub luna settings playables","version":"Next"},{"title":"Concept Icon​","type":1,"pageTitle":"Creative Suite - Playable Settings","url":"/docs/playable/playground/playable-settings#concept-icon","content":"The app icon is used for visual purposes only, and does not impact your playable ads directly. Simply click the icon to replace it with an image of your choice. We suggest using your app icon here to ensure you can quickly find your app in the menu! ","version":"Next","tagName":"h2"},{"title":"Concept Name​","type":1,"pageTitle":"Creative Suite - Playable Settings","url":"/docs/playable/playground/playable-settings#concept-name","content":"The concept name is used to help you identify it among your others concepts, and also does not impact your Playable ads directly. We suggest you aim to describe the game, but also add what differentiates that concept from others you may have uploaded. For example: &quot;City Racer - Jungle Race&quot;. ","version":"Next","tagName":"h2"},{"title":"App Store URLs​","type":1,"pageTitle":"Creative Suite - Playable Settings","url":"/docs/playable/playground/playable-settings#app-store-urls","content":"You should enter your Apple and Google Play App Store URLs for the app you are promoting with your playable ad. These URLs will be used for two purposes: The URLs will be included in the creative, as required by certain networks such as Unity Ads.For attribution - please see this guide for more information. Please press save after changing the URLs. When testing in Creative Suite, clicking on the store button will only trigger the Click on CTA event message, instead of redirecting to the store page. ","version":"Next","tagName":"h2"},{"title":"Provider​","type":1,"pageTitle":"Creative Suite - Playable Settings","url":"/docs/playable/playground/playable-settings#provider","content":"Here you should select the attribution platform you wish to use in conjunction with your playable ad. The available platforms are: AdjustAppsflyerKochavaSingular (coming soon) ","version":"Next","tagName":"h2"},{"title":"Ignored Concepts​","type":1,"pageTitle":"Creative Suite - Playable Settings","url":"/docs/playable/playground/playable-settings#ignored-concepts","content":"The Ignored Concepts menu allows you to let Luna know which concept on each ad network are not relevant for matching. More information on this, as well as on the attribution setup process as a whole, is available here. ","version":"Next","tagName":"h2"},{"title":"Creative Settings​","type":1,"pageTitle":"Creative Suite - Playable Settings","url":"/docs/playable/playground/playable-settings#creative-settings","content":"Creative settings allow you to apply concept-level URLs to your playables, and carry out concept matching for attribution. ","version":"Next","tagName":"h2"},{"title":"Creative URLs​","type":1,"pageTitle":"Creative Suite - Playable Settings","url":"/docs/playable/playground/playable-settings#creative-urls","content":"Creative URLs are used to override the app-level URLs provided in the settings page (see above). For example, if you have a separate URL for publishing your app in China, you can simply override the URL at the creative level instead of creating a new app in Creative Suite. As stated above, these URLs will be used for two purposes: The URLs will be included in the creatives, as required by certain networks such as Unity Ads.For attribution - please see this guide for more information. Please press save after changing the URLs. ","version":"Next","tagName":"h3"},{"title":"Concept Matching​","type":1,"pageTitle":"Creative Suite - Playable Settings","url":"/docs/playable/playground/playable-settings#concept-matching","content":"Concept matching is used as part of our attribution feature; you are able to send install events from a support MMP to Creative Suite and the concept matching allows us to determine which concept drove the events. For more information, check out our setup guide. ","version":"Next","tagName":"h3"},{"title":"Creative Suite - Playable Testing","type":0,"sectionRef":"#","url":"/docs/playable/playground/playable-testing","content":"","keywords":"create hub luna preview link custom events","version":"Next"},{"title":"Testing Preview Links​","type":1,"pageTitle":"Creative Suite - Playable Testing","url":"/docs/playable/playground/playable-testing#testing-preview-links","content":"In order to generate a preview link of your project please follow these steps: Navigate to Creative Suite and ensure you're logged inUpload a build (see here for instructions) or select an existing buildClick the link button (circled below) on the same row containing the creative you wish to preview  The URL to preview this creative of your playable will now be copied, simply paste it in your browser, or send it to your team, to begin play testing the playable. This preview link is debuggable as well; any console logs, warnings or errors will appear in the browser inspector ","version":"Next","tagName":"h2"},{"title":"Testing Custom Events​","type":1,"pageTitle":"Creative Suite - Playable Testing","url":"/docs/playable/playground/playable-testing#testing-custom-events","content":"If you have set up custom events (see here on how to do so) then inside Creative Suite you can test to see the events triggering. Firstly in order to display the event messages in Creative Suite open the Show Events dropdown and select &quot;Show Events: On&quot;. (Shown below)  From here you can begin playing through your playable, below the game window messages will display depending on what custom event your gameplay triggers. This list of messages is populated with the most recently triggered event at the top, and duplicate events are grouped together with a counter to the right of the message. For example, the &quot;TutorialComplete&quot; event has been called 3 times.  ","version":"Next","tagName":"h2"},{"title":"Generating Test Data​","type":1,"pageTitle":"Creative Suite - Playable Testing","url":"/docs/playable/playground/playable-testing#generating-test-data","content":"Click on the export button for the creative you wish to generate data for and select 'Export'. Export for a network that allows external calls (e.g. Unity Ads). Within the zip that will be downloaded, open the 'urls.txt' file. Copy and paste the url for the creative of the app you wish to generate data for into your browser (You can also send this link to other team members to play, or even open it in your phone's browser). Play the game after the url loads, data will be recorded from these sessions (If you complete the playable and wish to play again simply refresh the page). You will be able to tell once the data has entered Creative Suite by the change in the insights symbol at the far end of the app turning from grey to green: ","version":"Next","tagName":"h2"},{"title":"Upload a Build","type":0,"sectionRef":"#","url":"/docs/playable/playground/upload-build","content":"","keywords":"create hub export upload playable luna","version":"Next"},{"title":"Build and upload from Unity​","type":1,"pageTitle":"Upload a Build","url":"/docs/playable/playground/upload-build#build-and-upload-from-unity","content":"You can build and upload your project, or update an already existing one directly from Unity. In the Playable Plugin Unity UI, navigate to the Creative Suite menu.Enter your Creative Suite login credentials and Login.  Once logged in, navigate into the Build and Upload tab.  Here you got different fields and according to how you use them you can update an already existing concept or make a new one: Available Applications - A dropdown menu with all the application available in Creative Suite.Available Concepts - A dropdown menu with all the concepts available in the application selected above.Concept name - if you want to add a new concept to your application, select the &lt; New Concept &gt; option in the Available Concepts dropdown menu, this will activate the input field and you will be able to give a name to your new concept. ","version":"Next","tagName":"h2"},{"title":"Update an existing concept from Unity​","type":1,"pageTitle":"Upload a Build","url":"/docs/playable/playground/upload-build#update-an-existing-concept-from-unity","content":"To update an existing concept in Creative Suite, select an application and then an option in the Available Concepts menu.  Click &quot;Build &amp; upload&quot; After the upload, the user user will see a window in Creative Suite with all changes from the new creative. Press the Update button to confirm the changes.  ","version":"Next","tagName":"h3"},{"title":"Create a new concept from Unity​","type":1,"pageTitle":"Upload a Build","url":"/docs/playable/playground/upload-build#create-a-new-concept-from-unity","content":"Choose one of your applications and then select &lt; New Concept &gt; from the Available Concepts menu. This will activate the Concepts Name input field and let you name your new concepts.  Click &quot;Build &amp; upload&quot; When the build and upload is complete, you may log in to your Creative Suite account - the project will now exist in the menu.  info If you don't see an app icon, then you need to ensure you have an icon set in your Player Settings in Unity. ","version":"Next","tagName":"h3"},{"title":"Build project and upload manually​","type":1,"pageTitle":"Upload a Build","url":"/docs/playable/playground/upload-build#build-project-and-upload-manually","content":"In the Playable Plugin Unity UI, navigate to the Creative Suite menu.  Click &quot;Build&quot;. Playable Plugin will now begin exporting and packaging you project for Creative Suite.When complete, a window will open which contains the build archive. To find this manually, please navigate to YourProject/LunaTemp/stage4/create-hub and find the archive.  Login to your Creative Suite account (playground.lunalabs.io), and create a new app (if appropriate) with the New App button in the top right of the page.  (OPTIONAL) If you are adding a new App, you will need to give it a name (click on I don't have an app URL). Store links are optional, and are used as default values for all concepts made within the app. Hit Create App when you are done.  Once you created the app, the concepts page will load and here you will now be able to click on + concepts.  Click to upload, or drag and drop the Creative Suite archive in the interface. The build will now be uploaded.  When complete, your build will now be visible in the UI.  info If you don't see an app icon, then you need to ensure you have an icon set in your Player Settings in Unity. ","version":"Next","tagName":"h2"},{"title":"Rebuild an app​","type":1,"pageTitle":"Upload a Build","url":"/docs/playable/playground/upload-build#rebuild-an-app","content":"Occasionally, you may want to force a rebuild of your creatives of the ad network, for example, if one of the networks fails to build correctly. To do this, you can select the app in the playground.lunalabs.io/applications menu, and select the drop down menu for one of the playable creatives.  Select Rebuild and then confirm the action; the app will then proceed to rebuild. ","version":"Next","tagName":"h2"},{"title":"Duplicate a build​","type":1,"pageTitle":"Upload a Build","url":"/docs/playable/playground/upload-build#duplicate-a-build","content":"If you would like to duplicate an a build in Creative Suite, including all its variations (but not its logged events or insights status), then you can also do this from the same drop down menu mentioned previously. Just as for rebuilding, you can select the app in the playground.lunalabs.io/applications menu, and select the drop down menu for one of the playable creatives.  Select Duplicate app and then confirm the action; the app will then proceed to be duplicated. ","version":"Next","tagName":"h2"},{"title":"Move a build​","type":1,"pageTitle":"Upload a Build","url":"/docs/playable/playground/upload-build#move-a-build","content":"If you would like to move a build into another app, then you can also do this from the same drop down menu mentioned previously. Just as for rebuilding and moving, you can select the app in the playground.lunalabs.io/applications menu, and select the drop down menu for one of the creatives.  Select Move and a pop up menu will appear. Select in which app you would like to move your the considered build. ","version":"Next","tagName":"h2"},{"title":"Quickstart","type":0,"sectionRef":"#","url":"/docs/playable/quickstart","content":"","keywords":"quickstart guide getting started playable luna unity","version":"Next"},{"title":"1. Set Up The Dependencies​","type":1,"pageTitle":"Quickstart","url":"/docs/playable/quickstart#1-set-up-the-dependencies","content":"","version":"Next","tagName":"h2"},{"title":"Install Unity​","type":1,"pageTitle":"Quickstart","url":"/docs/playable/quickstart#install-unity","content":"Playable Plugin is compatible with the following Unity versions: 2020.3.16 or higher2021.3 (LTS) You can download Unity from the Unity download archive. ","version":"Next","tagName":"h3"},{"title":"Installing Dependencies​","type":1,"pageTitle":"Quickstart","url":"/docs/playable/quickstart#installing-dependencies","content":"WindowsMac Independent Development Environment (IDE)​ You can develop using whichever IDE is most convenient for you. If you don't have an IDE then as a recommendation, we would suggest to download Visual Studio since you can also install .NET by using its installer. Install .NET 4.7​ You will need to download .NET package to have the correct framework and libraries to work with Luna. .NET is required for C# (gameplay code) to JavaScript (gameplay code) conversion. If you are on Windows, you can download.NET 4.7 developer pack, or you can use Visual Studio Installer: Click the 'Modify' button next to the version of VS you are usingFrom the window opened select .Net desktop developmentIn the right hand side of the window (Installation details) new items will appearSelect .NET 4.7 and above (Example of this below) Next navigate to the 'Individual Components' tabSearch in for '.NET' and select the 4.7 SDK &amp; targeting pack items (Example of this below) After selecting all these hit 'Modify' in the bottom right and let the items install MS-Build​ MS-Build is a build tool provided by VisualStudio/Mono.Frameworks and is used to compile code packages for Playable Plugin. thus is crucial to certain Luna build stages. For Windows MsBuild is usually located inside: C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\MSBuild\\Current\\Bin\\MSBuild.exe If using windows, it is possible to install MSbuild through the visual studio build tools package, which includes the .Net desktop development workload mentioned above. Build tools can be found here. note In some cases Luna could be failing to compile relating to an issue with a missing .NetFramework assembly. Try installing each of the .NetFramework 4.x targeting packs and SDKs through the visual studio installer mentioned abov ","version":"Next","tagName":"h2"},{"title":"2. Install Playable Plugin​","type":1,"pageTitle":"Quickstart","url":"/docs/playable/quickstart#2-install-playable-plugin","content":"Login to the Luna Creative Suite website and download the latest version of Playable Plugin. Make sure you unzip the downloaded Playable plugin to a location outside of any project. Open the Package Manager in your Unity project:  Click on the + button and select Add Package from Disk.  Select the package.json file in the script folder of the Playable Plugin directory.  After the completion, you can either select Tools and click on Playable Plugin, or use the shortcut cmd+E if you're on a Mac, or ctrl+E if you're on Windows.  This will open the Playable Plugin window.   ","version":"Next","tagName":"h2"},{"title":"3. Verify The Installation​","type":1,"pageTitle":"Quickstart","url":"/docs/playable/quickstart#3-verify-the-installation","content":"tip We recommend creating a new Unity project to test whether Playable plugin works properly. Select the scenes to include in the export, and your startup scene.For more info on this step click here.  Select the Build &amp; Upload tab and click on Build Develop.  Once it's done, click on Open In Browser. The Dev Environment will open with your scene.  ","version":"Next","tagName":"h2"},{"title":"4. Export Your Project To Creative Suite​","type":1,"pageTitle":"Quickstart","url":"/docs/playable/quickstart#4-export-your-project-to-creative-suite","content":"Select Build &amp; Upload and click on the Upload to Creative Library tab. Select an application from the dropdown menu and create a new concept or select an existing one. If you select new concept, enter a name for the concept. For more information about applications, click here. Click on build &amp; upload. Once it's done, open Creative Suite and click on your application. Your concept is now available within your app. ","version":"Next","tagName":"h2"},{"title":"5. Download Ad Network Build​","type":1,"pageTitle":"Quickstart","url":"/docs/playable/quickstart#5-download-ad-network-build","content":"Click on your concept and select the creative you want to download. Click on the Download or Publish button. Select the ad networks you want to download the build for. Click on Download Creatives. Congratulations! You have successfully downloaded your first platform build! ","version":"Next","tagName":"h2"},{"title":"Luna Dependencies","type":0,"sectionRef":"#","url":"/docs/playable/setup/dependencies","content":"","keywords":"dependencies requirements playable luna","version":"Next"},{"title":"Unity Engine (Supported Unity Versions)​","type":1,"pageTitle":"Luna Dependencies","url":"/docs/playable/setup/dependencies#unity-engine-supported-unity-versions","content":"Playable Plugin enables you to build playable ads in Unity, and so the Unity editor is a natural requirement. Currently, the Luna exporter and engine support the following Unity versions: 2020.3.16 or higher2021.3 (LTS) You can download a specific Version from the Unity download archives section for both Windows and Mac. ","version":"Next","tagName":"h2"},{"title":"C# Language Support​","type":1,"pageTitle":"Luna Dependencies","url":"/docs/playable/setup/dependencies#c-language-support","content":"Most of these Unity versions all have continuous-integration tests, but it is important to note that it does not mean that 100% of features are supported. Please check our Bridge Implemented Features page for more information. ","version":"Next","tagName":"h2"},{"title":"Installing Dependencies​","type":1,"pageTitle":"Luna Dependencies","url":"/docs/playable/setup/dependencies#installing-dependencies","content":"WindowsMac Independent Development Environment (IDE)​ You can develop using whichever IDE is most convenient for you. If you don't have an IDE then as a recommendation, we would suggest to download Visual Studio since you can also install .NET by using its installer. Install .NET 4.7​ You will need to download .NET package to have the correct framework and libraries to work with Luna. .NET is required for C# (gameplay code) to JavaScript (gameplay code) conversion. If you are on Windows, you can download.NET 4.7 developer pack, or you can use Visual Studio Installer: Click the 'Modify' button next to the version of VS you are usingFrom the window opened select .Net desktop developmentIn the right hand side of the window (Installation details) new items will appearSelect .NET 4.7 and above (Example of this below) Next navigate to the 'Individual Components' tabSearch in for '.NET' and select the 4.7 SDK &amp; targeting pack items (Example of this below) After selecting all these hit 'Modify' in the bottom right and let the items install MS-Build​ MS-Build is a build tool provided by VisualStudio/Mono.Frameworks and is used to compile code packages for Playable Plugin. thus is crucial to certain Luna build stages. For Windows MsBuild is usually located inside: C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\MSBuild\\Current\\Bin\\MSBuild.exe If using windows, it is possible to install MSbuild through the visual studio build tools package, which includes the .Net desktop development workload mentioned above. Build tools can be found here. note In some cases Luna could be failing to compile relating to an issue with a missing .NetFramework assembly. Try installing each of the .NetFramework 4.x targeting packs and SDKs through the visual studio installer mentioned abov ","version":"Next","tagName":"h2"},{"title":"Create a Playable","type":0,"sectionRef":"#","url":"/docs/playable/playground/create-playable","content":"","keywords":"create hub creatives playable luna","version":"Next"},{"title":"Edit a playable​","type":1,"pageTitle":"Create a Playable","url":"/docs/playable/playground/create-playable#edit-a-playable","content":"Once you have selected to create a playable, you will be in the editor screen with the new creative selected on the right hand side. The left-hand side menu contains all of the game variables which were tagged in the Unity project when developing the build. By changing any one of these values, you will trigger a reload of the playable preview in the centre of the screen, and the game will now be loaded with the assigned value of your choice.   ","version":"Next","tagName":"h2"},{"title":"Naming and Tags​","type":1,"pageTitle":"Create a Playable","url":"/docs/playable/playground/create-playable#naming-and-tags","content":"It's a good idea to keep you Playables organised, as it can quickly become difficult to find a specific variation within your Creative Suite account. Here's a good way to organise you Playables: Naming &amp; TagsSearch Filters When creating a new Playable, you should give it a name that will be easy to understand and follow your team's specific conventions. You can also add tags which can be used to identify a specific characteristic of the ad, and help you search and identify the playable later. To add tags simply enter in a name and hit enter to separate it from the next. Be sure to click save at the top right of the page after you finish entering in your tags!  ","version":"Next","tagName":"h2"},{"title":"Saving a playable​","type":1,"pageTitle":"Create a Playable","url":"/docs/playable/playground/create-playable#saving-a-playable","content":"Once you have completed your playable and named it, you can continue creating more playables within the editor, or save your current progress. When saving, you will be brought back to the main creative screen. ","version":"Next","tagName":"h2"},{"title":"Download Playables","type":0,"sectionRef":"#","url":"/docs/playable/playground/download-playable","content":"","keywords":"download ad networks playable luna","version":"Next"},{"title":"Playable download balance​","type":1,"pageTitle":"Download Playables","url":"/docs/playable/playground/download-playable#playable-download-balance","content":"Each one of our Trial, Starter and Pro plans, provides you with full access to Luna technology with a set number of playable downloads per month. This balance is available to you in your account settings page, or also in the download page for playables. You can create unlimited variations of your ads, and only those which are downloaded count towards this balance. ","version":"Next","tagName":"h2"},{"title":"How it works​","type":1,"pageTitle":"Download Playables","url":"/docs/playable/playground/download-playable#how-it-works","content":"Each playable can be downloaded for a specific ad network. One creative for one ad network is equal to one playable download. For example, imagine you have three creatives to test, and you want to run these on two ad networks; this will be equal to 6 downloads from your balance. 3 playable creatives x 2 ad networks = 6 playable downloads Please note, Enterprise+ accounts have unlimited downloads. ","version":"Next","tagName":"h3"},{"title":"Download playables​","type":1,"pageTitle":"Download Playables","url":"/docs/playable/playground/download-playable#download-playables","content":"Once your creative is ready, click Save in the editor screen.   You have several options to download your playables from the creative list interface. Download AllDownload SelectedDownload Single  You will then be presented with a download page that shows you the list of available networks and your current usage limits, based on your subscription.   If the number of playable downloads you require will exceed the balance of your account, you will see a warning in the download page and will not be able to download some or all of the selected builds. ","version":"Next","tagName":"h2"},{"title":"Download warnings​","type":1,"pageTitle":"Download Playables","url":"/docs/playable/playground/download-playable#download-warnings","content":"If your playable build does not meet the specification for a given ad network, then you will be presented with warnings in the download page. The two types of errors are: File size exceeded - please check out Ad Network Overview for information about the file size limit for each ad network, and our hints and tips in the asset optimisation section of these docs. Number of files exceeds 100 - this error is related to Facebook ads only. A zip archive may only contain 100 files or less, as per Facebook's specification. ","version":"Next","tagName":"h2"},{"title":"Development Build","type":0,"sectionRef":"#","url":"/docs/playable/setup/develop-build","content":"","keywords":"verify install main actions playable luna","version":"Next"},{"title":"What is a Development Build?​","type":1,"pageTitle":"Development Build","url":"/docs/playable/setup/develop-build#what-is-a-development-build","content":"A Development Build (or Develop Build) is a version of your playable specifically created for developers for testing and debugging on a local machine. It is not intended for production use, as it does not include asset compression and serves each file individually. It is designed purely for testing purposes on a local machine. ","version":"Next","tagName":"h2"},{"title":"How to create a Develop Build​","type":1,"pageTitle":"Development Build","url":"/docs/playable/setup/develop-build#how-to-create-a-develop-build","content":"To follow this guide we recommend that you have completed the previous installation steps. This guide is highly recommended to perform a simple export and also familiarize yourself with main actions available in the Playable Plugin. For the sake of simplicity, let's assume you have created an empty project with a simple scene (a cube in front of the camera will suffice) and have installed Luna in there. ","version":"Next","tagName":"h2"},{"title":"Initial Scene​","type":1,"pageTitle":"Development Build","url":"/docs/playable/setup/develop-build#initial-scene","content":"Your scene then might look as follows:   Provided that you have completed successfully the initial setup steps - which includes adding the scene to Scenes in Build and setting it up as the startup scene - you can proceed to click on the Build &amp; Upload -&gt; Build Develop button.  ","version":"Next","tagName":"h3"},{"title":"Export​","type":1,"pageTitle":"Development Build","url":"/docs/playable/setup/develop-build#export","content":"After a few minutes, if the export completes properly, a small window will pop up asking you if you want to open your build in the browser or open the directory where it is located:  The former option allows you to test your build locally in your default browser. Here, you can try for the first time the Dev Environment and its tools. You can test your customizable fields and get an idea of how your playable can perform out in the wild thanks to the Performance Indicator and our Startup Argument. info It is critical to test your creative on the device you are interested in to obtain more precise results. Using the Developer Environment, you can easily test your creative on other devices. Click here for more information. The latter option opens your default file navigator (like Explorer on Windows or Finder on Mac) and show you the LunaTemp folder. You can notice different subfolders in this section. You need to open only the stage4 folder which contains your build. Your development build is in the develop subfolder. You can start any web server from that folder (i.e. http-server from Node's npm), but for your convenience Luna provides a built-in functionality for doing so. IMPORTANT Due to the way Luna loads resources in development builds, simply opening the web page in your browser would render nothing but a black screen, that is why it is required to run a real web server out of develop folder to make Luna development builds work. See below for quick and easy way to do so. To see your scene in the browser, get back to Luna UI, navigate to Build &amp; Upload tab on the left, and click Start server (click Stop server first if it is already running):   This will start an HTTP server in background and will launch a default browser with your build running in it:  Now you successfully created your first develop build! You can now start developing your playable and test it in the browser. Your playable will launch in the Development Enviroment where you can test your customizable fields and get an idea of how your playable can perform out in the wild thanks to the Performance Indicator and our Startup Argument. ","version":"Next","tagName":"h3"},{"title":"Debugging​","type":1,"pageTitle":"Development Build","url":"/docs/playable/setup/develop-build#debugging","content":"If you wish to troubleshoot any errors with your creative, you can consult our debugging guide that provides you with assistance. ","version":"Next","tagName":"h3"},{"title":"Dynamic Playable Ad Settings","type":0,"sectionRef":"#","url":"/docs/playable/playground/dynamic-playables/settings","content":"","keywords":"dynamic ads settings playable luna ai","version":"Next"},{"title":"Optimisation Metric​","type":1,"pageTitle":"Dynamic Playable Ad Settings","url":"/docs/playable/playground/dynamic-playables/settings#optimisation-metric","content":"When optimising your dynamic playables, Luna uses a chosen metric in order to assess and prioritise the various creative configuration. ","version":"Next","tagName":"h2"},{"title":"CTR​","type":1,"pageTitle":"Dynamic Playable Ad Settings","url":"/docs/playable/playground/dynamic-playables/settings#ctr","content":"CTR (click-though-rate) optimises for the number of app store clicks per playable impression. CTR optimisation can suit many use cases. For example: Marketability/creative testing to understand which concepts resonate more with your target audience.End cards - typically you wish to maximise the CTR for interactive end cards. If you do not have attribution tracking enabled (see here) then you should use CTR optimisation. ","version":"Next","tagName":"h3"},{"title":"IPM​","type":1,"pageTitle":"Dynamic Playable Ad Settings","url":"/docs/playable/playground/dynamic-playables/settings#ipm","content":"IPM optimisation is available only for the ironSource ad network. We recommend that only CTR optimisation is used for other networks. IPM (install per 1000 impressions) optimises for the number of installs per playable impression. As a prerequisite to using IPM optimisation, you must enable attribution through Creative Suite. See here for more information. To maximize your performance, you can test different concept variances using IPM optimisation. ","version":"Next","tagName":"h2"},{"title":"Sample Size​","type":1,"pageTitle":"Dynamic Playable Ad Settings","url":"/docs/playable/playground/dynamic-playables/settings#sample-size","content":"Default settings CTR: 333 impressionsIPM: 3000 impressions When running a dynamic playable ad, each permutation is given an allocated number of impressions before a decision is made. By editing the sample size, you can control this allocation. Considerations: For low CTR or IPM playables, you may wish to increase the sample size to improve the accuracy of the test ","version":"Next","tagName":"h2"},{"title":"FAQ​","type":1,"pageTitle":"Dynamic Playable Ad Settings","url":"/docs/playable/playground/dynamic-playables/settings#faq","content":"","version":"Next","tagName":"h2"},{"title":"Can I change my optimisation metric once the ad has gone live?​","type":1,"pageTitle":"Dynamic Playable Ad Settings","url":"/docs/playable/playground/dynamic-playables/settings#can-i-change-my-optimisation-metric-once-the-ad-has-gone-live","content":"Yes. However, please note the test will start again and the configuration-level metrics will be reset. Overall performance metrics (i.e. impressions, average CTR) will not be lost. ","version":"Next","tagName":"h3"},{"title":"Initial setup","type":0,"sectionRef":"#","url":"/docs/playable/setup/initial-setup","content":"Initial setup Once the Playable Plugin plugin gets installed into a project, it is recommended to start with opening Luna UI via Tools &gt; Playable Plugin in main Unity menu: If this is the first time opening the Playable Plugin plugin, you will be presented with an interface requiring your Creative Suite login credentials. Log in to your Creative Suite account. info If you don't have credentials, you should reach out to your account admin or sign up here. Once logged in, the only mandatory change will be to select the scenes to include in the export, and your startup scene (this will be set to default if you have only one scene). To do this, you can navigate to the Settings section, and select the Basic tab. Scenes in Build will display a list of all scenes currently configured in Unity's Build Settings window and additionally your currently open scene in Unity Editor if it has not been added to Build Settings. Toggling it will add the scene to Build Settings. This is necessary for Luna to be able to discover the list of scenes and also to be able to gather the assets and scripts used by those scenes. Build Settings window can be opened via File &gt; Build Settings. Warning Please note Luna's startup scene is configured separately below the list of all scenes. This is done intentionally so that playable scenes can live side by side with main game without affecting it. Pro Tip It's always best to start incrementally, i.e. create a simple playable scene with little to no logic and choose that for the export to make sure other pieces of the pipeline are set up properly. It is possible to get back to this UI at any time and make any changes as it becomes required. Once you have chosen scenes to be exported by Luna, it is ready to export your project.","keywords":"initial setup playable luna","version":"Next"},{"title":"Installing Playable Plugin","type":0,"sectionRef":"#","url":"/docs/playable/setup/install-luna","content":"","keywords":"install installing installation playable luna","version":"Next"},{"title":"Requirements​","type":1,"pageTitle":"Installing Playable Plugin","url":"/docs/playable/setup/install-luna#requirements","content":"Playable Plugin has the following system requirements: Unity Personal or Pro. Supported Versions: 2020.3.16 or higher, 2021.3 LTS.MacOS or Windows.NET 4.7 or later.NET developer pack 4.7 For more information, please review the list of dependencies for Luna. ","version":"Next","tagName":"h2"},{"title":"Installation​","type":1,"pageTitle":"Installing Playable Plugin","url":"/docs/playable/setup/install-luna#installation","content":"We recommend the use of the Unity Package Manager over manual installation in order to avoid issues. ","version":"Next","tagName":"h2"},{"title":"Installing via Package Manager (Unity 2020 or newer)​","type":1,"pageTitle":"Installing Playable Plugin","url":"/docs/playable/setup/install-luna#installing-via-package-manager-unity-2020-or-newer","content":"Warning Package Manager UI of Unity stores links to external packages using absolute paths. This is un-portable and will break once the project is opened on another developer's machine. Installing the Playable Plugin in Unity 2020.3 or newer can be done using the Package Manager. To get it installed into a project, please follow the following steps: Unzip the Playable Plugin release file anywhere you like on your machineOpen the Package Manager by navigating to Window &gt; Package Manager in main Unity menu:In Package Manager, hit the + button and choose Add package from disk. Now select package.json from scripts folder within luna folder you unzipped Luna to in step 1. Once finished! Feel free to open Unity editor with your project and jump to initial setup. ","version":"Next","tagName":"h3"},{"title":"Manual Installation​","type":1,"pageTitle":"Installing Playable Plugin","url":"/docs/playable/setup/install-luna#manual-installation","content":"Manual installation In order to install Luna it is required to amend Packages/manifest.json file pointing Unity to a folder with Luna package manifest, so that Unity can discover and install Luna's editor extension. This can be done by following the below steps: Make sure Unity editor is shut down for the projectUnzip Luna release file to any folder on your machine PRO TIP Best is to keep Luna folder somewhere next to your projects, so that you can always reference Luna folder relatively to a project folder. Open Packages/manifest.json file with any text editorAdd a key &quot;uk.lunalabs.luna&quot; with the value of &quot;file:RELATIVE_PATH_TO_LUNA_FOLDER/scripts/&quot; under &quot;dependencies&quot; (root) key. Please mind the RELATIVE_PATH_TO_LUNA_FOLDER should be relative to Packages folder of your project. Your JSON file should look like the below: Example​ Let's imagine the following preconditions: Your project sits at /Users/john/Work/MyUnityProjectYou put Luna next to your project, at /Users/john/Work/Luna This way, your manifest.json reference should contain an entry with file:../../Luna/scripts You are done! Feel free to open Unity editor with your project and jump to initial setup. ","version":"Next","tagName":"h3"},{"title":"Prepare a project","type":0,"sectionRef":"#","url":"/docs/playable/setup/prepare-project","content":"","keywords":"requirements preparation prepare project playable luna","version":"Next"},{"title":"Project Requirements​","type":1,"pageTitle":"Prepare a project","url":"/docs/playable/setup/prepare-project#project-requirements","content":"When preparing a project, there are a few basic requirements which will speed up the entire process: ","version":"Next","tagName":"h2"},{"title":"Project Structure and Settings​","type":1,"pageTitle":"Prepare a project","url":"/docs/playable/setup/prepare-project#project-structure-and-settings","content":"Ensure the project was built using Unity Editor 2020.3.16 or above.Ensure that your Scripting Runtime Version is 4.0 or aboveTry to extract references to external SDKs (Ads, Analytics, social networks) into separate files to be able to quickly exclude them later. ","version":"Next","tagName":"h3"},{"title":"Prepare Your Project​","type":1,"pageTitle":"Prepare a project","url":"/docs/playable/setup/prepare-project#prepare-your-project","content":"Before installing the Playable Plugin into a project, it is important to prepare a scene that contains the relevant user experience for your ad. Creating a new scene in Unity is advisable for this task. We recommend this because: The highest performing ads are often built as ads - they have certain mechanics that entice the user and showcase something special about the gameYou may wish to include a short tutorial or intro screenYou should include an end card or a call to action (CTA) to download the gameYou dont need (or want) to convert the entire game code! Playable Plugin won't support certain features such as ads or analytics SDKs Remember Playable ads have size and technology limitations, so keep this in mind when creating your project. ","version":"Next","tagName":"h2"},{"title":"Implementation recommendations​","type":1,"pageTitle":"Prepare a project","url":"/docs/playable/setup/prepare-project#implementation-recommendations","content":"Try avoiding reflection: Luna supports most of the instances, but not allAvoid file system calls or extract those to a separate file to be able to quickly exclude them laterAvoid network interaction as most playable ads platforms forbid that ","version":"Next","tagName":"h3"},{"title":"Common Preparation Steps​","type":1,"pageTitle":"Prepare a project","url":"/docs/playable/setup/prepare-project#common-preparation-steps","content":"Before creating your Playable Plugin project, there are some common preparations that you need to do. Here are some of the things you should keep in mind: Remove Native Plugins: please ensure you have a C# source code version of it instead of DLL files. Remove Avatar based Animations: Avatar-based animations (both generic and humanoid) are not supported: please re-bake the animations to target skinned mesh directly. Check out our guide on Animation baking to learn more. Make sure to check the Playable Plugin limitations page to see if there are any other possible limitations that may affect your project. By keeping these preparations in mind, you can ensure that your Playable Plugin project is compatible and works as expected. ","version":"Next","tagName":"h3"},{"title":"Next Steps​","type":1,"pageTitle":"Prepare a project","url":"/docs/playable/setup/prepare-project#next-steps","content":"Once you have completed the common preparations, you can move on to installing the Playable Plugin Dependencies. ","version":"Next","tagName":"h2"},{"title":"Export type","type":0,"sectionRef":"#","url":"/docs/playable/setup/export-type","content":"","keywords":"export type tips playable luna","version":"Next"},{"title":"Motivation​","type":1,"pageTitle":"Export type","url":"/docs/playable/setup/export-type#motivation","content":"Unity projects come in all shapes and forms: some are built from scratch recently using latest Unity versions, some come with artifacts from the multiple years in which developers worked on them. One of the diverse approaches to building projects in Unity revolves around asset management. While it's considered good practice to have strong links between scenes or scriptable objects and secondary assets, like prefabs, textures and sounds, many people still resort to good old Resources.Load API to dynamically load some content into the game. ","version":"Next","tagName":"h2"},{"title":"Playable Plugin's default export strategy​","type":1,"pageTitle":"Export type","url":"/docs/playable/setup/export-type#playable-plugins-default-export-strategy","content":"By default Luna detects all assets in use by the scenes you have selected in the plugin window, this includes: all prefabs, textures, animations and other resources found in the project. Whilst this strategy often produces undesirably big builds, especially with games which have a lot of assets, it is a preferable starting point because it helps avoid issues caused by misconfiguration and eases debugging of first exports. ","version":"Next","tagName":"h2"},{"title":"Export types in Luna​","type":1,"pageTitle":"Export type","url":"/docs/playable/setup/export-type#export-types-in-luna","content":"On the other hand, we by default do not include the &quot;Resources&quot; and &quot;Streaming Assets&quot; Special Unity folders. If you are making use of either of these respective special folders in your playable, you can tick these options for inclusion:  info Luna always makes best effort to keep things valid, thus if an asset gets into an exported set in any way (by being on a scene or residing in a prefab), it is going to be exported along with any explicit dependencies it uses. That is, if a scene is using a prefab, developers don't have to explicitly include this prefab into an export - Luna will discover this dependency and export it automatically. ","version":"Next","tagName":"h2"},{"title":"Playable UI Guide","type":0,"sectionRef":"#","url":"/docs/playable/setup/UI/luna-ui","content":"","keywords":"settings features playable luna","version":"Next"},{"title":"Settings​","type":1,"pageTitle":"Playable UI Guide","url":"/docs/playable/setup/UI/luna-ui#settings","content":"The Settings section contains information for the configuration of your exported scene and playable ad.  ","version":"Next","tagName":"h2"},{"title":"Basic​","type":1,"pageTitle":"Playable UI Guide","url":"/docs/playable/setup/UI/luna-ui#basic","content":"Scenes in Build - a list of scenes which will be included in the Luna export.Startup Scene - the scene which will be initialised first when the export is run in the browser.Export type - which assets will be exported from Luna. Several options are provided to allow you reduce the size quickly.Project settings ","version":"Next","tagName":"h3"},{"title":"Advanced​","type":1,"pageTitle":"Playable UI Guide","url":"/docs/playable/setup/UI/luna-ui#advanced","content":"Please see the documentation for Advanced Settings which included more details about this tab. ","version":"Next","tagName":"h3"},{"title":"Ad Network​","type":1,"pageTitle":"Playable UI Guide","url":"/docs/playable/setup/UI/luna-ui#ad-network","content":"Please see the documentation for Ad Network Settings which included more details about this tab. ","version":"Next","tagName":"h3"},{"title":"Account​","type":1,"pageTitle":"Playable UI Guide","url":"/docs/playable/setup/UI/luna-ui#account","content":"Here you can logout of your Creative Suite account. Set Plugin Language​ This tab also contains the option for you to change the Playable plugin window's language. At this point in time we support: EnglishRussianChinese  ","version":"Next","tagName":"h3"},{"title":"Assets​","type":1,"pageTitle":"Playable UI Guide","url":"/docs/playable/setup/UI/luna-ui#assets","content":"The Assets section allows you to control which assets are included in your build, and how they are formatted. If the size of your playable is too large, this is where you will need to focus your attention.  ","version":"Next","tagName":"h2"},{"title":"Assets​","type":1,"pageTitle":"Playable UI Guide","url":"/docs/playable/setup/UI/luna-ui#assets-1","content":"For exclude and include assets from your build. Please note, selecting a folder includes every asset in that folder, and force-include always wins (overrides and exclusion). See more details here. ","version":"Next","tagName":"h3"},{"title":"Asset types​","type":1,"pageTitle":"Playable UI Guide","url":"/docs/playable/setup/UI/luna-ui#asset-types","content":"The following tabs allow you to optimise the asset types, and contain specific features related to these types. For more information, please review the documentation on how to optimise your build. Optimising texturesOptimising soundsOptimising fontsOptimising animationsOptimising meshesOptimising fontsOptimising shaders ","version":"Next","tagName":"h3"},{"title":"Highlight included/excluded assets​","type":1,"pageTitle":"Playable UI Guide","url":"/docs/playable/setup/UI/luna-ui#highlight-includedexcluded-assets","content":"Playable Plugin also provides a visual assistance in the form of highlighting assets in your project window depending on whether the asset is marked for force-exclusion or force-inclusion. You can find out more about this feature as well as how to enable it by clicking here. ","version":"Next","tagName":"h3"},{"title":"Double-click files within the Plugin window to open them in Unity​","type":1,"pageTitle":"Playable UI Guide","url":"/docs/playable/setup/UI/luna-ui#double-click-files-within-the-plugin-window-to-open-them-in-unity","content":"Any files you can see in a tree view in the Playable Plugin plugin window can be double-clicked upon in order to then open their location in the Unity project folder, as well as in the inspector tab. (This feature is available from Playable Plugin version 2.0.0 and onwards)  ","version":"Next","tagName":"h3"},{"title":"Sound Timeline Cropping tool​","type":1,"pageTitle":"Playable UI Guide","url":"/docs/playable/setup/UI/luna-ui#sound-timeline-cropping-tool","content":"Within the Sound subtab of the Asset section, you can trim the length of audio files included in your project. If you wish to set a global crop time for all your included audio files, you can do this within the 'Cropping' option at the top of the window (doing so will not override individual crops). Otherwise if you wish to edit audio files individually, select the audio file you wish to trim in the file browser. In this section that will appear below the file browser, you can begin trimming your audio file by entering in the desired beginning and end points in the 'from' and 'to' boxes.  Or alternatively you can click and drag either side of the yellow box around the audio timeline graph to achieve your desired crop. (When your cursor is close enough to a side to drag, said side will turn red. Example of this below)  You can test whether your newly trimmed audio is correct by hitting the 'Play' button above the timeline, which will play the audio from it's cropped beginning to end. ","version":"Next","tagName":"h3"},{"title":"Code​","type":1,"pageTitle":"Playable UI Guide","url":"/docs/playable/setup/UI/luna-ui#code","content":"The Code section of the Luna UI provides a number of tools and features that help you navigate your code and ensure it can be compiled to run on the Luna game engine.  ","version":"Next","tagName":"h2"},{"title":"Exclusions​","type":1,"pageTitle":"Playable UI Guide","url":"/docs/playable/setup/UI/luna-ui#exclusions","content":"By default, Luna will include all C# source code when exporting your project. You should exclude source code files that aren't needed for your playable ad by using the Exclusions tab. For instance, you should exclude all &quot;Example&quot; scripts that come with plugins. For full details, please review the documentation. ","version":"Next","tagName":"h3"},{"title":"Stubs​","type":1,"pageTitle":"Playable UI Guide","url":"/docs/playable/setup/UI/luna-ui#stubs","content":"Automatic Stubbing is a feature of the Playable Plugin plugin for Unity that allows you to automatically stub libraries that are not essential to your playable but are included in your Unity project. For full details, please review the documentation. You can also check out our blog post, about how the Stubber works. ","version":"Next","tagName":"h3"},{"title":"External Sources​","type":1,"pageTitle":"Playable UI Guide","url":"/docs/playable/setup/UI/luna-ui#external-sources","content":"You may wish to include external C# or JS source code and libraries in your project. The External Sources tab allows you to do this. For full details, please review the documentation on including C# source folders and JS libraries. ","version":"Next","tagName":"h3"},{"title":"Scripting Defines​","type":1,"pageTitle":"Playable UI Guide","url":"/docs/playable/setup/UI/luna-ui#scripting-defines","content":"In your game code you may wrap certain features in Scripting Defines; this code will only be compiled and run in certain conditions or platforms, such as specific Unity Versions. The Scripting Defines tab allows you to include specific pre-processor symbols to be included in your Luna build. For full details, please review the documentation. ","version":"Next","tagName":"h3"},{"title":"Runtime Analysis​","type":1,"pageTitle":"Playable UI Guide","url":"/docs/playable/setup/UI/luna-ui#runtime-analysis","content":"The Runtime Analysis section allows you to run the Runtime Analysis feature to automatically exclude code/assets/shaders that are not used in your project. Click here for more information about Runtime Analysis. ","version":"Next","tagName":"h2"},{"title":"Build & Upload​","type":1,"pageTitle":"Playable UI Guide","url":"/docs/playable/setup/UI/luna-ui#build--upload","content":"The Build &amp; Upload section allows you to run a local development build of your project, debug your project and upload it to Creative Suite. The build output will be output in PROJECT &gt; LunaTemp &gt; Stage4 &gt; develop. This sections has two tabs: The Build tab: Build project - creates a new build of your project, using the settings defined in the sections of the Luna UI.Server &gt; Start server - Luna opens a http-server for your convenience.Project Diagnostics - A breakdown of any compilation errors you encountered when putting together your playable. The Upload a Build tab: Upload section - upload or update a creative concept from Unity to Creative Suite. For full details, please review the documentation.Project Health Check - A checklist that tests your creative on different axis to predict the readiness of the project. ","version":"Next","tagName":"h2"},{"title":"Project Diagnostics​","type":1,"pageTitle":"Playable UI Guide","url":"/docs/playable/setup/UI/luna-ui#project-diagnostics","content":"The Project Diagnostics sections provides a breakdown of any compilation issues with your playable in an easy and digestible way. You can use this panel to get insights into what is causing compilation issues with your project's source code, and navigate between other tabs and the code solution to make amendments. For full details, please review the documentation.  ","version":"Next","tagName":"h3"},{"title":"Unity Develop Build Button​","type":1,"pageTitle":"Playable UI Guide","url":"/docs/playable/setup/UI/luna-ui#unity-develop-build-button","content":"You can also build for develop directly from the Unity UI; simply click on the button with the Luna logo along to the left from Unity's Play button.  ","version":"Next","tagName":"h3"},{"title":"Size Breakdown​","type":1,"pageTitle":"Playable UI Guide","url":"/docs/playable/setup/UI/luna-ui#size-breakdown","content":"The Size Breakdown provides you with a detailed breakdown of what is taking up space in your Luna builds, by asset type. For full details, please review the documentation. ","version":"Next","tagName":"h2"},{"title":"Plugin Updates​","type":1,"pageTitle":"Playable UI Guide","url":"/docs/playable/setup/UI/luna-ui#plugin-updates","content":"In this section, you will be notified when a new version of Playable is released, along with a list of new features.  ","version":"Next","tagName":"h2"},{"title":"Export failures","type":0,"sectionRef":"#","url":"/docs/playable/setup/export-failures","content":"","keywords":"export failure workaround playable luna","version":"Next"},{"title":"Assets processing failed​","type":1,"pageTitle":"Export failures","url":"/docs/playable/setup/export-failures#assets-processing-failed","content":"caution Detailed build logs are saved to a local file in Project &gt; LunaTemp&gt; luna.log. Please review this file if your experience asset export failures. This message appears whenever Luna's asset pipeline is unable to digest some of the assets properly. This could happen in one of four instances: ","version":"Next","tagName":"h2"},{"title":"MSBuild failed​","type":1,"pageTitle":"Export failures","url":"/docs/playable/setup/export-failures#msbuild-failed","content":"The most likely cause for this error is MSBuild not being found in the system or configuration having an invalid path to it. Please make sure you have MSBuild (along with .NET 4.7+) installed on your machine. ","version":"Next","tagName":"h3"},{"title":"Invalid custom script​","type":1,"pageTitle":"Export failures","url":"/docs/playable/setup/export-failures#invalid-custom-script","content":"If the project has custom processing scripts configured (i.e. to resize a texture or compress an audio clip), and this popup appears during export, it is recommended to first try disabling those scripts. If the scripts don't write a proper output file, exit with non-zero status or crash the export process, Luna will have to stop and display this message. ","version":"Next","tagName":"h3"},{"title":"Editor script error​","type":1,"pageTitle":"Export failures","url":"/docs/playable/setup/export-failures#editor-script-error","content":"This message will appear if there is an Editor script clashing with Luna export in some way. If that is the case, Unity's console will contain an error message with a stack trace; inspecting this should point to the script(s) causing problems. The way to resolve that would be removing the script in question or fixing it so that it does not interfere with the export process. ","version":"Next","tagName":"h3"},{"title":"Unwanted Scenes left in Unity Build settings​","type":1,"pageTitle":"Export failures","url":"/docs/playable/setup/export-failures#unwanted-scenes-left-in-unity-build-settings","content":"If you have scenes you don't want to export in Luna added to your Unity build settings, it could be causing your build to fail. To get around this simply remove all scenes you aren't exporting with Luna from your Unity build settings, even if they aren't currently checked to be in the load order.  ","version":"Next","tagName":"h3"},{"title":"A bug in Luna​","type":1,"pageTitle":"Export failures","url":"/docs/playable/setup/export-failures#a-bug-in-luna","content":"Although the whole export process contains an excessive amount of safety nets and fall-backs, it can be the case when there is a bug in Luna plugin that prevents the assets from being exported. Similar to the previous scenario, Unity's console would contain an error message with a stack trace originating from Luna's editor scripts namespace. If that happens, please contact us for further assistance. ","version":"Next","tagName":"h3"},{"title":"PNGQuant Access Restriction​","type":1,"pageTitle":"Export failures","url":"/docs/playable/setup/export-failures#pngquant-access-restriction","content":"When starting a Luna build for the first time you might encounter a permission requirement when building your Luna build. This is to do with quant conversion which is actually done by calling executable build into the package. In the case of Mac all (image) conversion will ask for permissions, quant being a case. Steps to Enable Permissions​ • Open terminal and navigate into Luna package you downloaded, where ever the package lives on your local machine. • Then navigate into the tools directory. • Once in the tools directory is open, you can enter: chmod 777 pngquant This should enable you to build without compilation restrictions. If the above didn't work, it could be due to the directory requiring permission further inside the directory folder. Check the contents of that directory with the ls command in the terminal, inside Luna package tools directory. If pngquant folders are present then move into those folders using the commands below: cd pngquant  depending on your device : cd mac64  or cd win64  Once at this level you should enter: chmod 777 pngquant once again. ","version":"Next","tagName":"h3"},{"title":"Incorrect Stubs folder pathing​","type":1,"pageTitle":"Export failures","url":"/docs/playable/setup/export-failures#incorrect-stubs-folder-pathing","content":"If you are collaborating on a Playable and making use of our automatic stubbing feature the pathing may still be set to another collaborator's machine. To fix this locate the Stubs folder in the project directory, and paste the correct path into the 'External C# sources folders' box (Plugin UI -&gt; Code -&gt; External Sources).  ","version":"Next","tagName":"h3"},{"title":"Assets (Package) bundling failed​","type":1,"pageTitle":"Export failures","url":"/docs/playable/setup/export-failures#assets-package-bundling-failed","content":"While these messages may be caused by external factors like lack of disk space or a third-party software terminating Luna process, the most probable reason is some kind of a bug inside Luna internals. Please don't hesitate to contact us in this case. ","version":"Next","tagName":"h2"},{"title":"GUI/Text Shader Error​","type":1,"pageTitle":"Export failures","url":"/docs/playable/setup/export-failures#guitext-shader-error","content":"If you are experiencing an error like this in Unity when exporting to Creative Suite:  You most likely can ignore it. This error is due to the default shader for immediate GUI being automatically grabbed &amp; exported, however its been exported incorrectly. As its inclusion is automatic, no matter if it is used or not, most cases of this error the shader was never being used at all. In the likely instance you arent using this shader, your project will be unaffected and you can safely ignore this error. In the future we will be moving this message to appear only in the Luna Plugin Window. ","version":"Next","tagName":"h2"},{"title":"Object(s) Not Appearing in Luna Build​","type":1,"pageTitle":"Export failures","url":"/docs/playable/setup/export-failures#objects-not-appearing-in-luna-build","content":"If your object is appearing in Unity but not in your Luna build, it will most likely be due to one or more of these reasons: ","version":"Next","tagName":"h2"},{"title":"The Luna Build has not been Updated/Rebuilt​","type":1,"pageTitle":"Export failures","url":"/docs/playable/setup/export-failures#the-luna-build-has-not-been-updatedrebuilt","content":"Click 'Build Develop' again in the Plugin window. ","version":"Next","tagName":"h3"},{"title":"The Disable Cache option in your browser is not enabled​","type":1,"pageTitle":"Export failures","url":"/docs/playable/setup/export-failures#the-disable-cache-option-in-your-browser-is-not-enabled","content":"info With Playable Plugin 3.8.0 and above, the local web server within Unity will no longer use cache. Tick the option in the browser inspector, under the Network tab:  ","version":"Next","tagName":"h3"},{"title":"Incorrect Scene Selected in Plugin Export Settings​","type":1,"pageTitle":"Export failures","url":"/docs/playable/setup/export-failures#incorrect-scene-selected-in-plugin-export-settings","content":"You can check your selected scene in the Luna Plugin window:  ","version":"Next","tagName":"h3"},{"title":"AABB of object is incorrect​","type":1,"pageTitle":"Export failures","url":"/docs/playable/setup/export-failures#aabb-of-object-is-incorrect","content":"Check result of culling. You can do this with BabylonJS Spector. If the object was in the array for rendering, but not after culling: Then something is wrong with the culling, or the objects data for culling. ","version":"Next","tagName":"h3"},{"title":"Object Mesh is Empty​","type":1,"pageTitle":"Export failures","url":"/docs/playable/setup/export-failures#object-mesh-is-empty","content":"This may be due to the mesh or sprite asset being excluded. ","version":"Next","tagName":"h3"},{"title":"Object's Shader is Empty, or Excluded​","type":1,"pageTitle":"Export failures","url":"/docs/playable/setup/export-failures#objects-shader-is-empty-or-excluded","content":"Check object in the inspector to see if it empty, and check your Luna Plugin Exclusions tab to see if the shader is excluded:  ","version":"Next","tagName":"h3"},{"title":"No Shader Variants Exported for your Shader Keywords Combination​","type":1,"pageTitle":"Export failures","url":"/docs/playable/setup/export-failures#no-shader-variants-exported-for-your-shader-keywords-combination","content":"First thing to check is if GLES20 is on in the shader compile setting: Select the shader asset, in the inspector select the drop-down arrow next to the 'Compile and show code' button. Select 'GLES20' from this list. After this hit the 'Compile and show code' button itself, which will allow you to see the see the compiled version of the shader for every keyword combination. If there is nothing there, or it is showing the incorrect shader, we won't be able to grab it. Possible issues causing this could be: The shader is incompatible with GLES2, in which case the shader code will need to be rewritten.You're using a Precompiled Shader, which are not currently supported. (List of current limitations here)You have created a Shader Variant Collection where some of the keywords are not being picked up. ","version":"Next","tagName":"h3"},{"title":"Vertex colors of mesh are 0​","type":1,"pageTitle":"Export failures","url":"/docs/playable/setup/export-failures#vertex-colors-of-mesh-are-0","content":"The drawcall is happening, but the object is completely transparent. Check the drawCall.mesh.vertexBuffer data. ","version":"Next","tagName":"h3"},{"title":"Duplicate Sprite draw orders​","type":1,"pageTitle":"Export failures","url":"/docs/playable/setup/export-failures#duplicate-sprite-draw-orders","content":"You can get around this by setting the Sprite layers specifically. ","version":"Next","tagName":"h3"},{"title":"Release Notes - Playable Plugin","type":0,"sectionRef":"#","url":"/docs/playable/release-notes","content":"","keywords":"release notes playable luna","version":"Next"},{"title":"Version 5.5.0 - 20th December, 2023​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#version-550---20th-december-2023","content":"","version":"Next","tagName":"h2"},{"title":" Highlights ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-highlights-","content":"[EN-3835] - Startup optimisations Bug fixes​ [EN-3832] - Fix error where URP/Lit shader doesn't get compiled[EN-3839] - Fix Sound instance muting not in all cases[EN-3841] - Fix for the issue - LPP doesn't catch fatal bridge exceptions and wrongly report that the build is fine[EN-3846] - Orientation change fix for iOS Other​ [EN-3825] - [LPP window] Clear Advanced settings[EN-3838] - Improve all LP1XXX and LP2XXX PHC Error Messages[EN-3842] - Implement missing Camera API[EN-3844] - Add missing GUILayoutUtility methods stubs ","version":"Next","tagName":"h3"},{"title":"Version 5.4.0 - 24th November, 2023​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#version-540---24th-november-2023","content":"","version":"Next","tagName":"h2"},{"title":" Highlights ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-highlights--1","content":"[EN-3793] - [Avatar] Add RootMotion support[EN-3814] - [SizeBreakdown] Apply settings changes on multi-selected assets &amp; components counter Luna Compiler v2​ [EN-3806] - [Luna Compiler v2] Rework compiler v2 to preprocessing step for compiler v1[EN-3807] - [Luna Compiler v2] Fix issue with negative substring index Other​ [EN-3739] - [SizeBreakdown] Fix the issue when SB can't list assets with the same name[EN-3799] - [PHC] Add new PHC message that detect is gameEnded event is added[EN-3811] - Fix sliced sprite pivot calculated wrong[EN-3812] - Adding stubbed component to GO may result in deserialization failure[EN-3813] - SpriteMask &amp; Sorting Group fixes[EN-3816] - Fix issue when Player prefs crashes the game when “block third-party cookies“ is enabled[EN-3821] - Fix the issue when Reflection probe blending on a scene with missing skybox/reflection probes produces color offsets[EN-3823] - Fix for redundant transform hierarchy callback invocation during scenes deserialization[EN-3826] - Fix the issue - playable starts with sound even when it's muted on IS platform[EN-3827] - Implement Animator.isHuman &amp; Animator.hasRootMotion API[EN-3828] - Fix the issue - Spine &amp; Dynamic Batching leads to VRAM leak[EN-3829] - Reduce constructor overhead in Bridge ","version":"Next","tagName":"h3"},{"title":"Version 5.3.0 - 4th October, 2023​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#version-530---4th-october-2023","content":"","version":"Next","tagName":"h2"},{"title":" Highlights ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-highlights--2","content":"[EN-3572] - Animator Avatar Support[EN-3736] - WebGL2 basic implementation ","version":"Next","tagName":"h3"},{"title":" Fixes and improvements ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-fixes-and-improvements-","content":"Missing API​ [EN-3688] - Add missing System stubs[EN-3744] - Implement GL.invertCulling API[EN-3748] - Implement missing Application class API[EN-3758] - Add missing animationClip API Other​ [EN-3653] - Shaders export rework[EN-3751] - Fix 2022.3 compiler errors[EN-3760] - [Project Diagnostics] Return missing LP1028 code[EN-3763] - Disable treating warnings as errors on compilation[EN-3768] - [Project Diagnostics] Add details to LP1032 error code[EN-3789] - Startup Tool improvement[EN-3796] - [LPP window] Unifying checkbox layout[EN-3805] - Fix Audio Volume change listeners[EN-3787] - Fix broken compiler v2 on mac ","version":"Next","tagName":"h3"},{"title":"Version 5.2.0 - 19th July, 2023​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#version-520---19th-july-2023","content":"","version":"Next","tagName":"h2"},{"title":" Highlights ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-highlights--3","content":"[EN-3614] - Animator performance improvement[EN-3688] - Add missing UnityEngine stubs ","version":"Next","tagName":"h3"},{"title":" Fixes and improvements ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-fixes-and-improvements--1","content":"Particle System​ [EN-3693] - ParticleSystem velocity data rework - stable LimitVelocityOverLifetime module[EN-3734] - Particle system Velocity over lifetime - radial feature[EN-3740] - Particle system Velocity over lifetime - orbital &amp; orbital offset Missing API​ [EN-3665] - Add missing stubs for File methods[EN-3691] - BasicAPI - UnityEngine.Time[EN-3717] - Implement missing stubs for System.IO.Directory class[EN-3718] - Implement missing stubs for UnityException API[EN-3725] - Implement missing Input API - simulateMouseWithTouches and deviceOrientation[EN-3730] - Implement string.ToLowerInvariant and string.ToUpperInvariant methods[EN-3731] - Implement Light.Shadows property[EN-3733] - Implement Material.IsKeywordEnabled method[EN-3745] - Implement Skybox class Other​ [EN-3178] - Hide the Creative Name’s textfield when a creative is selected for update existing[EN-3695] - [PHC] The bug where Several errors are displayed for different big meshes[EN-3742] - [PHC] The bug related to using mesh rather than GameObject for error LP1034[EN-3752] - Prevent Users from unmuting sound on Platforms with disabled sound by system[EN-3702] - [Spine] Spine animation not working correctly with the native JS implementation[EN-3724] - Bug related to Mintegral test tool - canvas.clientWidth/clientHeight is 0[EN-3729] - Incorrect editor pass tags parsing fix[EN-3735] - The bug where AudioSource.PlayOneShot decreases volume to zero when called repeatedly[EN-3746] - Fix for freeze Playable Plugin window during pass keywords extraction caution Starting from package version 5.2.0, support for Unity 2019 is deprecated. ","version":"Next","tagName":"h3"},{"title":"Version 5.1.0 - 18th May, 2023​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#version-510---18th-may-2023","content":"","version":"Next","tagName":"h2"},{"title":" New Features ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-new-features-","content":"[EN-3652] - Added new PHC check for meshes with triangle values higher than 65k (LP1034)[EN-3678] - Support for the Mobi platform has been implemented[EN-3696] - Support for the Adikteev platform has been implemented[EN-3532] - The QR code for local device debugging now includes PG fields and arguments ","version":"Next","tagName":"h3"},{"title":" Fixes and improvements ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-fixes-and-improvements--2","content":"Size Breakdown​ [EN-3710] - Fix for Size breakdown failing when Runtime Analysis contains classes with empty body[EN-3680] - Fix for Size breakdown preview not showing Other​ [EN-3686] - Exceptions are now properly handled when attempting to pass an invalid state (without a layer) to the Animator[EN-3681] - The object type serialization bug causing export failure has been resolved[EN-3698] - Collision2D.relativeVelocity API has been implemented[EN-3122] - The bug where the scene initializes its settings twice has been resolved[EN-3676] - The bug of the WheelJoint2D component being active when the connected Rigidbody is not set has been resolved[EN-3683] - The bug related to instantiating disabled objects using script references has been fixed[EN-3700] - The issue causing memory corruption when removing a GameObject with an attached Rigidbody2D and Joint2D has been fixed[EN-3719] - Fix for preloader background resetting to white by default ","version":"Next","tagName":"h3"},{"title":"Version 5.0.0 - 12th April, 2023​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#version-500---12th-april-2023","content":"","version":"Next","tagName":"h2"},{"title":" New Features ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-new-features--1","content":"[EN-3504] - Added support for Dynamic Batching 2D and 3D[EN-3502] - Implemented Physics2D WASM[EN-3669] - The missing overloads for the most popular methods of Physics2D have been implemented[EN-3656] - The missing overloads for the most popular methods of Rigidbody2D have been implemented[EN-3659] - The missing overloads for the most popular methods of Collider2D have been implemented ","version":"Next","tagName":"h3"},{"title":" Fixes and improvements ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-fixes-and-improvements--3","content":"Shaders​ [EN-2599] - Fix for unity_LightData uniform in URP[EN-3617] - Fix for UseShadersCache breaking the shaders export UI​ [EN-3456] - The store links previously available in the Ad Network Settings tab have been removed and should be configured within the Application Settings in Creative Suite[EN-3590] - Fixed the issue of some error messages in PHC not displaying in user's selected language[EN-3630] - Fixed the log description details in Project Diagnostics not being fully readable Automatic Stubbing​ [EN-3665] - Added missing stubs for System.IO.File methods Other​ [EN-2334] - The issue causing a memory leak due to a Native Collection not being disposed of has been resolved[EN-3629] - The problem in DOTween related to integer casting, which was not correctly flooring values, has been resolved[EN-3634] - Fix for prefab initialization linked by a list not being as effective as using Instantiate to initialize a prefab with a parent[EN-3660] - Fixed incorrect SkeletonClipping behaviour[EN-3666] - Fixed incorrect default Cubemap[EN-3668] - Fixed incorrect export for NormalMaps in Unity 2020.3+[EN-3672] - If there is an initialization crash, a verbose error message will be displayed in the browser console ","version":"Next","tagName":"h3"},{"title":"Version 4.6.0 - 20th February, 2023​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#version-460---20th-february-2023","content":"","version":"Next","tagName":"h2"},{"title":" New Features ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-new-features--2","content":"[EN-3514] - Unity 2020.3 URP support[EN-1196] - Implemented optional VAO support[EN-3425] - Introduced Character Controller PD check[EN-3426] - Implemented Physical Camera option[EN-1688] - Added support for DictionaryEntry ","version":"Next","tagName":"h3"},{"title":" Fixes and improvements ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-fixes-and-improvements--4","content":"UI​ [EN-3510] - Removed Additional Generic Check toggle from the Settings -&gt; Advanced tab in the plugin window[EN-3558] - Removed &quot;send component to Unity&quot; from Chrome Extension Others​ [EN-3575] - Added DOTween Pro stubs[EN-3605] - Improved particle aabb calculation[EN-3491] - [Resources] The source file &quot;lunaDevConfig.json&quot; is added if you make the package yourself[EN-3556] - Fixed enum related chrome extension crashes[EN-3574] - Fixed Particle Culling calculating wrongly[EN-3596] - Fixed Duplicated Preserve attribute class[EN-3600] - Fixed Build &amp; Upload applicationID not being set properly[EN-3616] - Fixed handle exceptions when passing invalid layer / state to Animator[EN-3620] - Fixed Particles/Standard Unlit is missing error[EN-3621] - Fixed lazy prefabs not initializing for assigned variable[EN-3571] - Fixed VertexLights are considered as pixel lights in URP after asset settings change[EN-3513] - Updated DOTween sources to the last version[EN-3497] - Added missing stubs for File methods[EN-3555] - Added check for Application.OpenURL() api ","version":"Next","tagName":"h3"},{"title":"Version 4.5.0 - 20th January, 2023​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#version-450---20th-january-2023","content":"The Luna Chrome extension could not be compatible with this package. Please update the extension to version 0.3.2. ","version":"Next","tagName":"h2"},{"title":" New Features ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-new-features--3","content":"[EN-3476] - Added support for Native JS Spine[EN-3490] - Implemented Animation.Stop(string name) method[EN-3498] - Implemented Transform.TransformDirection method with 3 arguments ","version":"Next","tagName":"h3"},{"title":" Fixes and improvements ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-fixes-and-improvements--5","content":"Playable Health Check​ [EN-3479] - External sources are excluded if they are not found when starting a build Project Diagnostics​ [EN-3393] - The Issue Details section now allows you to copy the text UI​ [EN-3492] - Improved documentation buttons in the plugin's window[EN-3481] - Added missing tooltips in the plugin's window Others​ [EN-3473] - Improved performance for 2D Physics[EN-3369] - Fix for AudioSource.PlayOneShot() being affected by the Loop setting[EN-3419] - Fix for Unity 2020.3 URP Lit shaders missing after export[EN-3485] - Fix for _SPECULAR_SETUP keyword not being collected for Lit second subShader[EN-3495] - A fix has been made for Playable accidentally excluding the Prefabs module when it is used within a project[EN-3512] - Fix for Script Execution Order breaking for a namespace nested classes[EN-3414] - Improved Bridge TypeMarkers for startup codebase initialization[EN-3523] - Added warning about Animator.Play() being called for inactive game objects ","version":"Next","tagName":"h3"},{"title":"Version 4.4.0 - December 29th, 2022​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#version-440---december-29th-2022","content":"","version":"Next","tagName":"h2"},{"title":" New Features ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-new-features--4","content":"[EN-3415] - Added additional checks for unsupported packages (LP1032) in Playable Health Check[EN-3377] - The Auto-Instantiate Prefabs option has been reworked ","version":"Next","tagName":"h3"},{"title":" Fixes and improvements ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-fixes-and-improvements--6","content":"Playable Health Check​ [EN-3390] - Fix for PHC tab not containing information on core errors after a build failed[EN-3488] - Fix for PHC tab getting cleared after building a project with Build Develop (Code only) Runtime Analysis​ [EN-3464] - Added UpdateSDFScale method to whitelist for Runtime Analysis Others​ [EN-3423] - Fix for camera moving twice when its parent is changed[EN-3446] - Fixed Firebase stub generation issues[EN-3467] - Fixed PolygonCollider2D not updating after offset is applied[EN-3468] - Fix for the OnCollisionExit callback not being triggered for kinematic movements[EN-3472] - All text is now translated after language change[EN-3477] - Fix for Luna window breaking and error messages in the console appearing when luna.json is deleted[EN-3482] - The line height of generated font assets has been fixed[EN-3496] - Fixed build failing with Unknown Error when trying to run Code Diagnostics after deleting the LunaTemp folder ","version":"Next","tagName":"h3"},{"title":"Version 4.3.0 - December 12th, 2022​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#version-430---december-12th-2022","content":"","version":"Next","tagName":"h2"},{"title":" New Features ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-new-features--5","content":"[EN-2903] - Implemented a new feature: Dynamic BatchingPlayable Health Check: [EN-3268] - Introducing the Fix All button, to quickly fix all automatically-fixable issues[EN-3255] - Added additional checks for external plugin versions that Luna supports (LP1026, LP1027)[EN-3263] - Added additional checks for Avatar animations (LP1029)[EN-3316] - Added additional checks for activating Shaders Runtime Analysis (LP1031) ","version":"Next","tagName":"h3"},{"title":" Fixes and improvements ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-fixes-and-improvements--7","content":"Playable Health Check​ [EN-3329] - Project Diagnostics prints where the unexpected token is when ASCII characters are used[EN-3395] - Fixed Playable.InstallFullGame() not being detected by Project Diagnostics if it has parameters passed in[EN-3276] - Added error when using Tag and UIRoot in scripts as they are reserved keywords (error will display under under 'core functionality' in the plugin window) Size Breakdown​ [EN-3385] - Fix for the preview getting the image card from the previous element Particles[EN-3420] - Mesh assignment produces exception[EN-3160] - The sounds preview plays the compressed Luna-build version after the file has been rebuilt[EN-3386] - Warning in preview section when there is no corresponding file in the Luna build to show Runtime Analysis​ [EN-3325] - Optimised shader stripping window UI​ [EN-3342] - Scenes' paths appear shorter when the folder path is too long[EN-3396] - Fixed broken UI and errors in the Unity console after opening the Build and Upload tab Others​ [EN-3267] - Added validation for Fonts tab[EN-2789] - SubMeshes have been reimplemented to behave more like Unity's[EN-2896] - Implemented all Shaders.GetGlobal and Shaders.SetGlobal APIs[EN-2198] - Fix for Playable Plugin crashing when any of the BlendTree motions is null[EN-2870] - Fix for AnimatorOverrideController causing black screen and a number of errors in Luna[EN-3317] - A fix has been made to prevent the freezing of tooltips when the window is not focused[EN-3322] - Added an exception handler for BlendShapes that are not imported in Unity[EN-3339] - Added a fix for Joint.connectedBody throwing a Null Reference Exception[EN-3363] - Fix for builds that are uploaded to Creative Suite successfully while there are critical errors in Playable Health Check[EN-3380] - Fixed the delay in animation transitions with exit time[EN-3387] - Fixed issue with Mesh.sharedMesh not keeping the correct source vertex format[EN-3394] - Blur image effect support has been fixed[EN-3406] - Fix for Graphics.Blit not working correctly in Luna and issues with the GL static constructor[EN-3419] - URP 2020.3 - Fix for unsupported sub shaders of the Lit shader getting exported ","version":"Next","tagName":"h3"},{"title":"Version 4.2.0 - November 11th, 2022​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#version-420---november-11th-2022","content":"","version":"Next","tagName":"h2"},{"title":" New Features ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-new-features--6","content":"[EN-3187] - Added additional checks for unsupported Atlas Population Mode in Playable Health Check (LP1030)[EN-3269] - Optimise export with caching option has been reworked and fixed: Luna config files now affect the cache stateA fix was made to prevent the cache from resetting whenever Unity is closedCache resets when updating Playable Plugin to another versionFixed a bug where a Cancelled or Failed build still affects the Build button to change as if there is cached data (The export cache should be created only on successfully completed build) [EN-3264] - New documentation page for Playable Plugin hotkeys[EN-3226] - Implemented support for DV360 platform export ","version":"Next","tagName":"h3"},{"title":" Fixes and improvements ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-fixes-and-improvements--8","content":"Size Breakdown​ [EN-3243] - Moved fonts from Texture List to Font List[EN-3350] - Fix for Size Breakdown causing the plugin window to turn black Playable Health Check​ [EN-3315] - Fixed issue with PHC removing all generated statuses when using Code Diagnostics after code initialisation External JS/C# Tab​ [EN-3308] - External paths that have been lost turn red without needing to reinitialise scripts Runtime Analysis​ [EN-3327] - Improved Runtime Analysis to rely on the previous development build in order to determine the next build's excluded modules Others​ [EN-3241] - Fixed Touch emulator for ad networks test tools[EN-3323] - Remote debugging warnings have been hidden for Creative Suite builds[EN-3326] - In the &quot;Scene in Build&quot; settings, the scenes' paths are now identical to the ones in the &quot;Build Settings&quot;[EN-2244] - An issue with Animator layers having duplicate states if they have the same state name has been resolved[EN-2902] - Fixed Physics2d BoxShape._setAsBox reset causes issues with undefined[EN-3309] - Fixed error when the VideoPlayer component is disabled[EN-3319] - A remote resource sync is performed after a package change is made[EN-3332] - Fix for .NET version check for Windows[EN-3337] - Fix for some devices where shadows are not rendered correctly because of light selection[EN-3357] - Fix for export failing if keywords are not defined for shader passes ","version":"Next","tagName":"h3"},{"title":"Version 4.1.0 - October 14th, 2022​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#version-410---october-14th-2022","content":"","version":"Next","tagName":"h2"},{"title":" New Features ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-new-features--7","content":"[EN-3218] - Introducing a new Autofix Button for Runtime Analysis Warning (LP1014) in Playable Health Check[EN-3185] - Introducing a new Autofix Button for Unsupported TMP version (LP1015) in Playable Health Check[EN-3219] - Introducing a new Autofix Button for Animation Compression (LP1017) in Playable Health Check[EN-3220] - Introducing a new Autofix Button for Mesh Compression (LP1018) in Playable Health Check[EN-3244] - Introducing a new Autofix Button for C# errors that can be fixed by enabling Luna Compiler v2 in Playable Health Check[EN-3222] - Added additional checks for unsupported JsonUtility APIs in Playable Health Check (LP3013)[EN-3258] - Added an additional verification check to ensure users are running the correct Unity version (LP1028) in Playable Health Check[EN-3270] - Dev Environment: Added a QR code for opening development builds from a local IP address on different devices (documentation)[EN-3272] - Introducing Remote Debugging for platform builds (documentation)[EN-3177] - Added tooltips to Luna window ","version":"Next","tagName":"h3"},{"title":" Fixes and improvements ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-fixes-and-improvements--9","content":"Playable Health Check​ [EN-3292] - Removed search panel from Playable Health Check tab Dev Environment​ [EN-3291] - Removed &quot;Use Dev Env&quot; option from Luna Basic Settings window[EN-3285] - Changed the Dev Environment's style to prioritize the device preview when using browser's dev tools Luna Compiler V2​ [EN-3293] - Fixed build failing when whitespace character is in the project path Build and Upload Section​ [EN-3290] - Fixed the issue where the drop-down list of available creatives did not display creatives that shared too many of the same characters[EN-3283] - Fix for an issue where creatives would not get selected for the first time in the drop-down list of available creatives[EN-3247] - Fix for the list of available creatives not updating when switching applications[EN-3252] - Fix for the &quot;Build and Upload&quot; button not being disabled when the creative name is empty[EN-3250] - Added tooltips for long application or creative names Runtime Analysis​ [EN-3246] - Fix for Runtime Analysis not updating excluded elements correctly when using the search filtering Size Breakdown​ [EN-3242] - Added Cubemaps to the appropriate list and displayed correct previews and settings[EN-3240] - Removed extra code calculation from Size Breakdown[EN-3239] - Added a background for mesh preview in Size Breakdown[EN-3279] - Fixed the &quot;Recalculate Asset Size&quot; button overlapping the preview image UI​ [EN-3235] - Changed build buttons colors to blue[EN-3297] - Changed &quot;Build Develop&quot; and &quot;Build and Upload&quot; buttons color in plugin's light theme[EN-3237] - Fixed UI warning icon size in &quot;Build and Upload&quot; section Others​ [EN-3149] - Added Mraid support to the Moloco platform[EN-3081] - Fixed Pragma multi_compile choosing incorrect shader variant in Luna build[EN-3298] - Fixed Luna.Unity.LifeCycle.GameEnded not invoking pi.logGameEnd()[EN-3280] - Added Cubemaps in Assets, Textures and Size Breakdown tabs[EN-3271] - Error handling for a billboard particle with a disabled camera has been added (maybe remove)[EN-3261] - Fix for nesting a third level of enumerators[EN-3202] - Fixed undefined behaviour if shader uses an empty TEXTCOORD slot[EN-3190] - Fixed CharacterController deserialiser error when the component is disabled[EN-3129] - Google Ads: added Google Ads orientation option[EN-3275] - Implemented Normalize(Quaternion q) and normalized for Quaternion class ","version":"Next","tagName":"h3"},{"title":"Version 4.0.0 - September 21st, 2022​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#version-400---september-21st-2022","content":"","version":"Next","tagName":"h2"},{"title":" New Features ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-new-features--8","content":"[EN-1833] - Introducing a new feature: Realtime Shadows. Now you can improve the visual fidelity of your playables but with costs of technical performance.[EN-2958] - Introducing a new feature: Playable Health Check. With the great rework of ProjectDiagnostics, Playable Health Check view allows you to be aware of the readiness to release for your playable. So now you can spot and solve issues early.[EN-3042] - Introducing a new feature: Performance Indicator. It allows you to be aware of your performance and understand, which aspect of your playable might be improved to achieve the best technical performance even on the low end devices.[EN-2684] - Introducing Luna Compiler V2 with the support of C# 7.2/7.3/8.0/9.0 features[EN-2674] - Size Breakdown: Added re-calculation of asset size after changing its settings in Size Breakdown. It allows you to iterate on assets optimisations quickly without waiting for full project rebuild.[EN-2671] - Unity 2018.4 is deprecated now. Added support for Unity 2021.3 (updated documentation: Link 1,Link 2, Link 3) ","version":"Next","tagName":"h3"},{"title":" Fixes and improvements ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-fixes-and-improvements--10","content":"Realtime Shadows​ Realtime Shadows is now out of beta and available to all. Improvements include: [EN-3104] - Performance improvements for the shadows[EN-3074] - Now ParticleSystems are also can cast shadows[EN-3076] - Settings from individual lights affect the final shadow image[EN-3077] - Now you can have both Soft and Hard shadows in one scene Project Diagnostics​ [EN-3066] - Improved information for Project Diagnostics warnings: the logs will provide the Unity asset location when an asset fails[EN-3093] - Removed Error SubTypes fields and removed all warnings, leaving only the crucial reports[EN-1737] - Cleared up the UI of Diagnostics view Size Breakdown​ [EN-3035] - Fix for incorrect audio size estimation Runtime Analysis​ [EN-3136] - Fixed excluding classes via Runtime Analysis may break non-excluded nested classes[EN-3112] - Fixed shader variant not registered if another variant from the same shader used the same keyword set but had another subshader index Others​ [EN-2893] - iOS: Fixed bug that some sounds are played with delay after interaction. Also fixed simultanious plays for one audio after interaction[EN-3058] - Export: Added verbose logs for all errors related to FontBM and Font. Now it's easy to see which Font asset caused an issue and a specific issue[EN-3105] - API: Mathf.GammaToLinearSpace method fixed.[EN-1241] - Improved scripts conversion error messages to be more verbose. Now they don’t contain irrelevant stack trace and highlight specific code issue with a path to related cs file[EN-2931] - API: Implemented GameObject.CreatePrimitive for all PrimitiveTypes[EN-3115] - API: SkinnedMeshRenderer.GetBlendShapeWeight now returns correct values (not multiplied by 100)[EN-2887] - Fix for build failures on Windows when selecting the same file with relative and absolute paths simultaneously in the External Source section[EN-2977] - Fix for some build errors related to special symbols in the project path.[EN-3033] - Fix for parsed shaders getting invalid after updating Playable Plugin[EN-3037] - API: Fix for Transform.Rotate() giving a different result in Luna builds[EN-3047] - API: Fix for AnimatorStateInfo containing incorrect shortNameHash[EN-3052] - Fix for develop builds where VideoPlayer can be played even when the component is disabled[EN-3055] - Fix for Code Only builds failing in new projects[EN-3070] - Fix the issue which caused ENOENT: no such file or directory, open '*./LunaTemp/stage1/js/deserializers.js'[EN-3106] - Fixed Luna crashing because of missing mesh on SkinnedMeshRenderer[EN-3079] - Base122 encoding performance improved[EN-3095] - Implemented ParticleSystem.MainModule.stopAction[EN-3097] - Fix issue which caused Error - EBUSY: resource busy or locked, rmdir './LunaTemp/stage4/develop' on Windows OS.[EN-3099] - Fix for SpriteRenderer.maskInteraction API not affecting the stencil state[EN-3121] - Fix for UnityEngine.Gradient causing compiler error if was used as type in generics.[EN-3118] - Meaningful error message introduced for issues related to some unsupported features of new versions of Unity[EN-3128] - Added error handling when AnimatorController's SubStateMachines are used[EN-3138] - Fix for Remote File Request error appearing in Unity console when Playable package is initialised for the first time ","version":"Next","tagName":"h3"},{"title":" Deprecated ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-deprecated-","content":"Support for Unity 2018 has been deprecated ","version":"Next","tagName":"h3"},{"title":"Version 3.12.0 - July 26th, 2022​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#version-3120---july-26th-2022","content":"","version":"Next","tagName":"h2"},{"title":" New Features ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-new-features--9","content":"[EN-3001] - Added release notes to plugin window in Luna PluginUpdate section[EN-3041] - Runtime Analysis automatically includes all parent classes when manually including a class in the Code tab ","version":"Next","tagName":"h3"},{"title":" Fixes and improvements ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-fixes-and-improvements--11","content":"[EN-2929] - Fixed shader export for Unity 2021.2 - 2021.3.3[EN-3006] - Expanded the description for missing shaders error[EN-3019] - The ?startup, ?spector and ?fps flags are now available for platform builds[EN-3013] - Fixed &quot;NullReferenceException&quot; error appearing when searching for a keyword in an empty tree view[EN-3033] - Fixed SVC_Luna.asset parsed shaders breaking after updating Playable Plugin version ","version":"Next","tagName":"h3"},{"title":"Version 3.11.0 - July 7th, 2022​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#version-3110---july-7th-2022","content":"","version":"Next","tagName":"h2"},{"title":" New Features ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-new-features--10","content":"[EN-2968] - Option to build and update concepts from the Creative Suite tab[EN-2907] - The HideFlags API has been implementedThe HideFlags API has been implemented, as well as serialization issues with objects with specific flags have been addressed[EN-2984] - Implemented Graphics.DrawMesh API ","version":"Next","tagName":"h3"},{"title":" Fixes and improvements ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-fixes-and-improvements--12","content":"[EN-2777] - The display of overloaded methods in the Runtime Analysis tab has been improved[EN-2967] - Removed the option to build for Creative Suite from the bottom left button[EN-2973] - Project Diagnostics: simplified logs[EN-2974] - Project Diagnostics: removed filters[EN-2975] - Project Diagnostics: the details section has been redesigned[EN-2979] - Added support for Camera.cullLayerDistances[EN-2981] - Fixed Project Diagnostics logs stopping when Asset Processing causes an unknown error dialogue within Unity[EN-2994] - Fixed missing shaders in Creative Suite with empty SVC_Luna[EN-2997] - Hidden logEvents messages in browser console[EN-2998] - Fixed builds trying to animate a none existing property of a material in the browser[EN-3004] - Fixed rebuilding luna project sources error ","version":"Next","tagName":"h3"},{"title":"Version 3.10.0 - June 29th, 2022​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#version-3100---june-29th-2022","content":"","version":"Next","tagName":"h2"},{"title":" New Features ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-new-features--11","content":"[EN-2956] - Runtime analysis: Prefab module can now be excluded[EN-2922] - Modules can be excluded when code stripping is disabled[EN-2892] - Use cached shaders to accelerate export time ","version":"Next","tagName":"h3"},{"title":" Fixes and improvements ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-fixes-and-improvements--13","content":"[EN-2507] - Fixed incorrect asset path for package assets[EN-2697] - Added warning if any excluded scene is selected for export[EN-2843] - Improved Shader Runtime Analysis logic[EN-2918] - Dev Environment disabled on mobile devices[EN-2920] - Fixed creatives loading with black elements when opened in a network for the first time[EN-2898] - Added possibility to fix the Linear color space issue from Project Diagnostic[EN-2945] - Removed the report issue button in Project Diagnostic[EN-2927] - Refactored AudioSource stop(), play(), and pause() methods[EN-2928] - Fixed the AudioSource.Stop() not stopping all clips after multiple PlayOneShot() calls[EN-2952] - Improvements for Particles Gravity Modifier[EN-2957] - Optimised performance of DummyCodeEditorScope[EN-2983] - Fixed incorrect package assets export on windows[EN-2939] - Facebook Instant Games: fixed PlayerPrefs not working when the build is downloaded from Creative Suite[EN-2949] - Facebook Instant Games: fixed loading progress stuck to zero[EN-2948] - Facebook Instant Games: fixed C# objects and strings are accepted by some functions, while Facebook API expectes JS objects[EN-2955] - Facebook Instant Games: fixed mappings for Haptic feedback and GraphAPI[EN-2962] - Facebook Instant Games: added functionality to log all used FBIG API functions to analytics ","version":"Next","tagName":"h3"},{"title":"Version 3.9.0 - June 9th, 2022​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#version-390---june-9th-2022","content":"","version":"Next","tagName":"h2"},{"title":" New Features ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-new-features--12","content":"[EN-2921] - Runtime Analysis: Reflection module can now be excluded ","version":"Next","tagName":"h3"},{"title":" Fixes and improvements ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-fixes-and-improvements--14","content":"[EN-2794] - Improved Spine support[EN-2916] - Added support for older DOTween versions (1.1.640)[EN-2880] - Optimised resizing and compression operations for images with premultiplied alpha[EN-2802] - Fixed video data URI for iOS 15.4[EN-2866] - Improved logic for finding NPOT textures in Repeat mode[EN-2869] - Double-clicking any asset in Size Breakdown takes you to the original asset in Unity[EN-2875] - Updated warnings about Runtime Analysis usage in Size Breakdown and Project Diagnostic[EN-2881] - Added new message before creating an estimate in the Size Breakdown window[EN-2890] - Long-pressing on iOS devices no longer causes videos to freeze[EN-2913] - Resolved decompression errors with Playable projects before 3.4.0[EN-2900] - Fixed compression error producing corrupted archives and consequently leading to broken builds[EN-2912] - Fixed FBInstant.ShareAsync not working correctly if you send data that is not null[EN-2914] - Facebook Instant Games: tested and fixed incorrect APIs[EN-2884] - Fixed Animator exception when provided layer does not exist[EN-2856] - Fixed the Cannot set properties of null error appearing in the dev console when using sound[EN-2991] - Added ability for updating configs from remotely ","version":"Next","tagName":"h3"},{"title":"Version 3.8.0 - May 27th, 2022​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#version-380---may-27th-2022","content":"","version":"Next","tagName":"h2"},{"title":" New Features ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-new-features--13","content":"[EN-2842] - New Dev Environment for develop builds[EN-2826] - Separate directories for develop and Creative Suite and platforms builds[EN-2818] - Improved support for Spine plugin by adding missing APIs[EN-2883] - Cache gets disabled when using the Luna web server ","version":"Next","tagName":"h3"},{"title":" Fixes and improvements ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-fixes-and-improvements--15","content":"[EN-2862] - Added support for UsePass[EN-2531] - Runtime Analysis message now remains after changing network in Size Breakdown[EN-2779] - Fixed Size Breakdown preview breaking after changing network[EN-2822] - Fixed Size Breakdown estimate getting reset after the game is launched in the editor[EN-2819] - Optimised preview platform for Creative Suite[EN-2831] - Last Size Breakdown estimate shows for which platform it was calculated[EN-2850] - Fixed AudioMixer.SetFloat(&quot;Volume&quot;, volumeLevel) not affecting AudioSource volume[EN-2873] - The Assets/Shaders tab in the Assets section has been removed[EN-2854] - Tabs get now saved in each section of the Playable Plugin Window[EN-2855] - Project Diagnostics now includes a TMP 3.0.6 check[EN-2858] - Excluded files from Size Breakdown are visible in the Assets tab immediately[EN-2861] - Fixed Video PlayOnAwake property for disabled objects[EN-2863] - Improved shader keywords parsing for Unity 2018.4[EN-2864] - Optimised Runtime Analysis code search logic[EN-2865] - Fixed incorrect drawing order for MeshRenderer with multiple materials[EN-2871] - Fixed shadows getting rendered when using a culling mask ","version":"Next","tagName":"h3"},{"title":"Version 3.7.0 - May 12th, 2022​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#version-370---may-12th-2022","content":"The first build attempt may be unsuccessful after installing this package version. ","version":"Next","tagName":"h2"},{"title":" New Features ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-new-features--14","content":"[EN-2773] - Improved Runtime Analysis UX[EN-2816] - Improved Luna Shader Variant Collection UX ","version":"Next","tagName":"h3"},{"title":" Fixes and improvements ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-fixes-and-improvements--16","content":"[EN-2775] - Runtime Analysis Code tab: improved exclusion list hierarchy[EN-2776] - Runtime Analysis Code tab: improved searching logic[EN-2700] - Playable picks up C# sources (packages) imported from git[EN-2480] - Additional validation has been added for the Creative Suite tab (links to stores) when exporting[EN-2814] - Size Breakdown displays previews for textures with WEBP format[EN-2805] - Fixed missing shader in Creative Suite: Particles/Standard Unlit[EN-2806] - Shader variant is applied instead of missing shader when the shader is exported without enabling any keywords[EN-2821] - Fixed errors when a device does not support instancing[EN-2840] - Added Luna support for Chrome 55 and above[EN-2848] - Fixed bugs with TMP 3.0.6 and 3.0.0[EN-2367] - UnityEngine.Input.World.rayIntersectPc() no longer fails[EN-2675] - Fixed incorrect path in luna.json when assets from unity_buitin_extra are excluded[EN-2829] - Fixed TextureSheetAnimation getting rendered when the option is disabled[EN-2830] - Fixed AnimationController throwing errors when parameters are missing[EN-2832] - Fixed issue with URP camera staying in the internal list after the scene is reloaded[EN-2839] - Fixed Rigidbody dynamic properties not resetting after OnDisable[EN-2853] - Fixed shader variants getting duplicated during export ","version":"Next","tagName":"h3"},{"title":"Version 3.6.0 - April 29th, 2022​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#version-360---april-29th-2022","content":"","version":"Next","tagName":"h2"},{"title":" New Features ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-new-features--15","content":"[EN-2793] - Added ability to open Unity scenes in the Unity Editor by pressing Shift + Command + Left Click / Control + Left Click on a name in Playable's 'Scenes in Build' list[EN-870] - Added support for UnityEngine.VideoPlayer.RenderMode - Texture mode ","version":"Next","tagName":"h3"},{"title":" Fixes and improvements ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-fixes-and-improvements--17","content":"[EN-2774] - Moved &quot;Shaders&quot; tab from &quot;Assets&quot; to &quot;Runtime Analysis&quot;[EN-2746] - Fixed casting order bug[EN-2788] - Fixed animation curve modifying property names which led to broken animations[EN-2790] - Fixed &quot;Size Breakdown&quot; builds failing[EN-2800] - Fixed &quot;Plugin Updates&quot; tab disappearing when starting a build[EN-2802] - Fixed playables containing video data not starting on iOS 15.4[EN-2803] - Fixed &quot;Size Breakdown&quot; progress bar displaying an incorrect title whilst estimating assets size[EN-2808] - Fixed Google previews randomly failing due to an error in decompression[EN-2815] - Fixed changes made to assets in the &quot;Asset&quot; or &quot;Size Breakdown&quot; tabs not being reflected in the other's information[EN-2828] - Fixed audio playing again even if it had already ended after changing tabs back to the playable ","version":"Next","tagName":"h3"},{"title":"Version 3.5.0 - April 19th, 2022​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#version-350---april-19th-2022","content":"","version":"Next","tagName":"h2"},{"title":" New Features ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-new-features--16","content":"[EN-2713] - Support for TextMeshPro 3.0.6[EN-2785] - Added option to add active scene to BuildSettings from Playable's Basic Settings Tab ","version":"Next","tagName":"h3"},{"title":" Fixes and improvements ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-fixes-and-improvements--18","content":"[EN-2766] - Audio tags have been removed from builds to comply with Google's platform[EN-2770] - Fixed sound resuming after user interaction[EN-2772] - Fixed Runtime Analysis not including nested classes[EN-2778] - Prevented Runtime Analysis from stripping any mouse-related code from builds[EN-2783] - Added support for Chrome version 55 and above for loading media assets[EN-2780] - Fixed Sorting Group not updating on non-direct child insertion[EN-2681] - Occasionally occurring error ArgumentException: Invalid port has been fixed[EN-2748] - Fixed Texture.Apply rewriting previously handled texture data[EN-2738] - Lights in Luna match lights in Unity[EN-2763] - Fixed Project Diagnostics not updating after asset refresh[EN-2788] - Fixed issue with curves deserialization modifying property names and breaking animations[EN-2762] - SkinnedMeshRenderer throwing Uncaught TypeError: Cannot read properties of undefined (reading 'mul2') has been fixed ","version":"Next","tagName":"h3"},{"title":"Version 3.4.1 - April 5th, 2022​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#version-341---april-5th-2022","content":"","version":"Next","tagName":"h2"},{"title":" Fixes and improvements ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-fixes-and-improvements--19","content":"[EN-2771] - Added two checkboxes for disabling code or shaders stripping in Runtime Analysis ","version":"Next","tagName":"h3"},{"title":"Version 3.4.0 - April 1st, 2022​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#version-340---april-1st-2022","content":"","version":"Next","tagName":"h2"},{"title":" New Features ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-new-features--17","content":"[EN-2736] - Switched compression tool to a custom brotli build without a built-in dictionary, allowing build size to be reduced by 50-130 kb (depending on the platform) and it slightly decreases the build startup time[EN-2737] - Generate only necessary combinations of cache to reduce build time for Creative Suite[EN-2761] - Added additional classes to Runtime Analysis whitelist for platforms template[EN-2729] - When building, a popup will appear if the scene has changes that have not been saved ","version":"Next","tagName":"h3"},{"title":" Fixes and improvements ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-fixes-and-improvements--20","content":"[EN-2741] - Fixed Runtime Analysis collecting shaders even when disabled[EN-2750] - Fixed Tracer.js generating invalid code on non-English localisations[EN-2751] - Fixed Bridge's compilation errors pointing to Tracer.js[EN-2753] - Fixed creating TMP files for brotli compression may result in &quot;permission denied&quot; errors[EN-2758] - Added basic settings (gravity) to Physics stub[EN-2196] - Mat4.setPerspective correctly calculates edge values[EN-2455] - Fixed UI misplacement when reporting a problem with more than 5 lines ","version":"Next","tagName":"h3"},{"title":"Version 3.3.0 - March 23rd, 2022​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#version-330---march-23rd-2022","content":"","version":"Next","tagName":"h2"},{"title":" New Features ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-new-features--18","content":"[EN-2648] - Audio support for LunaPlaygroundAssets[EN-2689] - Added customizable hints for fields in Creative Suite[EN-2669] - Added options for asset export and code compilation to Develop tab ","version":"Next","tagName":"h3"},{"title":" Fixes and improvements ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-fixes-and-improvements--21","content":"[EN-2721] - Updated logo and icons[EN-2252] - Added basic Renderer API implementation for UnityEngine.ParticleSystemRenderer[EN-2707] - Added SkyBox module to Runtime Analysis[EN-2044] - Only the last export information is stored in luna.log[EN-2655] - &quot;Build &amp; Estimate size&quot; button is disabled during build time[EN-2702] - Fixed movement calculation by multiplying a Vector3 by Time.deltaTime[EN-2715] - Fixed a erroneous log triggered by Luna in new projects[EN-2716] - Updated Runtime Analysis to include fallback shaders in develop mode, as well as removing excluded shader variants for Unity 2020.1 and newer[EN-2720] - Fixed issue where changing connectedBody led to an incorrect Joint state ","version":"Next","tagName":"h3"},{"title":"Version 3.2.0 - February 24th, 2022​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#version-320---february-24th-2022","content":"","version":"Next","tagName":"h2"},{"title":" New Features ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-new-features--19","content":"[EN-2687] - Added new &quot;Average Total&quot; value in Startup feature ","version":"Next","tagName":"h3"},{"title":" Fixes and improvements ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-fixes-and-improvements--22","content":"[EN-2708] - Unity version 2021.1 now exports shaders correctly[EN-2653] - Fixed SubShaders export[EN-2253] - Arguments from the app store's link got removed for validation in Unity Ads[EN-2703] - Fixed hint in the Size Breakdown tab[EN-2694] - Fixed incorrect arrangement of nested sorting groups[EN-2323] - Fixed the Generate stub button being cropped in some localizations[EN-2491] - Fixed LineRenderer.SetPositions() throwing an error[EN-2683] - Fixed local rotation of child object when using transform.LookAt() on the parent transform ","version":"Next","tagName":"h3"},{"title":"Version 3.1.0 - February 14th, 2022​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#version-310---february-14th-2022","content":"","version":"Next","tagName":"h2"},{"title":" New Features ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-new-features--20","content":"[EN-2276] - Runtime Analysis 3.0: continuous Runtime Analysis for develop mode[EN-2676] - Runtime Analysis 3.0: UX improvements[EN-2673] - Added Shader Runtime Analysis for develop mode[EN-2644] - Added support for shader export in Unity 2021+[EN-2478] - Excluding/including assets in Size Breakdown[EN-2661] - All URP lightmodes that are not currently supported are ignored (check this table)[EN-2665] - Re-introducing Runtime Logging[EN-2670] - Removed MSBuild path from Luna window GUI for Mac[EN-2303] - Removed shaders that are not mentioned in ShaderVariantCollection[EN-2654] - Added notification for missing glyphs ","version":"Next","tagName":"h3"},{"title":" Fixes and improvements ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-fixes-and-improvements--23","content":"[EN-1147] - Fixed Input Y-Axis on Mouse Position and calculation for Screen Position Y-Axis[EN-2022] - Fixed the Luna temp folder opening after clicking on the Build Project button in the Playground tab[EN-2462] - Sprite.Create is working correctly[EN-2488] - Fixed UnityEngine.Input.GetAxis giving incorrect mouse values[EN-2666] - Fixed child Sprite not rendering when the parent has the Sorting Group component disabled - Sorting Group correctly includes TextMeshPro[EN-2672] - Fixed exporting assets from folders ending in Editor[EN-2611] - Fixed issue with local and global keywords with Unity 2020 and 2021 ","version":"Next","tagName":"h3"},{"title":"Version 3.0.0 - January 27th, 2022​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#version-300---january-27th-2022","content":"","version":"Next","tagName":"h2"},{"title":" New Features ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-new-features--21","content":"[EN-780] - Universal Render Pipeline and Shader Graph support[EN-2219] - Runtime Analysis 2.0[EN-2219] - Shader Variant Collector GUI[EN-2356] - Autofix for missing shader variants[EN-2543] - Runtime analysis includes mouse data by default[EN-2562] - Implemented basic operators between Vector3 and Vector2[EN-2588] - Button to copy User Token to clipboard[EN-2595] - Startup measurament with URL command[EN-2604] - Added building platform to LogDebugInfo[EN-2477] - Implemented asset preview window in Size Breakdown[EN-2410] - Implemented a connection between assets from Size Breakdown and assets from Unity[EN-2418] - Added settings for each asset in Size Breakdown[EN-2409] - Size Breakdown 2.0[EN-2534] - Implemented Camera Stacking[EN-2574] - Implemented Shader Runtime Analysis ","version":"Next","tagName":"h3"},{"title":" Fixes and improvements ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-fixes-and-improvements--24","content":"[EN-2232] - Fixed MSBuild path configuration error[EN-1926] - Fixed issue with Size Breakdown always taking the last known estimate[EN-1977] - Fixed Input.mousePosition returning Vector2 incorrectly[EN-2349] - Fixed SetPropertyBlock not applying values to materials[EN-2511] - Fixed issue with the incorrect image component within a world space canvas[EN-2563] - Fixed errors when InputField is in an empty scene[EN-2576] - Fixed MV debug view styles in 3rd party games[EN-2586] - Fixed Texture.ReadPixel[EN-2600] - Fixed incorrect CanvasGroup.alpha in some hierarchy cases[EN-2607] - Fixed incorrect sun source[EN-2624] - Fixed issue with Texture applying previous compression settings[EN-2647] - Fixed issue where assets override do no get values from default settings of current asset type[EN-2284] - Added improvements to shader variants collection[EN-2504] - Screen space canvas gets updated during camera rotation[EN-2544] - Nested overlay canvases are rendered in the correct order[EN-2575] - Image.SetNativeSize works correctly with textures from spriteAtlas[EN-2623] - Added warning dialogs for some of the build buttons ","version":"Next","tagName":"h3"},{"title":"Version 2.10.0 - December 17th, 2021​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#version-2100---december-17th-2021","content":"","version":"Next","tagName":"h2"},{"title":" New Features ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-new-features--22","content":"[EN-1742] - Added support for Unity 2020.3[EN-2499] - Added Project Diagnostics log warning for incompatible TMP version use[EN-2011] - Added support for default literal ","version":"Next","tagName":"h3"},{"title":" Fixes and improvements ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-fixes-and-improvements--25","content":"[EN-732] - Fixed Time.fixedTime time providing wrong results[EN-1910] - Fixed UnityEngine.UI.Image radial fill with padding having incorrect offsets[EN-2510] - Fixed issue where a &quot;/&quot; character in an app name creates a submenu in the plugin upload menu[EN-2500] - Fixed Sprite.rect being scaled with physical texture size when it shouldn't be[EN-2521] - Fixed audio issue where occasionally there is a race condition between soundInstance.onended and resume()[EN-2522] - Fixed custom defines not working in Luna[EN-2523] - Fixed resharper issue with type casting[EN-2528] - Fixed particles having incorrect rotations in billboard mode[EN-2532] - Fixed sprite create failing due to missing textureRectBeforeResize in attributes[EN-2535] - Fixed particle system stretched billboard containing incorrect UV values ","version":"Next","tagName":"h3"},{"title":"Version 2.9.0 - December 2nd, 2021​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#version-290---december-2nd-2021","content":"","version":"Next","tagName":"h2"},{"title":" New Features ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-new-features--23","content":"[EN-2270] - Implemented Unity defines[EN-2482] - Added possibility to get the build's platform[EN-2497] - Implemented &quot;Alpha from Grayscale&quot; support for textures ","version":"Next","tagName":"h3"},{"title":" Fixes and improvements ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-fixes-and-improvements--26","content":"[EN-2453] - Fixed Image Raycast when alphaHitTestMinimumThreshold is above 0[EN-2485] - Added missing AnimationCurve enums to LunaDevelopment[EN-2493] - Bridge: Fixed LayerMask compound assignments ","version":"Next","tagName":"h3"},{"title":"Version 2.8.0 - November 17th, 2021​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#version-280---november-17th-2021","content":"","version":"Next","tagName":"h2"},{"title":" New Features ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-new-features--24","content":"[EN-2457] - Implemented GetPixelBillinear API[EN-2464] - Special folders from external sources can be filtered ","version":"Next","tagName":"h3"},{"title":" Fixes and improvements ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-fixes-and-improvements--27","content":"[EN-1517] - 'Auto-instantiate Prefabs' has been moved to the Advanced tab[EN-2472] - Improved texture.ToDataURI[EN-2448] - Fixed an error in the Quaternion computation[EN-2452] - Improved Particle system emission bursts ","version":"Next","tagName":"h3"},{"title":"Version 2.7.0 - November 9th, 2021​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#version-270---november-9th-2021","content":"","version":"Next","tagName":"h2"},{"title":" New Features ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-new-features--25","content":"[EN-2384] - Changed default assets encoding from base64 to base122 ","version":"Next","tagName":"h3"},{"title":" Fixes and improvements ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-fixes-and-improvements--28","content":"[EN-2377] - Implemented Animator.Play(int parameter)[EN-2415] - Implemented Animator.GetBehaviours()[EN-2400] - BoxCollider2D component updates shape values after changing its size or offset[EN-2406] - Fixed incorrect Mathf.SmoothStep result[EN-2411] - TrailRenderer property positionsCount returned 0 incorrectly ","version":"Next","tagName":"h3"},{"title":"Version 2.6.0 - October 20th, 2021​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#version-260---october-20th-2021","content":"","version":"Next","tagName":"h2"},{"title":" New Features ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-new-features--26","content":"[EN-2158] - Implemented UnityEngine.SortingGroup component[EN-2186] - Runtime Analysis - A tool that detects unused classes / modules in runtime and excludes them[EN-2262] - Choice in Playground tab to decide where in Playground to upload a build to[EN-2266] - Set Optimal Settings button (Size optimisation)[EN-2364] - Introduced WebP conversion for better texture compression performance ","version":"Next","tagName":"h3"},{"title":" Fixes and improvements ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-fixes-and-improvements--29","content":"[EN-2360] - Preloader background resizes to fit the screen[EN-2365] - Removed compression from default particle[EN-2383] - Memory usage is reduced by cleaning up unused data after serialization[EN-2209] - Fixed package built for Windows cannot be opened on macOS[EN-2285] - Fixed 'screen space camera' sub canvas are drawn incorrectly[EN-2322] - Fixed stubber stubs some of types generated by compiler[EN-2324] - Fixed failed patching of missing shader[EN-2325] - Fixed standard constructor parameters are not generated when stubbing[EN-2326] - Fixed stubber does not stub some of IAP SDK classes after compiling[EN-2346] - Fixed error appears after successfully uploading a build to Playground[EN-2350] - Fixed Character Controller collides with trigger colliders[EN-2358] - Fixed Obfuscator fails to correctly obfuscate a class where both PropName property and setPropName methods are presented[EN-2376] - Fixed on Firefox,OnTouchMoved was called before the first touch[EN-2263] - Fixed stubbing packages with namespace stub some extra types ","version":"Next","tagName":"h3"},{"title":"Version 2.5.0 - September 23rd, 2021​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#version-250---september-23rd-2021","content":"","version":"Next","tagName":"h2"},{"title":" New Features ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-new-features--27","content":"[EN-1532] Display confirmation on stub generation in 'Automatic stubbing' panel[EN-2296] Luna now updates fixture contacts after entity layer update ","version":"Next","tagName":"h3"},{"title":" Fixes and improvements ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-fixes-and-improvements--30","content":"[EN-2315] Fixed cases where stubber doesn't stub some of Facebook plugin types[EN-2311] Fixed cases where stubber doesn't generate base parameters for constructors[EN-2295] Fixed FileNotFound exceptions for Facebook SDK[EN-2261] Fixed incorrect stubbing for AdMob package[EN-2294] Fixed stubbing toggle for not stubbed SDK[EN-2277] Check the code generated by stubber for compilation possibility[EN-2302] Fixed physics issue where layer isn't applied if changed in runtime[EN-2293] Fixed invalid Raycast(...) result[EN-2312] Fixed case where disabled scenes became enabled ","version":"Next","tagName":"h3"},{"title":"Version 2.4.0 - September 9th, 2021​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#version-240---september-9th-2021","content":"","version":"Next","tagName":"h2"},{"title":" New Features ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-new-features--28","content":"[EN-2240] - Renderer.HasPropertyBlock implementation[EN-2273] - Make new scene in build settings enabled by default ","version":"Next","tagName":"h3"},{"title":" Fixes and improvements ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-fixes-and-improvements--31","content":"[EN-769] - int[][] or any other jagged array breaks export[EN-2048] - Fixed error when using the build hotkey(Cmd+Shift+E)[EN-2204] - Cinemachine, tracked object offset[EN-2260] - Incorrect order of startup events on mraid platforms[EN-2268] - Fixed problem where two cameras with common singleton script were removed instead of one[EN-2271] - Delegates with a Vector2 return type cause a Bridge error[EN-2281] - Missing DORestart() abstract method in DOTween ","version":"Next","tagName":"h3"},{"title":"Version 2.3.0 - August 25th, 2021​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#version-230---august-25th-2021","content":"","version":"Next","tagName":"h2"},{"title":" New Features ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-new-features--29","content":"[EN-1746] - DoTween PRO support[EN-2240] - Renderer.HasPropertyBlock implementation ","version":"Next","tagName":"h3"},{"title":" Fixes and improvements ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-fixes-and-improvements--32","content":"[EN-2212] - Fixed GetLightsData not taking into account missing visible lights for skyboxes[EN-2227] - Fixed particle system random spawning not working with zero seed[EN-2230] - Fixed incorrect Camera.pixelRect calculations[EN-2235] - Fixed particle sheet animation in sprite mode calculating incorrect frames[EN-2241] - Fixed DOTween Array.init length error caused when using DOPunch &amp; DOShake methods[EN-2243] - Fixed 'frame calculations' for Random Two Constant ","version":"Next","tagName":"h3"},{"title":"Version 2.2.0 - August 11th, 2021​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#version-220---august-11th-2021","content":"","version":"Next","tagName":"h2"},{"title":" New Features ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-new-features--30","content":"[EN-2194] - Project Diagnostics now groups logs of the same code together ","version":"Next","tagName":"h3"},{"title":" Fixes and improvements ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-fixes-and-improvements--33","content":"[EN-2170] - Shader Variant Optimisation - improved passing of shader keywords[EN-2188] - Increased accuracy of size breakdown[EN-1836] - Fixed RawImage UV rect causing the image to never be rendered in animations[EN-1943] - Fixed camera.orthographicSize changes in animations not affecting size[EN-1963] - Fixed camera cinemachine LookAt causing the camera to shake[EN-2190] - Fixed image position in animation going to an incorrect position with some portrait resolutions[EN-2191] - Fixed issue when removing a collider from a rigidbody causes its CoM to reset even if it was manually set by the user[EN-2199] - Fixed Physics.ComputePenetration ignoring centers of BoxCollider / SphereCollider / CapsuleCollider[EN-2207] - Fixed Physics.ComputePenetration returning invalid collision data if one of the colliders is trigger[EN-2226] - Fixed missing isRigidbody2D field in DOTween dll ","version":"Next","tagName":"h3"},{"title":"Version 2.1.0 - July 28th, 2021​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#version-210---july-28th-2021","content":"","version":"Next","tagName":"h2"},{"title":" New Features ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-new-features--31","content":"[EN-2049] - Implemented TryGetComponent[EN-2117] - Implemented AnimationCurve.AddKey ","version":"Next","tagName":"h3"},{"title":" Fixes and improvements ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-fixes-and-improvements--34","content":"[EN-2178] - Diagnostics log view optimisation[EN-2161] - Fixed Sprite.Create incorrect pivot behaviour[EN-2127] - Fixed edge cases in Vector3 / Quaternion api producing NANs[EN-2187] - Fixed StartGame function issue on the Mintegral platform[EN-2023] - Fixed Text Generator providing wrong info on line height[EN-2110] - Fixed linear to gamma incorrect calculations[EN-2149] - Fixed LineRenderer loop corrupted mesh generation (counter-clockwise, corner vertices)[EN-2159] - Fixed errors when building WebGL build from unity[EN-2167] - Fixed issue with particles sprite sheet ignoring sprite transparent offset[EN-2177] - Fixed issue with double clicking file not showing location in Unity on Windows ","version":"Next","tagName":"h3"},{"title":"Version 2.0.0 - July 15th, 2021​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#version-200---july-15th-2021","content":"","version":"Next","tagName":"h2"},{"title":" New Features ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-new-features--32","content":"[DEVX-175] Project Diagnostics 2[EN-1991] Chinese Localization[EN-2054] Implemented ability to open files from plugin tree-view in Unity editor[EN-1873] Implemented AnimationOverrideController ","version":"Next","tagName":"h3"},{"title":" Fixes and improvements ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-fixes-and-improvements--35","content":"[EN-2065] Stubber now works correctly with constants[EN-2108] Stubber now stubs unrelated namespaces[EN-1984] Fixed StartCoroutine(string) API[EN-2060] Added ability to stop coroutines via assigned IEnumerator[EN-2078] NormalizedTime fix in Animator.Play method[EN-2094] Fixed issue with Stubber where generic types which consist of other generic types were not working[EN-2095] Fixed issue with Stubber implementation error when some types attempt to implement an IEnumerator type[EN-2109] Fixed tiled sprite being culled out if original bounds is not in camera frustum ","version":"Next","tagName":"h3"},{"title":"Version 1.13.0 - July 2nd, 2021​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#version-1130---july-2nd-2021","content":"","version":"Next","tagName":"h2"},{"title":" New Features ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-new-features--33","content":"[EN-1929] Grey out folders that don't contain any relevant content in tree-view tabs[EN-2012] Implemented sound timeline cropping tool ","version":"Next","tagName":"h3"},{"title":" Fixes and improvements ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-fixes-and-improvements--36","content":"[EN-2042] Fixed asset replacement not working for certain playables[EN-1945] Physics2D.OverlapBox() implementation was missing ","version":"Next","tagName":"h3"},{"title":"Version 1.12.0 - June 17th, 2021​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#version-1120---june-17th-2021","content":"","version":"Next","tagName":"h2"},{"title":" New Features ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-new-features--34","content":"[EN-1980] Added Depth Texture support[EN-1994] Validation for install links[EN-1958] Implemented SystemInfo API ","version":"Next","tagName":"h3"},{"title":" Fixes and improvements ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-fixes-and-improvements--37","content":"[EN-2015] Fixed &quot;Bounds.SetMinMax doesn't exist&quot; error[EN-2006] Fixed issue where excluding a script by the context menu wouldn't update the excludes list in plugin window[EN-1979] skinnedMeshRenderer.SetBlendShapeWeight now sets weight divided by 100[EN-2027] Fixed incorrect Multipass Shader export[EN-2005] Added check to ensure that all Vector / Matrix / Quaternion components are numeric in DEBUG mode ","version":"Next","tagName":"h3"},{"title":"Version 1.11.0 - June 4th, 2021​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#version-1110---june-4th-2021","content":"","version":"Next","tagName":"h2"},{"title":" New Features ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-new-features--35","content":"[DEVX-88] - Introduce list/array PG field[DEVX-163] - Improved Luna project browser ","version":"Next","tagName":"h3"},{"title":" Fixes and improvements ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-fixes-and-improvements--38","content":"[EN-1790] - SkinnedMeshRenderer with empty bones throws exception[EN-1806] - Invoking UnityEvent with parameter[EN-1986] - Issues with layer masks and shapecasts[EN-1989] - Invoke(&quot;String&quot;, float time) repeats using time as interval instead of delay[EN-1990] - Settings carry over from different individual settings and override them[EN-1995] - Changing params of disabled collider results in runtime error[EN-1997] - Shapecasting into triggers can result in incorrect hit data[EN-1999] - Fix events off for some classes ","version":"Next","tagName":"h3"},{"title":"Version 1.10.1 - May 20th, 2021​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#version-1101---may-20th-2021","content":"","version":"Next","tagName":"h2"},{"title":" Fixes and improvements ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-fixes-and-improvements--39","content":"[EN-1975] - Default format set texture to png32 but it must depends on original format[EN-1931] - Fixed per collection settings not applying for multiple selected items ","version":"Next","tagName":"h3"},{"title":"Version 1.10.0 - May 18th, 2021​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#version-1100---may-18th-2021","content":"","version":"Next","tagName":"h2"},{"title":" New Features ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-new-features--36","content":"[EN-1881] - Implemented ParticleSystem.TextureSheetAnimation.Sprites mode[EN-1952] - Implemented API for QualitySettings[EN-1933] - Implemented Camera.CalculateObliqueMatrix API[EN-1949] - Implemented Sprite.name[EN-1954] - Implemented Collision.GetContact[EN-1955] - Implemented Collider2D.GetContacts(ContactPoint2D[] contacts)[EN-1957] - Implemented DownloadHandlerTexture.GetContent()[DEVX-120] - Add 'Develop Build' button to the Unity Editor ","version":"Next","tagName":"h3"},{"title":" Fixes and improvements ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-fixes-and-improvements--40","content":"[EN-1895] - Blend tree between sprite animations[EN-1931] - Fixed so per collection settings now apply for multiple selected items[EN-1947] - Files from selected folder in force-include will now add to export[EN-1968] - Cancelling Browse for relative path window in external JS no longer goes to URI error[EN-1969] - Fixed issued when changing compression settings to default[EN-1971] - Fixed issue concerning multiple fields serialized with the same name ","version":"Next","tagName":"h3"},{"title":"Version 1.9.0 - May 3rd, 2021​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#version-190---may-3rd-2021","content":"","version":"Next","tagName":"h2"},{"title":" New Features ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-new-features--37","content":"[EN-1927] - AudioSource.time API[EN-1930] - ParticleSystem.maxParticles API ","version":"Next","tagName":"h3"},{"title":" Fixes and improvements ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-fixes-and-improvements--41","content":"[EN-1896] - Canvas group alpha not applied correctly on text components[EN-1903] - Camera invViewProj not updated[EN-1907] - Animation wrapMode loop doesn't work[EN-1909] - Animation gets animationClips from Animator if GameObject has both Animator and Animation components[EN-1914] - StreamingAssets folder doesn't add to zip archive on export[EN-1915] - SkinnedMeshRenderer with mesh with submodules doesn't render[EN-1917] - Child particle system renderer is null[EN-1925] - Changing SpriteRenderer size at run-time has no effect[EN-1932] - Wrong settings in sound's currentTime[EN-1934] - Camera.projectionMatrix throws error ","version":"Next","tagName":"h3"},{"title":"Version 1.8.0 - April 20th, 2021​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#version-180---april-20th-2021","content":"","version":"Next","tagName":"h2"},{"title":" New Features ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-new-features--38","content":"[EN-1729] - Linear Fog[EN-1825] - Playable Plugin window localisation: Russian Language[EN-1870] - AddComponent Canvas[EN-1880] - Collision.impulse API[EN-1885] - Added the ability to exclude the Particle system from builds[EN-1893] - Added “Bounce Threshold” setting from Unity ","version":"Next","tagName":"h3"},{"title":" Fixes and improvements ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-fixes-and-improvements--42","content":"[EN-1740] - TMP Text no longer invisible when animating scale in a canvas group whose alpha is &lt;1[EN-1882] - Selecting files for Preload Icon/Background now generates a relative path instead of an absolute one[EN-1883] - Fixed SkinnedMeshRenderer.RootBone aabb calculation[EN-1884] - Removing RigidBody in OnCollisionExit callback can no longer cause issues[EN-1879] - Ensure that all newly created joints have valid default valuesFixed issue where audio continues playing even if you set the app to background or lock the device ","version":"Next","tagName":"h3"},{"title":"Version 1.7.0 - April 6th, 2021​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#version-170---april-6th-2021","content":"","version":"Next","tagName":"h2"},{"title":" New Features ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-new-features--39","content":"[EN-329] - SpriteRenderer DrawMode Tiled (Continuous)[EN-1246] - Texture2D SetPixel and GetPixel APIs[EN-1849] - SkinnedMeshRenderer rootBone usage implementation ","version":"Next","tagName":"h3"},{"title":" Fixes and improvements ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-fixes-and-improvements--43","content":"[EN-1705] - UI Canvas sort order improvement[EN-1846] - Disabling of GameObject disables ParticleSystemRenderer[EN-1853] - AsyncOperation UnloadUnusedAssets creates an extra callback[EN-1856] - IsPlaying value doesn't turn false for Animations after finishing AnimationState[EN-1860] - ResizeCanvas event remove wrong callback[EN-1868] - Collision normals are inverted in Luna[EN-1869] - Setting negative maxAngularVelocity breaks physics[EN-1201] - ParticleSystem optimisations[EN-1769] - Luna plugin package size reduction ","version":"Next","tagName":"h3"},{"title":"Version 1.6.0 - March 23rd, 2021​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#version-160---march-23rd-2021","content":"","version":"Next","tagName":"h2"},{"title":" New Features ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-new-features--40","content":"[EN-1807] - Implemented SpriteMask ","version":"Next","tagName":"h3"},{"title":" Fixes and improvements ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-fixes-and-improvements--44","content":"[EN-1826] - Fix undefined FbPlayableAd error for local builds[EN-1836] - Animation - Animating RawImage UV rect causes the image to never be rendered[EN-1798] - Remove .meta files from export in StreamingAssets[EN-1809] - Respect force exclude in the Assets section, even if Steaming Assets is included in the export type settings[EN-1824] - Stubber can rebuild assemblies without UnityEditor defines to avoid excluding such assemblies from generating[EN-1829] - Fix limits for HingeJoints ","version":"Next","tagName":"h3"},{"title":"Version 1.5.1 - March 9th, 2021​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#version-151---march-9th-2021","content":"","version":"Next","tagName":"h2"},{"title":" Fixes and improvements ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-fixes-and-improvements--45","content":"[EN-1762] - Auto-Instantiate Prefabs no longer breaks prefab loading from Resource folder[EN-1763] - Animation event function no longer invokes with incorrect argument[EN-1781] - ScreenSpaceCamera without a camera changes to ScreenSpaceOverlay not as fallback[EN-1801] - Skybox no longer has incorrect faces[EN-1817] - No longer missing fade animation on pressed buttons ","version":"Next","tagName":"h3"},{"title":"Version 1.5.0 - March 4th, 2021​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#version-150---march-4th-2021","content":"","version":"Next","tagName":"h2"},{"title":" New Features ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-new-features--41","content":"[EN-1778] - Google SSO auth ","version":"Next","tagName":"h3"},{"title":" Fixes and improvements ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-fixes-and-improvements--46","content":"[EN-1789] - UnityEngine.Camera.layerCullDistances API[EN-1793] - Fixed resource failed when none were exported[EN-1784] - Fixed loading scene failed due to missing canvasRenderer in component[EN-1790] - Fixed SkinnedMeshRenderer with empty bones throws exception[EN-1783] - Blend shape accessing motion without checking it's existence[EN-1795] - Patching missing support for TMP SubMeshUI ","version":"Next","tagName":"h3"},{"title":"Version 1.4.0 - February 22nd, 2021​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#version-140---february-22nd-2021","content":"","version":"Next","tagName":"h2"},{"title":" New Features ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-new-features--42","content":"[EN-1757] - Font texture resolution override in LunaWindow[EN-1766] - Allow to create PhysicsMaterial via script[EN-1767] - Fix extending UnityEngine / System classes by classes with one-letter properties ","version":"Next","tagName":"h3"},{"title":" Fixes and improvements ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-fixes-and-improvements--47","content":"[EN-1721] - Stubber now generates all inherited from stubbed class types with empty body[EN-1734] - Font size improvement[EN-1765] - Calling IsTrigger on disabled gameobject collider throws an exception[EN-1770] - GameObject is not picking up clicks if disabled on start[EN-1771] - Removed requirement for PNGQuant permission on Mac machines[EN-1773] - TypeError - Image.SetNativeSize returns nativeSize as undefined[EN-1774] - Animator SetTrigger crashes[EN-1775] - Off Screen Input Field Stretches play area[EN-1776] - Clicking on errors in Diagnostics doesn't open script on Windows[EN-1779] - Diagnostics shows warnings related to luna's scripts and generated in runtime AssemblyAttributes ","version":"Next","tagName":"h3"},{"title":"Version 1.3.0 - February 9th, 2021​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#version-130---february-9th-2021","content":"","version":"Next","tagName":"h2"},{"title":" New Features ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-new-features--43","content":"[EN-568] - ParticleSystem.lifeTime setter implementation.[EN-874] - If DEBUG in JS[EN-1689] - Remove all legacy and unused code from engine[EN-1697] - Implement unity correct skybox mesh[EN-1711] - Add ability to exclude parts of luna engine from builds[EN-1725] - Fps debug counter ","version":"Next","tagName":"h3"},{"title":" Fixes and improvements ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-fixes-and-improvements--48","content":"[EN-1699] - Animation event issue at last frame[EN-1732] - Dynamic body with FreezePosition along all axes ignores collision[EN-1733] - UI graphic component inheritance[EN-1739] - OnTriggerEnter doesn't work when it's an IEnumerator instead of a void[EN-1743] - Time.deltaTime doesn't change automatically to Time.fixedDeltaTime value in fixedUpdate[EN-1745] - Implement missing API for Spine 3.6[EN-1747] - LunaWindow scenes are paired with UnityBuildScenes[EN-1749] - Transparent UI.Image don't catch clicks[EN-1750] - Blend shapes ignore weighs[EN-1751] - User can get error message in unity after build or login[EN-1754] - Get System.IO.DirectoryNotFoundException when login in luna with deleted LunaTemp folder ","version":"Next","tagName":"h3"},{"title":"Version 1.2.0 - January 25th, 2021​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#version-120---january-25th-2021","content":"","version":"Next","tagName":"h2"},{"title":" New Features ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-new-features--44","content":"[EN-887] - Added Build cancellation button[EN-1685] - Implement Pixels Per Unit Multiplier in UI Image[EN-1696] - Added support for Blend shape targets containing dots ","version":"Next","tagName":"h3"},{"title":" Fixes and improvements ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-fixes-and-improvements--49","content":"[EN-213] - Improved Animation access to AnimationState[EN-1624] - Warning added for excluded Animations[EN-1670] - Removed msbuild checkbox from settings[EN-1676] - Quaternion.AngleAxis improvements[EN-1677] - Vertical alignment was shifted down when using BestFit and two lines[EN-1681] - Incorrect deserialization of Behaviour.enabled for some components[EN-1682] - ParticleSystem with Null material crashes[EN-1683] - Property m_IsActive inside animation was undefined[EN-1703] - Layout element with text had incorrect transform values in Layout group[EN-1668] - Generic case of invoking methods with overrides from unity event UI ","version":"Next","tagName":"h3"},{"title":"Version 1.1.1 - January 6th, 2021​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#version-111---january-6th-2021","content":"","version":"Next","tagName":"h2"},{"title":" New Features ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-new-features--45","content":"[EN-1617] - Rigidbody#ClosestPointOnBounds API[EN-1618] - Rigidbody#AddExplosionForce API[EN-1619] - Collider#ClosestPointOnBounds API[EN-1623] - Improved non-uniform scale support for physics[EN-1624] - Warning on excluded Animations[EN-1665] - Implemented Collider2D.IsTouching and Physics2D.IsTouching ","version":"Next","tagName":"h3"},{"title":" Fixes and improvements ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-fixes-and-improvements--50","content":"[EN-1615] - Index buffer now uses UInt16 for indices[EN-1625] - Stopped changing objects' layers in WheelCollider[EN-1630] - Animator state's time scale set to 0 during transition no longer leads to runtime NAN exception[EN-1641] - Animator no longer exits from state without &quot;ExitTime&quot; checkbox[EN-1647] - Animator state write default was ignored[EN-1654] - SetTrigger called from UI button fails fix[EN-1655] - Fixed failing on Interface serialization[EN-1661] - Export no longer fails in Unity 2020.2[EN-1664] - Fixed incorrect UI elements after screen resize[EN-1666] - Skinned mesh patch for specific shaders no longer produce world offset[EN-1667] - Correct device.screenRatio usage for UI ","version":"Next","tagName":"h3"},{"title":"Version 1.1.0 - December 9th, 2020​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#version-110---december-9th-2020","content":"","version":"Next","tagName":"h2"},{"title":" Fixes and improvements ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-fixes-and-improvements--51","content":"[EN-1326] Fix resolution value for correct sizedelta of canvas with camera screen space[EN-1329] Fix math inside GraphNode[EN-1352] Animator Set Bool and Set Trigger should toggle each other[EN-1600] Animator.Rebind[EN-1608] Prevent animator from excessively recalculating transforms[EN-1609] Fix RectTransform math for negative and non-uniform scales[EN-1610] Changing Unity Import Settings causing Luna Plugin UI to reset[EN-1611] Image.Set native size taking in account pixel ratio[EN-774] Animation clips.Add[EN-1048] Recover Sanity/SpritePacker test Sprite/SpriteAtlas[EN-1333] GetComponentInChildren returns null if parent if disabled but child is enabled[EN-1349] Inconsistent spawning behaviour with instantiate prefab and changing original object[EN-1279] Improved logic for getCorrectedWorldMatrix for UI with 0 z-scale &lt;&lt; better[EN-1286] Non-uniform scale breaks rotation[EN-1599] Fix prefab instantiation in parents with zero scale ","version":"Next","tagName":"h3"},{"title":" New Features ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-new-features--46","content":"[LPG-1051] Added support for custom events[EN-1606] Application.systemLanguage implementation[EN-1612] Double clicks on errors in diagnostics now links to code ","version":"Next","tagName":"h3"},{"title":"Version 1.0.1 - November 24th, 2020​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#version-101---november-24th-2020","content":"","version":"Next","tagName":"h2"},{"title":" Fixes and improvements ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-fixes-and-improvements--52","content":"[EN-1325] Game object instantiated in position &amp; rotation or in world space with parent had its transform wrong in Awake and OnEnable callbacks[EN-1318] During sort we take in account collider i.e. hit as a required condition to participate in sorting[EN-1340] Rebuild collider when &quot;convex&quot; flag is changed &amp; more complex empty mesh check[EN-1302] Bug with 2d object instantiation at position[EN-1320] Add default anchored position initialisation[EN-1328] Color equality comparison fix[EN-1044] Check that visibleLight are not null or undefined.[EN-1323] Animation default material properties fixed[EN-1330] Fixed local position was not animated[EN-1334] Offsets for blend shape frame indices[EN-1321] Fixed issue with size breakdown if assets export failed ","version":"Next","tagName":"h3"},{"title":" New Features ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-new-features--47","content":"[EN-1221] Text Mesh Pro 3 support[EN-1263] Platform effector 2D implementation[EN-1324] URP time added[EN-1207] Exclude Hidden shader from log warnings[EN-1207] Missing material behaviour as in Unity[EN-1247] Implemented LineRenderer.SetVertexCount API.[EN-1331] Missing sprite warning[EN-1266] Mixed sprite API's implementation ","version":"Next","tagName":"h3"},{"title":"Version 1.0.0 - November 5th, 2020​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#version-100---november-5th-2020","content":"","version":"Next","tagName":"h2"},{"title":" Fixes and improvements ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-fixes-and-improvements--53","content":"[EN-1199] Reviewed API of standard types like Vector, Matrix, Quaternion, Bounds, Color etc[EN-1183] VideoPlayer loopPointReached event problem[UN-213] Build size accuracy improvements[EN-1239] 2d\\3d physics raycasters issues[EN-1226] Unity Events. Static values in method didn't work[EN-1260] Transform did not reset rotation when direction was set to zero[EN-1243] Getting parent from child game object in prefab was returning null[EN-1252] Transform.Translate relative to self issue[EN-1249] Default value for include inactive was true in GetComponentInChildren[EN-1232] Changing the sprite of SpriteRenderer didn't update AABB[UN-160] Export was silently crashing if inappropriate field marked as PlaygroundAsset.[TN-46] Physics2D.Linecast issue ","version":"Next","tagName":"h3"},{"title":" New Features ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-new-features--48","content":"[UN-185] UI refresh for the Playable plugin interface[EN-1226] Implemented blend shapes[EN-XXX] Added basic asset bundles support (no Addressables)[EN-XXX] UI layouts, masks, hierarchy, interfaces - implementations, improvements and optimizations[EN-1244] Implemented EventTrigger[EN-XXX] Implemented InputField[EN-XXX] Supported tags in texts[EN-1124] Added view alignment mode for lines and trails[EN-1256] Integrated DOTween plugin. No more need to replace dll by source code[EN-1269] Added feature to auto infer collider params from MeshFilter and MeshRenderer[UN-150] Added streaming assets export[EN-1223] Added auto-disabling cache for Develop build ","version":"Next","tagName":"h3"},{"title":"Version 0.8.4 - September 16th, 2020​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#version-084---september-16th-2020","content":"","version":"Next","tagName":"h2"},{"title":" Fixes and improvements ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-fixes-and-improvements--54","content":"[EN-1202] Arrays of objects with null values were being missed[EN-1200] Prevent joint's rows from being positional[EN-1186] Scene is overlit in comparison with Unity[EN-1185] Skinned mesh renderer normals in shader patched incorrectly[EN-1181] RawImage animation sync fix[EN-1184] Fix UnityEvent invocation without a method name[EN-1172] TextMesh Pro 2.0.0 multiline was missing lines[EN-1203] Optimisation of Bridge that allows passing structs as a reference, evading allocation ","version":"Next","tagName":"h3"},{"title":" New Features ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-new-features--49","content":"[EN-1164] Sentry JS SDK was added to develop builds to improve error logging and support[EN-1049] UnityEngine.Physics.Linecast API[EN-1195] Texture SetPixels API[UN-168] Added Tencent as a playable export platform[EN-1192] Adding implementation of missed Maths API's.[EN-1180] Added Animator StateMachineBehavior[EN-1151] Added logfile (LunaTemp/luna.log) with detailed logs from the build process ","version":"Next","tagName":"h3"},{"title":"Version 0.8.3 - August 25th, 2020​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#version-083---august-25th-2020","content":"","version":"Next","tagName":"h2"},{"title":" Fixes and improvements ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-fixes-and-improvements--55","content":"[EN-742] Reviewed ticks to provide stable 1/60 dt first 2 frames[EN-1116] UnityEvent.Invoke, providing argument does not override serialised argument[EN-1128] Cast MonoBehaviour as behaviour return null[EN-1130] Non-active scene popup window appears only after all resources are exported[EN-1133] Fixing 'timeScale less than 0' issue[EN-1134] Moving audio volume change callback to post-initialization phase[EN-1141] Fix V and VP matrices[EN-1142] Folder is not deleted with current namespace when user remove field from list[EN-1144] Fix execution order component IDs[EN-1157] Camera.rect was not clamped in screen in some setups[EN-1162] Serialised Camera.targetTexture was not available from scripts[EN-1163] UnityComponent callbacks reorganization[EN-1173] Fix Object.Instantiate( Object, Transform, bool) returning prefab instead of instantiated object ","version":"Next","tagName":"h3"},{"title":" New Features ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-new-features--50","content":"[UN-147] Added login screen to Playable Plugin UI in Unity[EN-762] Added support for basic CharacterController[EN-1140] ParametersTrigger, TransitionsAnyState, AnimatorUpdateMode[EN-1145] Adding missed Matrix4x4 APIs[EN-1150] ColorPropertyIndex lookup, updating scope version[EN-1153] Physics#autoSimulate and Physics#simulate APIs[EN-1154] Support for material swap in animation[EN-1156] Updating params should not interrupt transitions &amp;&amp; Transitions in the same frame[EN-1159] Added missed fields for time settings[EN-1161] Add second round of convex approximation in order to support zero scale[EN-1166] Animator material interaction optimisation[EN-1170] Optimisation: keys interpolation caching, material interaction optimisation[EN-1165] Support for blend tree orphan events and event handling ","version":"Next","tagName":"h3"},{"title":"Version 0.8.2 - August 2nd, 2020​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#version-082---august-2nd-2020","content":"","version":"Next","tagName":"h2"},{"title":" Fixes and improvements ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-fixes-and-improvements--56","content":"[EN-1102] Change wheel collider instantiation[UN-161] Fixed isPlaying for Video Player component[EN-1132] Monobehavior null check now takes into account destroyed object[EN-1136] Finding only enabled nodes by tag[EN-1137] Collider2D.sharedMaterial fix[EN-1138] UnityEngine.RawImage texture was not properly set for rendering[EN-1135] Workaround for precision issues in Vector3.normalize[EN-1129] CCD: removed all convex pieces of the proxy whose collisions are ignored[EN-1139] Ability to Compare Faux Bodies ","version":"Next","tagName":"h3"},{"title":" New Features ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-new-features--51","content":"[EN-1126] Added Rigidbody.freezeRotation API[EN-613] Added SetGlobalTexture, SetGlobalVectorArray[UN-161] Added AdColony export platform ","version":"Next","tagName":"h3"},{"title":"Version 0.8.1 - July 17th, 2020​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#version-081---july-17th-2020","content":"","version":"Next","tagName":"h2"},{"title":" Fixes and improvements ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-fixes-and-improvements--57","content":"[EN-1119] Removed _dirtyLocalEulerAngles flag[EN-1105] Prevent the generation of mipMaps if &quot;No MipMaps&quot; set in texture settings[EN-1042] Fixed SetAsLastSibling function to correct reparenting call[EN-1113] Pooled audio sources.stop for different source[EN-1112] TextGenerator measures text size including tags[EN-1103] Match default raycasts / shapecasts params with Unity[EN-1117] SpriteRenderer.color applied incorrectly for renderers with the same sprite[EN-1119] Make sure that parent entity is synchronised when synchronising child[EN-1122] Assets override wasn't saving from Luna UI[EN-1120] Ternary operator with structs struct = (condition) ? structa : structb bridge 17.9.9 update[EN-1118] Common audio manager proxy &amp; ironSource integration[EN-1125] Instantiate with parent now gets correct scale, position and rotation[EN-1005] Fixed issue with absolute path of external sources[EN-1111] Materials property returns null if material wasn't already set[EN-1123] No limits value for image FillAmount[EN-925] Fixed issue with multiple renderers on same object[EN-939] Particles fix: BoundingBox &amp; rendering in front of skinned mesh ","version":"Next","tagName":"h3"},{"title":" New Features ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-new-features--52","content":"[EN-1106] Animating material parameters ","version":"Next","tagName":"h3"},{"title":"Version 0.8.0 - July 7th, 2020​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#version-080---july-7th-2020","content":"","version":"Next","tagName":"h2"},{"title":" Fixes and improvements ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-fixes-and-improvements--58","content":"[UN-153] Added text input for user Scripting Defines[EN-1084] Fix relationship between interpolation, timescale and autoSyncTransforms[EN-1079] UI.Text fontStyle fix[EN-814] Revised PNG compression tools[EN-1081] code:bundle command was not working without previous steps and empty LunaTemp[TOOL-104] New FontBM version with fix for win machines[EN-1098] GrabPass for some resolutions caused WebGL errors[EN-1087] Removed excessive energy from positional constraints and make ContactDetails monimorphic[EN-1087] Mark some joint's rows as positional[EN-1087] Move breakForce / breakTorque to base joint dto class to match Unity's hierarchy[EN-1051] Make the relationship between constraints and AddTorque / AddForce the same as in Unity[EN-1086] Increase speculative CCD energy loss and amend some constraints[EN-1085] Build collisionAABB by rotating it around COM rather that the origin[EN-1075] Improve friction calculation, simulation stability &amp; performance[EN-619] Missing mesh for SkinnedMesh no longer breaks startup ","version":"Next","tagName":"h3"},{"title":" New Features ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-new-features--53","content":"[EN-715] Added Project Compilation window[UN-154] Added Automatic Stubbing feature[UN-156] Added version check to Plugin for update notifications[EN-1107] Add VideoPlayer SetDirectAudioMute method[UN-141] Move videoPlayerComponent assigning to constructor[UN-141] Add Animation and VideoPlayer constructors[EN-1080] Fix video resuming on iOS[UN-159] Add Add TikTok platform languages[UN-159] Add supported languages option[EN-1082] Added rendering APIs: Material.SetPass DrawMeshImmediate GetPixels[EN-1101] Added support for flat convex meshes ","version":"Next","tagName":"h3"},{"title":"Version 0.7.3 - June 15th, 2020​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#version-073---june-15th-2020","content":"","version":"Next","tagName":"h2"},{"title":" Fixes and improvements ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-fixes-and-improvements--59","content":"[EN-1035] Material constructor parameters initialization fixed[EN-1038] UnityEngine.Object.Instantiate with parent now calls callbacks correctly[EN-1060] Shaders with multiple grabPasses support[EN-1037] TextGenerator verticalOverflow fixed. Added warning for case where there is not enough space.[EN-911] ParticleSystemRenderer.enabled fixed[EN-1055] LineRender exception after removing duplicates and leaving only one point[EN-1056] Default normals for Sprites fixed[EN-1058] Reparent parent object to it's child object stuck in infinite loop[EN-1063] Remove shadowcast passes as we they're currently not supported.[EN-1068] NPOT texture with wrapMode repeat now prints warning to console to quickly find such issues[EN-1069] Luna export window assets selected and saved to luna.json correctly[EN-1057] GrabPass performance improvement[EN-1026] Animation.AddClip fixed[EN-1027] Constructor init method injections for TypeParameter fields / auto-properties[EN-1050] Tweak some convex hull checks to be more / less accurate ","version":"Next","tagName":"h3"},{"title":" New Features ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-new-features--54","content":"[EN-1066] UnityEngine.Mathf ClosestPowerOfTwo implementation[EN-1064] UnityEvent with property fixed[EN-1053] Input touches API support[EN-1054] Support ConfigurableJoint targetVelocity/targetAngularVelocity ","version":"Next","tagName":"h3"},{"title":"Version 0.7.2 - June 7th, 2020​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#version-072---june-7th-2020","content":"","version":"Next","tagName":"h2"},{"title":" Fixes and improvements ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-fixes-and-improvements--60","content":"[EN-1034] Align Fixed Joint math with Configurable Joint and prevent warm-starting[EN-1039] Emit events after simulation and synchronisation to avoid physics state corruption &amp; use stored collision velocity from Goblin[EN-1040] EnableKeyword check fix[EN-1043] ParticleSystem memory allocation rework[EN-1041] setVectorStream improvement[EN-1045] Make SAT symmetric[EN-1047] Sprite.Create fix vertices, bounds, aabb ","version":"Next","tagName":"h3"},{"title":" New Features ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-new-features--55","content":"[EN-1047] Texture2D.ReadPixels (only RGBA32) ","version":"Next","tagName":"h3"},{"title":"Version 0.7.1 - June 1st, 2020​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#version-071---june-1st-2020","content":"","version":"Next","tagName":"h2"},{"title":" Fixes and improvements ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-fixes-and-improvements--61","content":"[EN-1024] Int parsing during missing key value in PlayerPrefs[EN-1023] Properly initialize some defaults in joints[EN-1023] 3D Physics: general performance enhancements and improvement to CCD performance[EN-1028] ParticleSystem breaks AABB for selected mesh[EN-1033] Removed per update trail checks ","version":"Next","tagName":"h3"},{"title":" New Features ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-new-features--56","content":"[EN-1030] Provide anti-aliasing field to Export Window[EN-1023] Implement improved cache for Meshes / ConvexHulls and add mesh versioning ","version":"Next","tagName":"h3"},{"title":"Version 0.7.0 - May 23rd, 2020​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#version-070---may-23rd-2020","content":"","version":"Next","tagName":"h2"},{"title":" Fixes and improvements ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-fixes-and-improvements--62","content":"[EN-1016] GL.Clear not affecting RenderTexture.active[EN-1002] Broken links in scripts.csproj on Windows[EN-1015] AddComponent init order[EN-1012] Fix Animator AnyState transitions to same state[EN-1011] Expanding string visitor context for explicit serialisation[EN-1007] Removing ASII symbols from strings during export[EN-1006] Treat collider with empty mesh like a collider with no mesh at all[EN-980] Fix scaled DeltaTime for particles[EN-981] Fix canvas children AABB position[EN-1001] Instantiate does not compensate scale with local scale[EN-974] Fix for load constructor being called twice for animation components[EN-939] Fixed missing light position access during dispatching light[EN-989] Static Colliders setAwake[EN-987] Improve PolygonCollider2D[EN-988] PolygonCollider2D turns to boxes if vertices are too close[EN-972] Prevent MeshColliders without mesh colliding with anything[EN-950] Account for CoM and triggers in CCD[EN-982] Updating mesh instance AABB during vertex update for mesh[EN-983] PlayerPrefs returns empty string instead of null for missing keys[EN-984] Invoking OnClick event without target results in warning instead of error and does not break flow[EN-966] Sync hierarchy of moved node instead of its parent[EN-962] Prevent re-generating meshes and convex hulls when relative transform of the collider changes[EN-957] AudioSource fixed typo[EN-954] Add second run of merging to ConvexHull and fix normal calculation when face has multiple vertices on the same line[EN-955] Stop incorrectly using attachedRigidbody from Collider class[EN-952] Particles don't use same uniforms as skinned meshes do[EN-948] Make EventEmitter emit events for each shape pairs individually[EN-940] Colliders no longer affecting up with constants[UN-141] Fix AnimationState enumerator issue (Export failure)[EN-968] Disabled hierarchy component do not sync in blend probes update ","version":"Next","tagName":"h3"},{"title":" New Features ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-new-features--57","content":"[EN-994] Use updated Goblin API[EN-965] Added AddTorque API[EN-1010] Exposing time property in ParticleSystem[EN-970] Exporting textures with default format option[EN-985] Image set native size[EN-977] Instantiate material[EN-976] Texture APIs: Texture.filterMode; Texture2D.Apply(bool, bool)[EN-986] TextAsset.bytes[EN-992] Implement VertexLM pass[EN-962] Increase amount of shift needed to cause collider re-calculation[EN-961] 3D Physics: Refactor collision cache &amp; other performance improvements[EN-969] Export AnimatorState.fullPathHash[EN-945] Rebuild Vendor Packages[UN-152] Auto-instantiate Prefabs Fix[EN-963] Prevent some constant properties from being changed[EN-964] Wheel collider APIs: WheelCollider.sprungMass, WheelCollider.suspensionSpring, WheelCollider.forwardFriction[EN-971] Add missing APIs to ContactPoint[EN-960] Animator.hasBoundPlayables API[EN-953] Add force override method with x,y,z signature[EN-951] Added Animator.speed ","version":"Next","tagName":"h3"},{"title":"Version 0.6.4 - April 27th, 2020​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#version-064---april-27th-2020","content":"","version":"Next","tagName":"h2"},{"title":" Fixes and improvements ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-fixes-and-improvements--63","content":"[EN-861] UnityWebRequest APIs: Delete, UnityWebRequestAsyncOperation[EN-854] Refactored Coroutines with additional tests[EN-823] UnityEngine.Bounds API update[EN-865] Missing entity on component set, it's safe to assume previous state as false[EN-898] Fixed race condition where video texture width and height is undefined[EN-897] Collision callback was being delivered to colliders in children of a GameObject which contains a Rigidbody - collision is now sent correctly up the hierarchy[EN-902] Wrong shader variants association with pass - Shader exports all variants for the same lightmode (previously, some variants were missing)[EN-705] Rewrite inertia &amp; centre of mass calculations to improve accuracy[EN-908] Audio source set to play on awake missed enabled game object check[EN-916] Canvas component now correctly updates after screen resize (or rotation)[EN-859] Modify Transform Callback[EN-919] Animator now resets on OnEnable[EN-270] Made improvements to GameObject.Find( &quot;Parent/Child&quot; )[EN-699] Defining layer fields in GraphNode[EN-766] Show warning when Destroy is called on a Transform[EN-900] Added missed parenting in GameObject constructors[EN-922] TextAssets export paths fixed to use ToLowerInvariant[EN-909] AsyncOperation is now inherited from YieldInstruction, CustomYieldInstruction is implemented[EN-863] External sources linking problem[EN-910] Missing reference to engine project in scripts.csproj when it is opened by VS[EN-924] Rvalue check worked incorrectly when we have return T as the result of a function[EN-928] Bounds didn't take in account null during equal check[EN-929] Unboxing number with cast to Int64 now works correctly[EN-869] Tweak solver &amp; PCM[EN-927] Sync colliders and bodies upon creation and support autoSyncTransform. Prevent autoSyncTransform for static colliders from happening before they are added to the adapter[EN-930] Picking up device width/height and invoking canvas resize on canvas enabled ","version":"Next","tagName":"h3"},{"title":" New Features ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-new-features--58","content":"[EN-914] Added char.CovertFromUtf32[EN-915] Delegate.CreateDelegate(Type, object, string)[EN-912] String.CompareOrdinal, String.LastIndexOf with StringComparison[EN-905] EscapeUriString and EscapeDataString implemented[EN-639] Multiple shader pass with same lightmodes[EN-420] SpriteRenderer.color with custom shader[EN-116] Joint2D.breakTorque[EN-48] AudioSource Unity Component[EN-868] Input keyboard[EN-903] Application.identifier[EN-857] Parse, tryParse now works with with NumberStyles.AllowHexSpecificator for int, byte, sbyte[EN-913] CultureInfo.GetCultureInfoByIetfLanguageTag ","version":"Next","tagName":"h3"},{"title":"Version 0.6.3 - April 7th, 2020​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#version-063---april-7th-2020","content":"","version":"Next","tagName":"h2"},{"title":" Fixes and improvements ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-fixes-and-improvements--64","content":"[UN-149] Fix config clearing on assets renaming[EN-767] Optimizing GetComponent/GetComponents[UN-146] Fix asset fields section serialization[LPG-338] Update &quot;Docs&quot; link in top-bar dropdown[EN-684] CCD improvements[EN-844] Fixed indexer typo in JsonConvert.js. TypeError in newtonsoft.json.js when deserializing some types[EN-846] TMP no longer ignores alpha from canvas[EN-845] UpdateStencilParameters and canvas order corrected[EN-831] Zero scale in transform leads to NaN-s in world rotation quaternion ","version":"Next","tagName":"h3"},{"title":" New Features ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-new-features--59","content":"[EN-116] TargetJoint2D[EN-687] EdgeCollider2dComponent.edgeRadius API[EN-848] Camera.Render implementation[EN-849] GetSubMesh ( int idx )[EN-850] GetIndices( int submesh, bool applyBaseVertex )[EN-851] Texture2D - GetPixels()[EN-852] Coroutine WaitForRealTime[EN-853] Camera.Render - GetSubMesh GetIndices Texture2D.GetPixels[EN-841] Implement VideoTexture. Add video resolution and frame rate[EN-691] Animator API implementation for Spine 3.6 ","version":"Next","tagName":"h3"},{"title":"Version 0.6.2 - April 1st, 2020​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#version-062---april-1st-2020","content":"","version":"Next","tagName":"h2"},{"title":" Fixes and improvements ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-fixes-and-improvements--65","content":"[EN-840] Plain Transform in UI hierarchy causes exception[EN-842] Problems with UI input and draw order fixed[EN-836] CanvasGroup low performance fix[EN-833] Color32 is not serialized correctly[EN-821] Mesh generation Mesh.setVertices fix[EN-827] Performance improvements for UI[EN-830] CanvasGroup applying properties from animation ","version":"Next","tagName":"h3"},{"title":" New Features ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-new-features--60","content":"[EN-116] SliderJoint2D[EN-116] FrictionJoint2D[EN-116] RelativeJoint2D[EN-790] Align joint's math with PhysX ","version":"Next","tagName":"h3"},{"title":"Version 0.6.1 - March 27th, 2020​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#version-061---march-27th-2020","content":"","version":"Next","tagName":"h2"},{"title":" Fixes and improvements ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-fixes-and-improvements--66","content":"[EN-825] Reparenting element without graphic with null canvas[EN-822] RectTransform.Rect was incorrect if grabbed from prefab[EN-818] UI was updating hierarchy multiple times per frame - fixed[EN-817] IsStencilEnabled - performance boost on any stencil operations - UI masks/custom shaders with stencil[EN-826] UIBehaviour OnDestroy removes Element manually and can cause crashes[EN-824] Simplification in GJK to account for iteration limit[EN-800] Int parse&amp;store that is used as for script execution order[EN-794] TryParseHtmlString API[EN-799] Transform.SetParent, null parent transform check for moving to scene root[EN-784] Improve method for obtaining minified property names to increase performance ","version":"Next","tagName":"h3"},{"title":" New Features ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-new-features--61","content":"[EN-116] WheelJoint2D ","version":"Next","tagName":"h3"},{"title":"Version 0.6.0 - March 23rd, 2020​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#version-060---march-23rd-2020","content":"","version":"Next","tagName":"h2"},{"title":" Fixes and improvements ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-fixes-and-improvements--67","content":"[EN-766] OnDestroy/OnDisable refactor[EN-788] Coroutine no longer called twice if started before Update ","version":"Next","tagName":"h3"},{"title":" New Features ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-new-features--62","content":"[EN-116] Physics2D shapecasts implemented[EN-103] Rigidbody interpolation modes implemented[EN-784] Physics engine minification to reduce Luna Engine footprint[EN-781] Detect raycast hit when ray hits edge of a triangle[EN-786] Vector2/Vector3 divide and multiply operators implemented ","version":"Next","tagName":"h3"},{"title":"Version 0.5.0 - March 16th, 2020​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#version-050---march-16th-2020","content":"","version":"Next","tagName":"h2"},{"title":" Fixes and improvements ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-fixes-and-improvements--68","content":"[EN-731] Catching video play errors in promise for HTMLMediaElement[EN-731] Add promise undefined check for video[EN-768] Exclude arrays with rank != 1 from serialization[EN-717] Callbacks and scene loading order[EN-770] Fixed incorrect assumptions for colliders' size on creating[EN-775] Fix TextMeshProUGui not rendering after reparenting[EN-777] UI Graphic unregister fails on destroy ","version":"Next","tagName":"h3"},{"title":" New Features ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-new-features--63","content":"[EN-632] ScrollRect and Slider implementation ","version":"Next","tagName":"h3"},{"title":"Version 0.4.4 - March 11th, 2020​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#version-044---march-11th-2020","content":"","version":"Next","tagName":"h2"},{"title":" Fixes and improvements ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-fixes-and-improvements--69","content":"[EN-717] SceneManagement now supports more complex scene situations, including additive loaded scenes[EN-761] Physics2D.Capsule shape collisions reworked[EN-116] ParticleSystem.TrailMaterial no longer rendered as a quad[EN-764] Set box collider size when invoked with AddComponent/RequireComponent[EN-761] Store all constraints in IterativeSolver, even if both bodies are kinematic[UN-145] Add checkbox to Luna UI for enable / disable additional generic check[EN-760] Unused transform node generation for renderers removed ","version":"Next","tagName":"h3"},{"title":"Added​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#added","content":"[EN-464] ConfigurableJoints are now supported![UN-144] Added option in Luna UI to include sources for compilation from outside sources ","version":"Next","tagName":"h3"},{"title":"Version 0.4.3 - March 6th, 2020​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#version-043---march-6th-2020","content":"","version":"Next","tagName":"h2"},{"title":" Fixes and improvements ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-fixes-and-improvements--70","content":"[EN-678] Multiple improvements for convex / non-convex meshes[EN-683] Added several wakeUps in setters[EN-634] Multiple performance improvements[EN-677] CollisionLayer fixes[EN-116] Mass Fixes[EN-116] Disabled bodies Callbacks fix[EN-116] Fixed raycast issue[EN-484] Correct transform positioning for Canvas hierarchy[EN-756] UI text vertical overflow[EN-757] Overlay Canvas sorting order[EN-676] Camera/World space Canvas rendering[EN-745] Revise UI EventSystem callback handling[EN-697] UI.Text is missing if initialized with empty string[EN-743] UnityEngine.Random.Range crash with min &gt; max and negative min-max fix[EN-710] Luna export window improvements[UN-143] Fix luna config clearing the after export[EN-747] Particles AABB calculation. Fixes unintended culling[EN-730] Particle sort order zdist based on abb fix[EN-746] Culling layer initialization fix[EN-728] Unscaled Time evaluation[EN-725] GC collect &amp; Graphics default constructor[EN-726] Text Asset ToString override[EN-727] UnityEvent invoke without args[EN-731] Catching play errors in promise for VideoPlayer[EN-706] Platforms size breakdown improved[EN-673] Add ability to disable PlayerPrefs from config[EN-718] TMPro.TextMeshPro hierarchy desync[EN-694] TextAsset.name field[EN-698] Array.Resize without duplication fix[EN-696] Texture.name missed on deserialization[EN-662] Matrix4x4 determinant and isIdentity API[UN-139] Fix Luna package minify errors[EN-341] Review Unity uniforms supplied to shaders[EN-585] Add/Get Components cleanup[EN-701] GridLayoutGroup calculated wrong alignment on main row/column[EN-693] Camera.rect clamping ","version":"Next","tagName":"h3"},{"title":" New Features ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-new-features--64","content":"[EN-744] Physics.IgnoreLayerCollision API[EN-477] Add missing physics APIs and overloads[EN-664] Physics.IgnoreCollision and centerOfMass APIs[EN-116] Concave polygons support[EN-116] Capsule Shape[EN-687] EdgeCollider2dComponent.edgeRadius API[EN-482] CanvasGroups support, including nested groups[EN-679] EventSystem.current.IsPointerOverGameObject API[EN-631] Add implementation of GetTransposed() and FlipLayoutAxes()[EN-721] Added support for Video.VideoSource.Url ","version":"Next","tagName":"h3"},{"title":"Version 0.4.2 - January 29th, 2020​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#version-042---january-29th-2020","content":"","version":"Next","tagName":"h2"},{"title":" Fixes and improvements ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-fixes-and-improvements--71","content":"[EN-674] LineRenderer correct rendering after transform changes[EN-665] LineRenderer.Simplify stub without exception[EN-106] Bridge.NET update: Errors in coroutines should not break flow, catching exceptions from user code MonoBehaviours, Added method overloads emitting[EN-629] Resources.Load support[EN-505] UnityEngine.smoothDeltaTime implementation[EN-657] Adding missing APIs and enums for Mesh and SkinnedMeshRenderer[EN-657] Support for human bones in Animator[EN-661] Dix for missing metadata on basic objects vectors, color, mat, quat[EN-658] Force C# language version limit to 7.0[UN-132] Fix JSON Infinity values serialization[EN-625] Luna web server restart after scripts reload[EN-573] Properly handle Destroy( GameObject ) / Destroy( Rigidbody ) calls[EN-671] Camera.main fixed to select camera based on tag[EN-637] Vector2/Vector3 API full implementation[EN-655] Animation Curves: Fix Infinity tangents[EN-668] Stencil states corrected[EN-652] Remove name from component DTO (removes unused data from serialized build) ","version":"Next","tagName":"h3"},{"title":"Version 0.4.1 - January 23rd, 2020​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#version-041---january-23rd-2020","content":"","version":"Next","tagName":"h2"},{"title":" New Features ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-new-features--65","content":"[EN-649] Implemented Transform.RotateAround[EN-643] Setting default cached materials for Sprite and Font[EN-644] Caching default font[EN-642] TextMesh updated using Unity.Material instead legacy pc.Material[EN-636] Cinemachine 2.2.9 &amp; 2.4.0 packages and UnityEngine.Playables and UnityEngine.Timeline mock data structures[LPG-182] Implementing 'frame' event for insights[EN-622] Implementing 'bounce' event for insights[EN-643] Exporting default font material, if exists[EN-646] Add missing modes to addLinearForceAtPosition[EN-643] Setting default cached materials for Sprite and Font[EN-627] Support nested bodies with locked positions in post-synchronization[EN-605] Support negative scales for colliders[EN-616] 2-stage pre-synchronization for dynamic and kinematic bodies[EN-621] Allow to create shallow copies of ConvexHullShape and MeshShape[EN-116] New Physics 2D APIs - Capsule (without one type of collisions), Velocity iterations get/set, Position iterations get/set, Circle cast (without circle touch points and normals) ","version":"Next","tagName":"h3"},{"title":" Fixes and improvements ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-fixes-and-improvements--72","content":"[EN-645] Raycaster returns coords in global space instead local[EN-378] Use collider's layer instead of body's layer during collision and raycasting[EN-626] Don't try to remove non-registered constraint if body was changed from kinematic to dynamic in runtime[EN-616] Prevent excessive entity dirtifying[EN-647] Use proper AABB in raycast[EN-618] Fixes for textureCoords[EN-621] Fix incorrectly overridden ._component property[EN-640] Fix for Deserealizing class without parameterless constructor[EN-378] Few minor fixes for layers[EN-623] Optimizing uv calculation in raycasts[EN-651] Disabled Debug.Ray drawing. Marked as recover[EN-633] Some general performance improvements[EN-635] Fixed slash direction when using path combine for windows environment ","version":"Next","tagName":"h3"},{"title":"Version 0.4.0 - January 15th, 2020​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#version-040---january-15th-2020","content":"","version":"Next","tagName":"h2"},{"title":" New Features ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-new-features--66","content":"[EN-612] Added support for global vector arrays (UnityEngine.Shader.SetGlobalVectorArray family)[EN-569] Added a set of particle system API methods and properties[TOOL-98] Improved performance of ad networks' builds assembly[UN-128] Added a comprehensive error message for unsupported MSBuild versions[TOOL-94] Updated version of Bridge.NET library ","version":"Next","tagName":"h3"},{"title":" Fixes and improvements ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-fixes-and-improvements--73","content":"[EN-615] Fixed stencil operation when stencil is configured for both sides of polygons[EN-311] Fixed isTrigger flag on colliders applying changes in runtime[EN-611] Added stabs for UnityEngine.Camera culling and MSAA APIs[EN-609] A more accurate vectors and colors Equals methods[EN-600] Fixed physics synchronization orders when bodies are moved from FixedUpdate callbacks[EN-608] Fixed startRotation3D property implementation of particle systems[EN-599] Fixed unneeded de-duplication of trigger and collision callbacks[EN-582] Added support for density in 2D Physics[EN-589] Improved simulation of bodies with nested colliders[EN-603] Fixed UnityEngine.EventSystems.EventTrigger.TriggerEvent class semantics[EN-602] Fixed an edge case in enabled property of UnityEngine.Component descendants[EN-601] Fixed UnityEngine.ParticleSystem.ParticleSystemColorOverLifetime class name[TOOL-97] Fixed a (rare) path name too long occurring on Windows[EN-539] Fixed distance property of UnityEngine.RaycastHit[EN-590] Fixed an edge case of loading files from Resources folder having Auto-instantiate Prefabs enabled[EN-578] Fixed synchronization of kinematic physics bodies ","version":"Next","tagName":"h3"},{"title":"Version 0.3.3 - December 25th, 2019​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#version-033---december-25th-2019","content":"","version":"Next","tagName":"h2"},{"title":" Fixes and improvements ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-fixes-and-improvements--74","content":"[TOOL-96] Fix missing sln file ","version":"Next","tagName":"h3"},{"title":"Version 0.3.2 - December 24th, 2019​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#version-032---december-24th-2019","content":"","version":"Next","tagName":"h2"},{"title":" Fixes and improvements ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-fixes-and-improvements--75","content":"[EN-588] Fixed material parameter cloning ","version":"Next","tagName":"h3"},{"title":"Version 0.3.1 - December 23rd, 2019​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#version-031---december-23rd-2019","content":"This release of Luna brings updated Luna UI into all Luna flavours as well as a few major engine improvements. ","version":"Next","tagName":"h2"},{"title":" New Features ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-new-features--67","content":"[EN-475] Support for MovePosition method in 2D Physics[EN-516] Support for body sleeping in 3D Physics[TOOL-84] Major upgrade to C# transpiler bringing proper support for generic classes parametrized with structs[EN-545] Major performance improvements of transpiled JS code, including user-land components and some parts of 3D Physics[UN-124] A bunch of minor fixes to Luna UI, including buttons' alignment and links to documentation[TOOL-89] Dramatic speed up of Playground builds[EN-562] Added beta support for UnityEngine.MaterialPropertyBlock object and related APIs[UN-113] Added shaders' statistics in terms of size taken[EN-552] Better, faster and more reliable Resources folder handling[UN-126] A set of improvements in Windows version: no symlinks by default, more reliable permission handling, built-in web server ","version":"Next","tagName":"h3"},{"title":" Fixes and improvements ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-fixes-and-improvements--76","content":"[EN-526] Fixed a crash when using Noise module in Particle Systems[EN-535] Camera APIs extended to allow for vanilla DOTween compilation[EN-540] Improved physics collision algorithm (GJK part)[EN-537] Fixed incorrect bounding box value for UnityEngine.LineRenderer[EN-536] Fixed incorrect initial time of Animator's state when switched manually[EN-538] Fixed Play() method semantics for UnityEngine.Animator[EN-534] Support for Transform.TransformPoint API[EN-533] Fixed a bunch of inconsistencies when working with sharedMaterial properties of renderers[EN-532] Support for Mathf.insideUnitCircle API[EN-530] Adding missing properties for font styling to built-in text components[EN-529] Adding a set of APIs in UnityEngine.Debug class[EN-528] Fixed incorrect inheritance structure for UnityEngine.AudioSource component[EN-524] Fixed UnityEngine.Animator updateMode property logic[EN-547] Fixed malformed renderers (lacking a material) breaking rendering[EN-548] Fixed a bug in export failing to serialize cyclic references between scriptable objects[EN-531] A set of new APIs for UnityEngine.Bounds and UnityEngine.Matrix4x4 structs[UN-125] Fixed runtime crash when font alphabets lack space character[EN-561] Added unity_NHxRoughness built-in texture[EN-563] Fixed entropy source for particle systems' noise modules previously leading to &quot;not-so-random&quot; noise[EN-564] Fixed incorrect mouse / touch event blocking by some UnityEngine.Graphics descendants[EN-566] Fixed incorrect transform calculation for nested collider hierarchies[EN-567] Added API for getting root objects of the scene[EN-571] Added support for UnityEngine.WaitWhile coroutine[EN-567] Proper support for UnityEngine.Object.FindObjectsOfType API[EN-574] Improved support for UnityEngine.Shader.SetGlobal* API family[UN-127] Disabled System.Collections.Generic.Dictionary&lt;&gt; class from being serialized ","version":"Next","tagName":"h3"},{"title":"Version 0.3.0 - December 6th, 2019​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#version-030---december-6th-2019","content":"This release of Luna brings updated Luna UI into all Luna flavours as well as a few major engine improvements. ","version":"Next","tagName":"h2"},{"title":" New Features ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-new-features--68","content":"[EN-463] Support for Continuous Collision Detection in Physics engine![UN-98] Luna UI now has links to documentation next to most of Luna UI parts[UN-85] Preview version of Dead Code Elimination is now available![UN-93] Luna UI now can upload builds to Luna Playground[UN-99] Many improvements to Luna UI: cleaner structure, more specific error messages, new Luna Expert diagnostics and so on[UN-113] Luna UI now has build size breakdown for easier estimation of assets' sizes[EN-519] Added time property to Video component[EN-518] Added a bunch of (previous missing) APIs like Mathf.PingPong, Random.rotation and so on ","version":"Next","tagName":"h3"},{"title":" Fixes and improvements ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-fixes-and-improvements--77","content":"[EN-523] Fixed a bug with reset of loop flag on Video components[EN-522] Fixed a bug with CapsuleCollider properties on C# side[EN-514] Fixed a bug in cast operators (Vector3 to Vector2) failing under specific conditions[EN-520] Fixed a bug with reusing coroutines like WaitForSeconds and WaitForSecondsRealtime[UN-89] CI now runs tests against &quot;packaged&quot; versions of Luna ","version":"Next","tagName":"h3"},{"title":"Version 0.2.2 - December 3rd, 2019​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#version-022---december-3rd-2019","content":"","version":"Next","tagName":"h2"},{"title":" New Features ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-new-features--69","content":"[UN-121] Luna can now be placed in arbitrary location on the disk[UN-111] Luna in Unity under MacOS Catalina now works out of the box ","version":"Next","tagName":"h3"},{"title":" Fixes and improvements ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-fixes-and-improvements--78","content":"[UN-100] Default plugin now includes only two platforms: development and playground to streamline the process[UN-102] &quot;Shaders&quot; tab in Luna UI has been removed as it is no longer needed[UN-116] Asset explorers now refresh automatically when new assets are added, changed or removed[UN-117] Removed warnings caused by force-including scenes[UN-118] Fixed broken font settings[UN-119] Corrected spelling on Fonts tab in UI[UN-120] Custom export settings can now be applied to animations residing in compound assets (like FBX files) and standalone clips[UN-122] Fixed compilation errors caused by [LunaPlaygroundField] attribute[UN-123] Fixed reflection on built-in math types (Vector2, Vector3 etc) ","version":"Next","tagName":"h3"},{"title":"Version 0.2.1 - November 27th, 2019​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#version-021---november-27th-2019","content":"","version":"Next","tagName":"h2"},{"title":" New Features ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-new-features--70","content":"[EN-338] Refactored Forward rendering pipeline ","version":"Next","tagName":"h3"},{"title":"Version 0.2.1 - November 27th, 2019​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#version-021---november-27th-2019-1","content":"","version":"Next","tagName":"h2"},{"title":" New Features ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-new-features--71","content":"[EN-338] Refactored Forward rendering pipeline ","version":"Next","tagName":"h3"},{"title":"Version 0.2.0 - November 22nd, 2019​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#version-020---november-22nd-2019","content":"","version":"Next","tagName":"h2"},{"title":" New Features ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-new-features--72","content":"[TOOL-82] Our 3D physics engine is now built using Google's closure compiler, which enhances stability and performance of physics simulation![TOOL-80] A more complete MRAID platform support[EN-405] 3D joints can now disable collisions between connected bodies[EN-438] 3D Character Joint support[EN-418] Support for break force and torque in 3D joints[UN-79] It's now possible to specify Playground section and its order using a new attribute, [LunaPlaygroundSection][UN-67] Having no startup scene selected now provides a meaningful error message[EN-450] Mesh-based raycasting support in 3D physics (triangle, barycentrics and texture coordinates access)[UN-81] Newtonsoft.JSON (Bridge.NET variant) is now included automatically if the project uses it[EN-251] Luna now supports OnApplicationFocus callback[EN-459] MonoBehaviour's callback invocation order is now 1:1 replica of Unity's (including all quirks)[LPG-104] Playground now supports changing playable name and icon via Web UI[LPG-106] Parameters section of Version Editor in Playground now supports re-ordering and renaming of sections and parameters in place ","version":"Next","tagName":"h3"},{"title":" Fixes and improvements ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-fixes-and-improvements--79","content":"[EN-404] A bunch of stability improvements around 3D joints logic[EN-408] Fixed crash in Desktop TextMeshPro shader (outline case)[EN-116] 2D colliders bug fixes and stabilisation[UN-78] Fixed prefab handling when those are created out of an FBX files with multiple sub-meshes[EN-454] Fixed Resources.FindResourceByPath method[TOOL-87] Fixed File name is too long message affecting some Windows users[EN-461] Fixed raycasting of 3D bodies right after instantiation[EN-467] Fixed ill behaviour of OnDisable and OnDestroy callbacks[UN-83] RuntimeScripts folder is now symlinked relatively and is git-friendly[EN-472] GetComponent&lt;&gt; method family now properly supports physics components[EN-474] Fixed handling of UnityEngine.ParticleSystem.MinMaxGradient, UnityEngine.AnimationCurve and UnityEngine.GradientMode in user's code[EN-116] A multitude of 2D physics fixes and improvements ","version":"Next","tagName":"h3"},{"title":"Version 0.1.1 - November 5th, 2019​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#version-011---november-5th-2019","content":"","version":"Next","tagName":"h2"},{"title":" New Features ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-new-features--73","content":"[EN-419] Physics.CheckSphere API[EN-413] A set of casting APIs (Physics.SphereCastNonAlloc, Collider.ClosestPoint, Collider.Raycast, Physics.ComputePenetration etc)[EN-401] Partial Cinemachine support[EN-74] Mintegral, Tiktok and MRAID deployment support ","version":"Next","tagName":"h3"},{"title":" Fixes and improvements ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-fixes-and-improvements--80","content":"[EN-241] More descriptive messages in CLI interface for certain cases[EN-355] Half-precision floats for animation clips[EN-416] Fixed incorrect draw order upon active status change of UI subtree[EN-401] A set of math methods (Quaternion.LerpUnclamped, Quaternion.xyz etc)[EN-412] Fixed random sprite sheet row pickup[EN-411] Fixed an intermittent skipping of a trigger in Mecanim[EN-410] Fixed pointer events' order[EN-409] Fixed crash when attempting to play an animation[EN-404] Stability improvements for 3D Physics joints[EN-405] Support for collision flag on 3D Physics joints[EN-399] A set of fixes and stabilization amendments for RectTransform layout logic ","version":"Next","tagName":"h3"},{"title":"Version 0.1.0 - October 11th, 2019​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#version-010---october-11th-2019","content":"","version":"Next","tagName":"h2"},{"title":" New Features ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-new-features--74","content":"[UN-70] Unified support for sprite atlases for both 2018.x and 2019.x family[EN-364] Support for &quot;desktop&quot; variants of TextMeshPro shaders[EN-366] Added object names' markers to Spector.js output[EN-370] Support for debug drawing (rays, wired primitives, breakpoints)[EN-371] All user code and basic math structs are now reflectable by default[EN-350] An optional setting allowing for half-precision mesh data[TOOL-62] Luna UI enhancements: cleaner log outputs, more obvious error reporting, click-to-open solution file[TOOL-61] New preloader UI and additional configuration options ","version":"Next","tagName":"h3"},{"title":" Fixes and improvements ​","type":1,"pageTitle":"Release Notes - Playable Plugin","url":"/docs/playable/release-notes#-fixes-and-improvements--81","content":"[EN-272] Proper handling of concave meshes' collisions[EN-348] Fixing inconsistent BoxCollider settings when collider updates in runtime[EN-349] Fixing transform property of UnityEngine.RaycastHit object[EN-344] Improved startup performance of mesh colliders[EN-362] Unified handling of collision and trigger events[EN-368] Implementing Fade mode of Standard Material[EN-369] Fixing UnityEngine.Camera.ScreenPointToRay method[EN-365] Fixing Physics 3D joins (hinge, fixed, spring and character)[EN-374] Support for &quot;plain&quot; ambient color (for non-SH shaders)[EN-324] A set of startup time improvements[EN-381] Fixing UnityEngine.Material.color property[EN-382] Fixing material parameters leakage upon cloning a material[EN-376] Fixing collisions between degenerated capsules and other bodies ","version":"Next","tagName":"h3"}],"options":{"excludeRoutes":["**/common-issues/**"],"id":"default"}}